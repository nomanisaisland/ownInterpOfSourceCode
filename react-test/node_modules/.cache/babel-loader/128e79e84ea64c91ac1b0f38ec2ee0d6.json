{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n\n/**\r\n * These variables store information about text content of a target node,\r\n * allowing comparison of content before and after a given event.\r\n *\r\n * Identify the node where selection currently begins, then observe\r\n * both its text content and its current position in the DOM. Since the\r\n * browser may natively replace the target node during composition, we can\r\n * use its position to find its replacement.\r\n *\r\n *\r\n */\nlet root = null;\nlet startText = null;\nlet fallbackText = null;\nexport function initialize(nativeEventTarget) {\n  root = nativeEventTarget;\n  startText = getText();\n  return true;\n}\nexport function reset() {\n  root = null;\n  startText = null;\n  fallbackText = null;\n}\nexport function getData() {\n  if (fallbackText) {\n    return fallbackText;\n  }\n\n  let start;\n  const startValue = startText;\n  const startLength = startValue.length;\n  let end;\n  const endValue = getText();\n  const endLength = endValue.length;\n\n  for (start = 0; start < startLength; start++) {\n    if (startValue[start] !== endValue[start]) {\n      break;\n    }\n  }\n\n  const minEnd = startLength - start;\n\n  for (end = 1; end <= minEnd; end++) {\n    if (startValue[startLength - end] !== endValue[endLength - end]) {\n      break;\n    }\n  }\n\n  const sliceTail = end > 1 ? 1 - end : undefined;\n  fallbackText = endValue.slice(start, sliceTail);\n  return fallbackText;\n}\nexport function getText() {\n  if ('value' in root) {\n    return root.value;\n  }\n\n  return root.textContent;\n}","map":{"version":3,"names":["root","startText","fallbackText","initialize","nativeEventTarget","getText","reset","getData","start","startValue","startLength","length","end","endValue","endLength","minEnd","sliceTail","undefined","slice","value","textContent"],"sources":["E:/react-test/src/react/packages/react-dom/src/events/FallbackCompositionState.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/**\r\n * These variables store information about text content of a target node,\r\n * allowing comparison of content before and after a given event.\r\n *\r\n * Identify the node where selection currently begins, then observe\r\n * both its text content and its current position in the DOM. Since the\r\n * browser may natively replace the target node during composition, we can\r\n * use its position to find its replacement.\r\n *\r\n *\r\n */\r\n\r\nlet root = null;\r\nlet startText = null;\r\nlet fallbackText = null;\r\n\r\nexport function initialize(nativeEventTarget) {\r\n  root = nativeEventTarget;\r\n  startText = getText();\r\n  return true;\r\n}\r\n\r\nexport function reset() {\r\n  root = null;\r\n  startText = null;\r\n  fallbackText = null;\r\n}\r\n\r\nexport function getData() {\r\n  if (fallbackText) {\r\n    return fallbackText;\r\n  }\r\n\r\n  let start;\r\n  const startValue = startText;\r\n  const startLength = startValue.length;\r\n  let end;\r\n  const endValue = getText();\r\n  const endLength = endValue.length;\r\n\r\n  for (start = 0; start < startLength; start++) {\r\n    if (startValue[start] !== endValue[start]) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  const minEnd = startLength - start;\r\n  for (end = 1; end <= minEnd; end++) {\r\n    if (startValue[startLength - end] !== endValue[endLength - end]) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  const sliceTail = end > 1 ? 1 - end : undefined;\r\n  fallbackText = endValue.slice(start, sliceTail);\r\n  return fallbackText;\r\n}\r\n\r\nexport function getText() {\r\n  if ('value' in root) {\r\n    return root.value;\r\n  }\r\n  return root.textContent;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,IAAI,GAAG,IAAX;AACA,IAAIC,SAAS,GAAG,IAAhB;AACA,IAAIC,YAAY,GAAG,IAAnB;AAEA,OAAO,SAASC,UAAT,CAAoBC,iBAApB,EAAuC;EAC5CJ,IAAI,GAAGI,iBAAP;EACAH,SAAS,GAAGI,OAAO,EAAnB;EACA,OAAO,IAAP;AACD;AAED,OAAO,SAASC,KAAT,GAAiB;EACtBN,IAAI,GAAG,IAAP;EACAC,SAAS,GAAG,IAAZ;EACAC,YAAY,GAAG,IAAf;AACD;AAED,OAAO,SAASK,OAAT,GAAmB;EACxB,IAAIL,YAAJ,EAAkB;IAChB,OAAOA,YAAP;EACD;;EAED,IAAIM,KAAJ;EACA,MAAMC,UAAU,GAAGR,SAAnB;EACA,MAAMS,WAAW,GAAGD,UAAU,CAACE,MAA/B;EACA,IAAIC,GAAJ;EACA,MAAMC,QAAQ,GAAGR,OAAO,EAAxB;EACA,MAAMS,SAAS,GAAGD,QAAQ,CAACF,MAA3B;;EAEA,KAAKH,KAAK,GAAG,CAAb,EAAgBA,KAAK,GAAGE,WAAxB,EAAqCF,KAAK,EAA1C,EAA8C;IAC5C,IAAIC,UAAU,CAACD,KAAD,CAAV,KAAsBK,QAAQ,CAACL,KAAD,CAAlC,EAA2C;MACzC;IACD;EACF;;EAED,MAAMO,MAAM,GAAGL,WAAW,GAAGF,KAA7B;;EACA,KAAKI,GAAG,GAAG,CAAX,EAAcA,GAAG,IAAIG,MAArB,EAA6BH,GAAG,EAAhC,EAAoC;IAClC,IAAIH,UAAU,CAACC,WAAW,GAAGE,GAAf,CAAV,KAAkCC,QAAQ,CAACC,SAAS,GAAGF,GAAb,CAA9C,EAAiE;MAC/D;IACD;EACF;;EAED,MAAMI,SAAS,GAAGJ,GAAG,GAAG,CAAN,GAAU,IAAIA,GAAd,GAAoBK,SAAtC;EACAf,YAAY,GAAGW,QAAQ,CAACK,KAAT,CAAeV,KAAf,EAAsBQ,SAAtB,CAAf;EACA,OAAOd,YAAP;AACD;AAED,OAAO,SAASG,OAAT,GAAmB;EACxB,IAAI,WAAWL,IAAf,EAAqB;IACnB,OAAOA,IAAI,CAACmB,KAAZ;EACD;;EACD,OAAOnB,IAAI,CAACoB,WAAZ;AACD"},"metadata":{},"sourceType":"module"}