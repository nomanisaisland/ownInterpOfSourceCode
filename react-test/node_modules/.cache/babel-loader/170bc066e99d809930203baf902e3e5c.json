{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport { getCurrentFiberOwnerNameInDevOrNull } from 'react-reconciler/src/ReactCurrentFiber';\nimport { checkControlledValueProps } from '../shared/ReactControlledValuePropTypes';\nimport { getToStringValue, toString } from './ToStringValue';\nimport assign from 'shared/assign';\nimport isArray from 'shared/isArray';\nlet didWarnValueDefaultValue;\n\nif (__DEV__) {\n  didWarnValueDefaultValue = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n\n  if (ownerName) {\n    return '\\n\\nCheck the render method of `' + ownerName + '`.';\n  }\n\n  return '';\n}\n\nconst valuePropNames = ['value', 'defaultValue'];\n/**\r\n * Validation function for `value` and `defaultValue`.\r\n */\n\nfunction checkSelectPropTypes(props) {\n  if (__DEV__) {\n    checkControlledValueProps('select', props);\n\n    for (let i = 0; i < valuePropNames.length; i++) {\n      const propName = valuePropNames[i];\n\n      if (props[propName] == null) {\n        continue;\n      }\n\n      const propNameIsArray = isArray(props[propName]);\n\n      if (props.multiple && !propNameIsArray) {\n        console.error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());\n      } else if (!props.multiple && propNameIsArray) {\n        console.error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());\n      }\n    }\n  }\n}\n\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  const options = node.options;\n\n  if (multiple) {\n    const selectedValues = propValue;\n    const selectedValue = {};\n\n    for (let i = 0; i < selectedValues.length; i++) {\n      // Prefix to avoid chaos with special keys.\n      selectedValue['$' + selectedValues[i]] = true;\n    }\n\n    for (let i = 0; i < options.length; i++) {\n      const selected = selectedValue.hasOwnProperty('$' + options[i].value);\n\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n\n      if (selected && setDefaultSelected) {\n        options[i].defaultSelected = true;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    const selectedValue = toString(getToStringValue(propValue));\n    let defaultSelected = null;\n\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n\n        if (setDefaultSelected) {\n          options[i].defaultSelected = true;\n        }\n\n        return;\n      }\n\n      if (defaultSelected === null && !options[i].disabled) {\n        defaultSelected = options[i];\n      }\n    }\n\n    if (defaultSelected !== null) {\n      defaultSelected.selected = true;\n    }\n  }\n}\n/**\r\n * Implements a <select> host component that allows optionally setting the\r\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\r\n * stringable. If `multiple` is true, the prop must be an array of stringables.\r\n *\r\n * If `value` is not supplied (or null/undefined), user actions that change the\r\n * selected option will trigger updates to the rendered options.\r\n *\r\n * If it is supplied (and not null/undefined), the rendered options will not\r\n * update in response to user actions. Instead, the `value` prop must change in\r\n * order for the rendered options to update.\r\n *\r\n * If `defaultValue` is provided, any options with the supplied values will be\r\n * selected.\r\n */\n\n\nexport function getHostProps(element, props) {\n  return assign({}, props, {\n    value: undefined\n  });\n}\nexport function initWrapperState(element, props) {\n  const node = element;\n\n  if (__DEV__) {\n    checkSelectPropTypes(props);\n  }\n\n  node._wrapperState = {\n    wasMultiple: !!props.multiple\n  };\n\n  if (__DEV__) {\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n      console.error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');\n      didWarnValueDefaultValue = true;\n    }\n  }\n}\nexport function postMountWrapper(element, props) {\n  const node = element;\n  node.multiple = !!props.multiple;\n  const value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (props.defaultValue != null) {\n    updateOptions(node, !!props.multiple, props.defaultValue, true);\n  }\n}\nexport function postUpdateWrapper(element, props) {\n  const node = element;\n  const wasMultiple = node._wrapperState.wasMultiple;\n  node._wrapperState.wasMultiple = !!props.multiple;\n  const value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (wasMultiple !== !!props.multiple) {\n    // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n    if (props.defaultValue != null) {\n      updateOptions(node, !!props.multiple, props.defaultValue, true);\n    } else {\n      // Revert the select back to its default unselected state.\n      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);\n    }\n  }\n}\nexport function restoreControlledState(element, props) {\n  const node = element;\n  const value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  }\n}","map":{"version":3,"names":["getCurrentFiberOwnerNameInDevOrNull","checkControlledValueProps","getToStringValue","toString","assign","isArray","didWarnValueDefaultValue","__DEV__","getDeclarationErrorAddendum","ownerName","valuePropNames","checkSelectPropTypes","props","i","length","propName","propNameIsArray","multiple","console","error","updateOptions","node","propValue","setDefaultSelected","options","selectedValues","selectedValue","selected","hasOwnProperty","value","defaultSelected","disabled","getHostProps","element","undefined","initWrapperState","_wrapperState","wasMultiple","defaultValue","postMountWrapper","postUpdateWrapper","restoreControlledState"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/react-dom/src/client/ReactDOMSelect.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// TODO: direct imports like some-package/src/* are bad. Fix me.\r\nimport {getCurrentFiberOwnerNameInDevOrNull} from 'react-reconciler/src/ReactCurrentFiber';\r\n\r\nimport {checkControlledValueProps} from '../shared/ReactControlledValuePropTypes';\r\nimport {getToStringValue, toString} from './ToStringValue';\r\nimport assign from 'shared/assign';\r\nimport isArray from 'shared/isArray';\r\n\r\nlet didWarnValueDefaultValue;\r\n\r\nif (__DEV__) {\r\n  didWarnValueDefaultValue = false;\r\n}\r\n\r\ntype SelectWithWrapperState = HTMLSelectElement & {|\r\n  _wrapperState: {|wasMultiple: boolean|},\r\n|};\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  const ownerName = getCurrentFiberOwnerNameInDevOrNull();\r\n  if (ownerName) {\r\n    return '\\n\\nCheck the render method of `' + ownerName + '`.';\r\n  }\r\n  return '';\r\n}\r\n\r\nconst valuePropNames = ['value', 'defaultValue'];\r\n\r\n/**\r\n * Validation function for `value` and `defaultValue`.\r\n */\r\nfunction checkSelectPropTypes(props) {\r\n  if (__DEV__) {\r\n    checkControlledValueProps('select', props);\r\n\r\n    for (let i = 0; i < valuePropNames.length; i++) {\r\n      const propName = valuePropNames[i];\r\n      if (props[propName] == null) {\r\n        continue;\r\n      }\r\n      const propNameIsArray = isArray(props[propName]);\r\n      if (props.multiple && !propNameIsArray) {\r\n        console.error(\r\n          'The `%s` prop supplied to <select> must be an array if ' +\r\n            '`multiple` is true.%s',\r\n          propName,\r\n          getDeclarationErrorAddendum(),\r\n        );\r\n      } else if (!props.multiple && propNameIsArray) {\r\n        console.error(\r\n          'The `%s` prop supplied to <select> must be a scalar ' +\r\n            'value if `multiple` is false.%s',\r\n          propName,\r\n          getDeclarationErrorAddendum(),\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateOptions(\r\n  node: HTMLSelectElement,\r\n  multiple: boolean,\r\n  propValue: any,\r\n  setDefaultSelected: boolean,\r\n) {\r\n  type IndexableHTMLOptionsCollection = HTMLOptionsCollection & {\r\n    [key: number]: HTMLOptionElement,\r\n    ...,\r\n  };\r\n  const options: IndexableHTMLOptionsCollection = node.options;\r\n\r\n  if (multiple) {\r\n    const selectedValues = (propValue: Array<string>);\r\n    const selectedValue = {};\r\n    for (let i = 0; i < selectedValues.length; i++) {\r\n      // Prefix to avoid chaos with special keys.\r\n      selectedValue['$' + selectedValues[i]] = true;\r\n    }\r\n    for (let i = 0; i < options.length; i++) {\r\n      const selected = selectedValue.hasOwnProperty('$' + options[i].value);\r\n      if (options[i].selected !== selected) {\r\n        options[i].selected = selected;\r\n      }\r\n      if (selected && setDefaultSelected) {\r\n        options[i].defaultSelected = true;\r\n      }\r\n    }\r\n  } else {\r\n    // Do not set `select.value` as exact behavior isn't consistent across all\r\n    // browsers for all cases.\r\n    const selectedValue = toString(getToStringValue((propValue: any)));\r\n    let defaultSelected = null;\r\n    for (let i = 0; i < options.length; i++) {\r\n      if (options[i].value === selectedValue) {\r\n        options[i].selected = true;\r\n        if (setDefaultSelected) {\r\n          options[i].defaultSelected = true;\r\n        }\r\n        return;\r\n      }\r\n      if (defaultSelected === null && !options[i].disabled) {\r\n        defaultSelected = options[i];\r\n      }\r\n    }\r\n    if (defaultSelected !== null) {\r\n      defaultSelected.selected = true;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Implements a <select> host component that allows optionally setting the\r\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\r\n * stringable. If `multiple` is true, the prop must be an array of stringables.\r\n *\r\n * If `value` is not supplied (or null/undefined), user actions that change the\r\n * selected option will trigger updates to the rendered options.\r\n *\r\n * If it is supplied (and not null/undefined), the rendered options will not\r\n * update in response to user actions. Instead, the `value` prop must change in\r\n * order for the rendered options to update.\r\n *\r\n * If `defaultValue` is provided, any options with the supplied values will be\r\n * selected.\r\n */\r\n\r\nexport function getHostProps(element: Element, props: Object) {\r\n  return assign({}, props, {\r\n    value: undefined,\r\n  });\r\n}\r\n\r\nexport function initWrapperState(element: Element, props: Object) {\r\n  const node = ((element: any): SelectWithWrapperState);\r\n  if (__DEV__) {\r\n    checkSelectPropTypes(props);\r\n  }\r\n\r\n  node._wrapperState = {\r\n    wasMultiple: !!props.multiple,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    if (\r\n      props.value !== undefined &&\r\n      props.defaultValue !== undefined &&\r\n      !didWarnValueDefaultValue\r\n    ) {\r\n      console.error(\r\n        'Select elements must be either controlled or uncontrolled ' +\r\n          '(specify either the value prop, or the defaultValue prop, but not ' +\r\n          'both). Decide between using a controlled or uncontrolled select ' +\r\n          'element and remove one of these props. More info: ' +\r\n          'https://reactjs.org/link/controlled-components',\r\n      );\r\n      didWarnValueDefaultValue = true;\r\n    }\r\n  }\r\n}\r\n\r\nexport function postMountWrapper(element: Element, props: Object) {\r\n  const node = ((element: any): SelectWithWrapperState);\r\n  node.multiple = !!props.multiple;\r\n  const value = props.value;\r\n  if (value != null) {\r\n    updateOptions(node, !!props.multiple, value, false);\r\n  } else if (props.defaultValue != null) {\r\n    updateOptions(node, !!props.multiple, props.defaultValue, true);\r\n  }\r\n}\r\n\r\nexport function postUpdateWrapper(element: Element, props: Object) {\r\n  const node = ((element: any): SelectWithWrapperState);\r\n  const wasMultiple = node._wrapperState.wasMultiple;\r\n  node._wrapperState.wasMultiple = !!props.multiple;\r\n\r\n  const value = props.value;\r\n  if (value != null) {\r\n    updateOptions(node, !!props.multiple, value, false);\r\n  } else if (wasMultiple !== !!props.multiple) {\r\n    // For simplicity, reapply `defaultValue` if `multiple` is toggled.\r\n    if (props.defaultValue != null) {\r\n      updateOptions(node, !!props.multiple, props.defaultValue, true);\r\n    } else {\r\n      // Revert the select back to its default unselected state.\r\n      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);\r\n    }\r\n  }\r\n}\r\n\r\nexport function restoreControlledState(element: Element, props: Object) {\r\n  const node = ((element: any): SelectWithWrapperState);\r\n  const value = props.value;\r\n\r\n  if (value != null) {\r\n    updateOptions(node, !!props.multiple, value, false);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}