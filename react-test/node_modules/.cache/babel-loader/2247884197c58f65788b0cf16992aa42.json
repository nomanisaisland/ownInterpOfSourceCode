{"ast":null,"code":"/**\r\n * @Author: lujiafeng\r\n * @Date: 2022-07-09 17:48:34\r\n * @LastEditTime: 2022-09-01 16:48:42\r\n * @LastEditors: lujiafeng\r\n * @Description: \r\n * @FilePath: \\debug-anything\\react-test\\src\\react\\packages\\react-reconciler\\src\\ReactEventPriorities.old.js\r\n * @可以输入预定的版权声明、个性签名、空行等\r\n */\n\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport { NoLane, SyncLane, InputContinuousLane, DefaultLane, IdleLane, getHighestPriorityLane, includesNonIdleWork } from './ReactFiberLane.old';\nexport const DiscreteEventPriority = SyncLane;\nexport const ContinuousEventPriority = InputContinuousLane;\nexport const DefaultEventPriority = DefaultLane;\nexport const IdleEventPriority = IdleLane;\nlet currentUpdatePriority = NoLane;\n/**\r\n * getCurrentUpdatePriority 方法的作用如下：\r\n * 1. 获取当前任务更新的优先级\r\n*/\n\nexport function getCurrentUpdatePriority() {\n  return currentUpdatePriority;\n}\nexport function setCurrentUpdatePriority(newPriority) {\n  currentUpdatePriority = newPriority;\n}\n/**\r\n * runWithPriority方法\r\n * 接收两个参数：\r\n * 1. priority：需要设置的优先级\r\n * 2. fn：接收一个被设置优先级的方法\r\n * 作用如下：\r\n * 1. 设置当前更新任务的优先级\r\n * 2. 返回并且执行接收的方法fn\r\n*/\n\nexport function runWithPriority(priority, fn) {\n  console.log(33333);\n  const previousPriority = currentUpdatePriority;\n\n  try {\n    currentUpdatePriority = priority;\n    return fn();\n  } finally {\n    currentUpdatePriority = previousPriority;\n  }\n}\nexport function higherEventPriority(a, b) {\n  return a !== 0 && a < b ? a : b;\n}\nexport function lowerEventPriority(a, b) {\n  return a === 0 || a > b ? a : b;\n}\nexport function isHigherEventPriority(a, b) {\n  return a !== 0 && a < b;\n}\nexport function lanesToEventPriority(lanes) {\n  const lane = getHighestPriorityLane(lanes);\n\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n    return DiscreteEventPriority;\n  }\n\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n    return ContinuousEventPriority;\n  }\n\n  if (includesNonIdleWork(lane)) {\n    return DefaultEventPriority;\n  }\n\n  return IdleEventPriority;\n}","map":{"version":3,"names":["NoLane","SyncLane","InputContinuousLane","DefaultLane","IdleLane","getHighestPriorityLane","includesNonIdleWork","DiscreteEventPriority","ContinuousEventPriority","DefaultEventPriority","IdleEventPriority","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","runWithPriority","priority","fn","console","log","previousPriority","higherEventPriority","a","b","lowerEventPriority","isHigherEventPriority","lanesToEventPriority","lanes","lane"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/react-reconciler/src/ReactEventPriorities.old.js"],"sourcesContent":["/**\r\n * @Author: lujiafeng\r\n * @Date: 2022-07-09 17:48:34\r\n * @LastEditTime: 2022-09-01 16:48:42\r\n * @LastEditors: lujiafeng\r\n * @Description: \r\n * @FilePath: \\debug-anything\\react-test\\src\\react\\packages\\react-reconciler\\src\\ReactEventPriorities.old.js\r\n * @可以输入预定的版权声明、个性签名、空行等\r\n */\r\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Lane, Lanes} from './ReactFiberLane.old';\r\n\r\nimport {\r\n  NoLane,\r\n  SyncLane,\r\n  InputContinuousLane,\r\n  DefaultLane,\r\n  IdleLane,\r\n  getHighestPriorityLane,\r\n  includesNonIdleWork,\r\n} from './ReactFiberLane.old';\r\n\r\nexport opaque type EventPriority = Lane;\r\n\r\nexport const DiscreteEventPriority: EventPriority = SyncLane;\r\nexport const ContinuousEventPriority: EventPriority = InputContinuousLane;\r\nexport const DefaultEventPriority: EventPriority = DefaultLane;\r\nexport const IdleEventPriority: EventPriority = IdleLane;\r\n\r\nlet currentUpdatePriority: EventPriority = NoLane;\r\n\r\n\r\n/**\r\n * getCurrentUpdatePriority 方法的作用如下：\r\n * 1. 获取当前任务更新的优先级\r\n*/\r\nexport function getCurrentUpdatePriority(): EventPriority {\r\n  return currentUpdatePriority;\r\n}\r\n\r\nexport function setCurrentUpdatePriority(newPriority: EventPriority) {\r\n  currentUpdatePriority = newPriority;\r\n}\r\n\r\n/**\r\n * runWithPriority方法\r\n * 接收两个参数：\r\n * 1. priority：需要设置的优先级\r\n * 2. fn：接收一个被设置优先级的方法\r\n * 作用如下：\r\n * 1. 设置当前更新任务的优先级\r\n * 2. 返回并且执行接收的方法fn\r\n*/\r\nexport function runWithPriority<T>(priority: EventPriority, fn: () => T): T {\r\n  console.log(33333)\r\n  const previousPriority = currentUpdatePriority;\r\n  try {\r\n    currentUpdatePriority = priority;\r\n    return fn();\r\n  } finally {\r\n    currentUpdatePriority = previousPriority;\r\n  }\r\n}\r\n\r\nexport function higherEventPriority(\r\n  a: EventPriority,\r\n  b: EventPriority,\r\n): EventPriority {\r\n  return a !== 0 && a < b ? a : b;\r\n}\r\n\r\nexport function lowerEventPriority(\r\n  a: EventPriority,\r\n  b: EventPriority,\r\n): EventPriority {\r\n  return a === 0 || a > b ? a : b;\r\n}\r\n\r\nexport function isHigherEventPriority(\r\n  a: EventPriority,\r\n  b: EventPriority,\r\n): boolean {\r\n  return a !== 0 && a < b;\r\n}\r\n\r\nexport function lanesToEventPriority(lanes: Lanes): EventPriority {\r\n  const lane = getHighestPriorityLane(lanes);\r\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\r\n    return DiscreteEventPriority;\r\n  }\r\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\r\n    return ContinuousEventPriority;\r\n  }\r\n  if (includesNonIdleWork(lane)) {\r\n    return DefaultEventPriority;\r\n  }\r\n  return IdleEventPriority;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,SACEA,MADF,EAEEC,QAFF,EAGEC,mBAHF,EAIEC,WAJF,EAKEC,QALF,EAMEC,sBANF,EAOEC,mBAPF,QAQO,sBARP;AAYA,OAAO,MAAMC,qBAAoC,GAAGN,QAA7C;AACP,OAAO,MAAMO,uBAAsC,GAAGN,mBAA/C;AACP,OAAO,MAAMO,oBAAmC,GAAGN,WAA5C;AACP,OAAO,MAAMO,iBAAgC,GAAGN,QAAzC;AAEP,IAAIO,qBAAoC,GAAGX,MAA3C;AAGA;AACA;AACA;AACA;;AACA,OAAO,SAASY,wBAAT,GAAmD;EACxD,OAAOD,qBAAP;AACD;AAED,OAAO,SAASE,wBAAT,CAAkCC,WAAlC,EAA8D;EACnEH,qBAAqB,GAAGG,WAAxB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAA4BC,QAA5B,EAAqDC,EAArD,EAAqE;EAC1EC,OAAO,CAACC,GAAR,CAAY,KAAZ;EACA,MAAMC,gBAAgB,GAAGT,qBAAzB;;EACA,IAAI;IACFA,qBAAqB,GAAGK,QAAxB;IACA,OAAOC,EAAE,EAAT;EACD,CAHD,SAGU;IACRN,qBAAqB,GAAGS,gBAAxB;EACD;AACF;AAED,OAAO,SAASC,mBAAT,CACLC,CADK,EAELC,CAFK,EAGU;EACf,OAAOD,CAAC,KAAK,CAAN,IAAWA,CAAC,GAAGC,CAAf,GAAmBD,CAAnB,GAAuBC,CAA9B;AACD;AAED,OAAO,SAASC,kBAAT,CACLF,CADK,EAELC,CAFK,EAGU;EACf,OAAOD,CAAC,KAAK,CAAN,IAAWA,CAAC,GAAGC,CAAf,GAAmBD,CAAnB,GAAuBC,CAA9B;AACD;AAED,OAAO,SAASE,qBAAT,CACLH,CADK,EAELC,CAFK,EAGI;EACT,OAAOD,CAAC,KAAK,CAAN,IAAWA,CAAC,GAAGC,CAAtB;AACD;AAED,OAAO,SAASG,oBAAT,CAA8BC,KAA9B,EAA2D;EAChE,MAAMC,IAAI,GAAGvB,sBAAsB,CAACsB,KAAD,CAAnC;;EACA,IAAI,CAACF,qBAAqB,CAAClB,qBAAD,EAAwBqB,IAAxB,CAA1B,EAAyD;IACvD,OAAOrB,qBAAP;EACD;;EACD,IAAI,CAACkB,qBAAqB,CAACjB,uBAAD,EAA0BoB,IAA1B,CAA1B,EAA2D;IACzD,OAAOpB,uBAAP;EACD;;EACD,IAAIF,mBAAmB,CAACsB,IAAD,CAAvB,EAA+B;IAC7B,OAAOnB,oBAAP;EACD;;EACD,OAAOC,iBAAP;AACD"},"metadata":{},"sourceType":"module"}