{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport { registrationNameDependencies, possibleRegistrationNames } from '../events/EventRegistry';\nimport { canUseDOM } from 'shared/ExecutionEnvironment';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport { checkHtmlStringCoercion } from 'shared/CheckStringCoercion';\nimport { getValueForAttribute, getValueForProperty, setValueForProperty } from './DOMPropertyOperations';\nimport { initWrapperState as ReactDOMInputInitWrapperState, getHostProps as ReactDOMInputGetHostProps, postMountWrapper as ReactDOMInputPostMountWrapper, updateChecked as ReactDOMInputUpdateChecked, updateWrapper as ReactDOMInputUpdateWrapper, restoreControlledState as ReactDOMInputRestoreControlledState } from './ReactDOMInput';\nimport { postMountWrapper as ReactDOMOptionPostMountWrapper, validateProps as ReactDOMOptionValidateProps } from './ReactDOMOption';\nimport { initWrapperState as ReactDOMSelectInitWrapperState, getHostProps as ReactDOMSelectGetHostProps, postMountWrapper as ReactDOMSelectPostMountWrapper, restoreControlledState as ReactDOMSelectRestoreControlledState, postUpdateWrapper as ReactDOMSelectPostUpdateWrapper } from './ReactDOMSelect';\nimport { initWrapperState as ReactDOMTextareaInitWrapperState, getHostProps as ReactDOMTextareaGetHostProps, postMountWrapper as ReactDOMTextareaPostMountWrapper, updateWrapper as ReactDOMTextareaUpdateWrapper, restoreControlledState as ReactDOMTextareaRestoreControlledState } from './ReactDOMTextarea';\nimport { track } from './inputValueTracking';\nimport setInnerHTML from './setInnerHTML';\nimport setTextContent from './setTextContent';\nimport { createDangerousStringForStyles, setValueForStyles, validateShorthandPropertyCollisionInDev } from './CSSPropertyOperations';\nimport { HTML_NAMESPACE, getIntrinsicNamespace } from '../shared/DOMNamespaces';\nimport { getPropertyInfo, shouldIgnoreAttribute, shouldRemoveAttribute } from '../shared/DOMProperty';\nimport assertValidProps from '../shared/assertValidProps';\nimport { DOCUMENT_NODE } from '../shared/HTMLNodeType';\nimport isCustomComponent from '../shared/isCustomComponent';\nimport possibleStandardNames from '../shared/possibleStandardNames';\nimport { validateProperties as validateARIAProperties } from '../shared/ReactDOMInvalidARIAHook';\nimport { validateProperties as validateInputProperties } from '../shared/ReactDOMNullInputValuePropHook';\nimport { validateProperties as validateUnknownProperties } from '../shared/ReactDOMUnknownPropertyHook';\nimport { enableTrustedTypesIntegration, enableCustomElementPropertySupport, enableClientRenderFallbackOnTextMismatch } from 'shared/ReactFeatureFlags';\nimport { mediaEventTypes, listenToNonDelegatedEvent } from '../events/DOMPluginEventSystem';\nlet didWarnInvalidHydration = false;\nlet didWarnScriptTags = false;\nconst DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\nconst SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\nconst SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\nconst AUTOFOCUS = 'autoFocus';\nconst CHILDREN = 'children';\nconst STYLE = 'style';\nconst HTML = '__html';\nlet warnedUnknownTags;\nlet validatePropertiesInDevelopment;\nlet warnForPropDifference;\nlet warnForExtraAttributes;\nlet warnForInvalidEventListener;\nlet canDiffStyleForHydrationWarning;\nlet normalizeHTML;\n\nif (__DEV__) {\n  warnedUnknownTags = {\n    // There are working polyfills for <dialog>. Let people use it.\n    dialog: true,\n    // Electron ships a custom <webview> tag to display external web content in\n    // an isolated frame and process.\n    // This tag is not present in non Electron environments such as JSDom which\n    // is often used for testing purposes.\n    // @see https://electronjs.org/docs/api/webview-tag\n    webview: true\n  };\n\n  validatePropertiesInDevelopment = function (type, props) {\n    validateARIAProperties(type, props);\n    validateInputProperties(type, props);\n    validateUnknownProperties(type, props, {\n      registrationNameDependencies,\n      possibleRegistrationNames\n    });\n  }; // IE 11 parses & normalizes the style attribute as opposed to other\n  // browsers. It adds spaces and sorts the properties in some\n  // non-alphabetical order. Handling that would require sorting CSS\n  // properties in the client & server versions or applying\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\n  // normalized. Since it only affects IE, we're skipping style warnings\n  // in that browser completely in favor of doing all that work.\n  // See https://github.com/facebook/react/issues/11807\n\n\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;\n\n  warnForPropDifference = function (propName, serverValue, clientValue) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    const normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);\n    const normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);\n\n    if (normalizedServerValue === normalizedClientValue) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));\n  };\n\n  warnForExtraAttributes = function (attributeNames) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    const names = [];\n    attributeNames.forEach(function (name) {\n      names.push(name);\n    });\n    console.error('Extra attributes from the server: %s', names);\n  };\n\n  warnForInvalidEventListener = function (registrationName, listener) {\n    if (listener === false) {\n      console.error('Expected `%s` listener to be a function, instead got `false`.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);\n    } else {\n      console.error('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);\n    }\n  }; // Parse the HTML and read it back to normalize the HTML string so that it\n  // can be used for comparison.\n\n\n  normalizeHTML = function (parent, html) {\n    // We could have created a separate document here to avoid\n    // re-initializing custom elements if they exist. But this breaks\n    // how <noscript> is being handled. So we use the same document.\n    // See the discussion in https://github.com/facebook/react/pull/11157.\n    const testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);\n    testElement.innerHTML = html;\n    return testElement.innerHTML;\n  };\n} // HTML parsing normalizes CR and CRLF to LF.\n// It also can turn \\u0000 into \\uFFFD inside attributes.\n// https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\n// If we have a mismatch, it might be caused by that.\n// We will still patch up in this case but not fire the warning.\n\n\nconst NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\nconst NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\n\nfunction normalizeMarkupForTextOrAttribute(markup) {\n  if (__DEV__) {\n    checkHtmlStringCoercion(markup);\n  }\n\n  const markupString = typeof markup === 'string' ? markup : '' + markup;\n  return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\n}\n\nexport function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {\n  const normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\n  const normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\n\n  if (normalizedServerText === normalizedClientText) {\n    return;\n  }\n\n  if (shouldWarnDev) {\n    if (__DEV__) {\n      if (!didWarnInvalidHydration) {\n        didWarnInvalidHydration = true;\n        console.error('Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText);\n      }\n    }\n  }\n\n  if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {\n    // In concurrent roots, we throw when there's a text mismatch and revert to\n    // client rendering, up to the nearest Suspense boundary.\n    throw new Error('Text content does not match server-rendered HTML.');\n  }\n}\n\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;\n}\n\nfunction noop() {}\n\nexport function trapClickOnNonInteractiveElement(node) {\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n  // Just set it using the onclick property so that we don't have to manage any\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\n  // removed.\n  // TODO: Only do this for the relevant Safaris maybe?\n  node.onclick = noop;\n}\n\nfunction setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {\n  for (const propKey in nextProps) {\n    if (!nextProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n\n    const nextProp = nextProps[propKey];\n\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      } // Relies on `updateStylesByID` not mutating `styleUpdates`.\n\n\n      setValueForStyles(domElement, nextProp);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n\n      if (nextHtml != null) {\n        setInnerHTML(domElement, nextHtml);\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string') {\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\n        // textContent on a <textarea> will cause the placeholder to not\n        // show within the <textarea> until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        const canSetTextContent = tag !== 'textarea' || nextProp !== '';\n\n        if (canSetTextContent) {\n          setTextContent(domElement, nextProp);\n        }\n      } else if (typeof nextProp === 'number') {\n        setTextContent(domElement, '' + nextProp);\n      }\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) {// Noop\n    } else if (propKey === AUTOFOCUS) {// We polyfill it separately on the client during commit.\n      // We could have excluded it in the property list instead of\n      // adding a special case here, but then it wouldn't be emitted\n      // on server rendering (but we *do* want to emit it in SSR).\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    } else if (nextProp != null) {\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n    }\n  }\n}\n\nfunction updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {\n  // TODO: Handle wasCustomComponentTag\n  for (let i = 0; i < updatePayload.length; i += 2) {\n    const propKey = updatePayload[i];\n    const propValue = updatePayload[i + 1];\n\n    if (propKey === STYLE) {\n      setValueForStyles(domElement, propValue);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      setInnerHTML(domElement, propValue);\n    } else if (propKey === CHILDREN) {\n      setTextContent(domElement, propValue);\n    } else {\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n    }\n  }\n}\n\nexport function createElement(type, props, rootContainerElement, parentNamespace) {\n  console.log({\n    type,\n    props,\n    rootContainerElement,\n    parentNamespace\n  }, \"aaaaa\");\n  let isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML\n  // tags get no namespace.\n\n  const ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);\n  let domElement;\n  let namespaceURI = parentNamespace;\n\n  if (namespaceURI === HTML_NAMESPACE) {\n    namespaceURI = getIntrinsicNamespace(type);\n  }\n\n  if (namespaceURI === HTML_NAMESPACE) {\n    if (__DEV__) {\n      isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to\n      // allow <SVG> or <mATH>.\n\n      if (!isCustomComponentTag && type !== type.toLowerCase()) {\n        console.error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type);\n      }\n    }\n\n    if (type === 'script') {\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\n      // set to true and it does not execute\n      const div = ownerDocument.createElement('div');\n\n      if (__DEV__) {\n        if (enableTrustedTypesIntegration && !didWarnScriptTags) {\n          console.error('Encountered a script tag while rendering React component. ' + 'Scripts inside React components are never executed when rendering ' + 'on the client. Consider using template tag instead ' + '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).');\n          didWarnScriptTags = true;\n        }\n      }\n\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n      // This is guaranteed to yield a script element.\n\n      const firstChild = div.firstChild;\n      domElement = div.removeChild(firstChild);\n    } else if (typeof props.is === 'string') {\n      // $FlowIssue `createElement` should be updated for Web Components\n      domElement = ownerDocument.createElement(type, {\n        is: props.is\n      });\n    } else {\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n      // See discussion in https://github.com/facebook/react/pull/6896\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n      domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\n      // attributes on `select`s needs to be added before `option`s are inserted.\n      // This prevents:\n      // - a bug where the `select` does not scroll to the correct option because singular\n      //  `select` elements automatically pick the first item #13222\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\n      // See https://github.com/facebook/react/issues/13222\n      // and https://github.com/facebook/react/issues/14239\n\n      if (type === 'select') {\n        const node = domElement;\n\n        if (props.multiple) {\n          node.multiple = true;\n        } else if (props.size) {\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\n          // it is possible that no option is selected.\n          //\n          // This is only necessary when a select in \"single selection mode\".\n          node.size = props.size;\n        }\n      }\n    }\n  } else {\n    // 创建一个具有指定的命名空间URI 和限定名称的元素\n    // HTML： http://www.w3.org/1999/xhtml\n    // SVG：http://www.w3.org/2000/svg\n    // XBL：http://www.mozilla.org/xbl\n    // XUL：http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\n  }\n\n  if (__DEV__) {\n    if (namespaceURI === HTML_NAMESPACE) {\n      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !hasOwnProperty.call(warnedUnknownTags, type)) {\n        warnedUnknownTags[type] = true;\n        console.error('The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);\n      }\n    }\n  }\n\n  return domElement;\n}\nexport function createTextNode(text, rootContainerElement) {\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);\n}\nexport function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {\n  const isCustomComponentTag = isCustomComponent(tag, rawProps);\n\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, rawProps);\n  } // TODO: Make sure that we check isMounted before firing any of these events.\n\n\n  let props;\n\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      props = rawProps;\n      break;\n\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n\n      props = rawProps;\n      break;\n\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      props = rawProps;\n      break;\n\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      props = rawProps;\n      break;\n\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      props = ReactDOMInputGetHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      props = rawProps;\n      break;\n\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      props = ReactDOMSelectGetHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      props = ReactDOMTextareaGetHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    default:\n      props = rawProps;\n  }\n\n  assertValidProps(tag, props);\n  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMInputPostMountWrapper(domElement, rawProps, false);\n      break;\n\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n\n    case 'option':\n      ReactDOMOptionPostMountWrapper(domElement, rawProps);\n      break;\n\n    case 'select':\n      ReactDOMSelectPostMountWrapper(domElement, rawProps);\n      break;\n\n    default:\n      if (typeof props.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n} // Calculate the diff between the two objects.\n\nexport function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, nextRawProps);\n  }\n\n  let updatePayload = null;\n  let lastProps;\n  let nextProps;\n\n  switch (tag) {\n    case 'input':\n      lastProps = ReactDOMInputGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMInputGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'select':\n      lastProps = ReactDOMSelectGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMSelectGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'textarea':\n      lastProps = ReactDOMTextareaGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMTextareaGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    default:\n      lastProps = lastRawProps;\n      nextProps = nextRawProps;\n\n      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n\n  assertValidProps(tag, nextProps);\n  let propKey;\n  let styleName;\n  let styleUpdates = null;\n\n  for (propKey in lastProps) {\n    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n      continue;\n    }\n\n    if (propKey === STYLE) {\n      const lastStyle = lastProps[propKey];\n\n      for (styleName in lastStyle) {\n        if (lastStyle.hasOwnProperty(styleName)) {\n          if (!styleUpdates) {\n            styleUpdates = {};\n          }\n\n          styleUpdates[styleName] = '';\n        }\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {// Noop. This is handled by the clear text mechanism.\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) {// Noop\n    } else if (propKey === AUTOFOCUS) {// Noop. It doesn't work on updates anyway.\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      // This is a special case. If any listener updates we need to ensure\n      // that the \"current\" fiber pointer gets updated so we need a commit\n      // to update this element.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the allowed property list in the commit phase instead.\n      (updatePayload = updatePayload || []).push(propKey, null);\n    }\n  }\n\n  for (propKey in nextProps) {\n    const nextProp = nextProps[propKey];\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined;\n\n    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n      continue;\n    }\n\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n\n      if (lastProp) {\n        // Unset styles on `lastProp` but not on `nextProp`.\n        for (styleName in lastProp) {\n          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n\n            styleUpdates[styleName] = '';\n          }\n        } // Update styles that changed since `lastProp`.\n\n\n        for (styleName in nextProp) {\n          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n\n            styleUpdates[styleName] = nextProp[styleName];\n          }\n        }\n      } else {\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\n        if (!styleUpdates) {\n          if (!updatePayload) {\n            updatePayload = [];\n          }\n\n          updatePayload.push(propKey, styleUpdates);\n        }\n\n        styleUpdates = nextProp;\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      const lastHtml = lastProp ? lastProp[HTML] : undefined;\n\n      if (nextHtml != null) {\n        if (lastHtml !== nextHtml) {\n          (updatePayload = updatePayload || []).push(propKey, nextHtml);\n        }\n      } else {// TODO: It might be too late to clear this if we have children\n        // inserted already.\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string' || typeof nextProp === 'number') {\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n      }\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) {// Noop\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        // We eagerly listen to this even though we haven't committed yet.\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n\n      if (!updatePayload && lastProp !== nextProp) {\n        // This is a special case. If any listener updates we need to ensure\n        // that the \"current\" props pointer gets updated so we need a commit\n        // to update this element.\n        updatePayload = [];\n      }\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the allowed property list during the commit.\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\n    }\n  }\n\n  if (styleUpdates) {\n    if (__DEV__) {\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);\n    }\n\n    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);\n  }\n\n  return updatePayload;\n} // Apply the diff.\n\nexport function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {\n  // Update checked *before* name.\n  // In the middle of an update, it is possible to have multiple checked.\n  // When a checked radio tries to change name, browser makes another radio's checked false.\n  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {\n    ReactDOMInputUpdateChecked(domElement, nextRawProps);\n  }\n\n  const wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n  const isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.\n\n  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props\n  // changed.\n\n  switch (tag) {\n    case 'input':\n      // Update the wrapper around inputs *after* updating props. This has to\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n      // raise warnings and prevent the new value from being assigned.\n      ReactDOMInputUpdateWrapper(domElement, nextRawProps);\n      break;\n\n    case 'textarea':\n      ReactDOMTextareaUpdateWrapper(domElement, nextRawProps);\n      break;\n\n    case 'select':\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      ReactDOMSelectPostUpdateWrapper(domElement, nextRawProps);\n      break;\n  }\n}\n\nfunction getPossibleStandardName(propName) {\n  if (__DEV__) {\n    const lowerCasedName = propName.toLowerCase();\n\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      return null;\n    }\n\n    return possibleStandardNames[lowerCasedName] || null;\n  }\n\n  return null;\n}\n\nexport function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {\n  let isCustomComponentTag;\n  let extraAttributeNames;\n\n  if (__DEV__) {\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\n    validatePropertiesInDevelopment(tag, rawProps);\n  } // TODO: Make sure that we check isMounted before firing any of these events.\n\n\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      break;\n\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n\n      break;\n\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      break;\n\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      break;\n\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      break;\n\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n  }\n\n  assertValidProps(tag, rawProps);\n\n  if (__DEV__) {\n    extraAttributeNames = new Set();\n    const attributes = domElement.attributes;\n\n    for (let i = 0; i < attributes.length; i++) {\n      const name = attributes[i].name.toLowerCase();\n\n      switch (name) {\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        case 'value':\n          break;\n\n        case 'checked':\n          break;\n\n        case 'selected':\n          break;\n\n        default:\n          // Intentionally use the original name.\n          // See discussion in https://github.com/facebook/react/pull/10676.\n          extraAttributeNames.add(attributes[i].name);\n      }\n    }\n  }\n\n  let updatePayload = null;\n\n  for (const propKey in rawProps) {\n    if (!rawProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n\n    const nextProp = rawProps[propKey];\n\n    if (propKey === CHILDREN) {\n      // For text content children we compare against textContent. This\n      // might match additional HTML that is hidden when we read it using\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n      // satisfies our requirement. Our requirement is not to produce perfect\n      // HTML and attributes. Ideally we should preserve structure but it's\n      // ok not to if the visible content is still enough to indicate what\n      // even listeners these nodes might be wired up to.\n      // TODO: Warn if there is more than a single textNode as a child.\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\n      if (typeof nextProp === 'string') {\n        if (domElement.textContent !== nextProp) {\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);\n          }\n\n          updatePayload = [CHILDREN, nextProp];\n        }\n      } else if (typeof nextProp === 'number') {\n        if (domElement.textContent !== '' + nextProp) {\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);\n          }\n\n          updatePayload = [CHILDREN, '' + nextProp];\n        }\n      }\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    } else if (shouldWarnDev && __DEV__ && // Convince Flow we've calculated it (it's DEV-only in this method.)\n    typeof isCustomComponentTag === 'boolean') {\n      // Validate that the properties correspond to their expected values.\n      let serverValue;\n      const propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);\n\n      if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) {// Don't bother comparing. We're ignoring all these warnings.\n      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated\n      // TODO: Only ignore them on controlled tags.\n      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {// Noop\n      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n        const serverHTML = domElement.innerHTML;\n        const nextHtml = nextProp ? nextProp[HTML] : undefined;\n\n        if (nextHtml != null) {\n          const expectedHTML = normalizeHTML(domElement, nextHtml);\n\n          if (expectedHTML !== serverHTML) {\n            warnForPropDifference(propKey, serverHTML, expectedHTML);\n          }\n        }\n      } else if (propKey === STYLE) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey);\n\n        if (canDiffStyleForHydrationWarning) {\n          const expectedStyle = createDangerousStringForStyles(nextProp);\n          serverValue = domElement.getAttribute('style');\n\n          if (expectedStyle !== serverValue) {\n            warnForPropDifference(propKey, serverValue, expectedStyle);\n          }\n        }\n      } else if (enableCustomElementPropertySupport && isCustomComponentTag && (propKey === 'offsetParent' || propKey === 'offsetTop' || propKey === 'offsetLeft' || propKey === 'offsetWidth' || propKey === 'offsetHeight' || propKey === 'isContentEditable' || propKey === 'outerText' || propKey === 'outerHTML')) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n\n        if (__DEV__) {\n          console.error('Assignment to read-only property will result in a no-op: `%s`', propKey);\n        }\n      } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        serverValue = getValueForAttribute(domElement, propKey, nextProp);\n\n        if (nextProp !== serverValue) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {\n        let isMismatchDueToBadCasing = false;\n\n        if (propertyInfo !== null) {\n          // $FlowFixMe - Should be inferred as not undefined.\n          extraAttributeNames.delete(propertyInfo.attributeName);\n          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);\n        } else {\n          let ownNamespace = parentNamespace;\n\n          if (ownNamespace === HTML_NAMESPACE) {\n            ownNamespace = getIntrinsicNamespace(tag);\n          }\n\n          if (ownNamespace === HTML_NAMESPACE) {\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey.toLowerCase());\n          } else {\n            const standardName = getPossibleStandardName(propKey);\n\n            if (standardName !== null && standardName !== propKey) {\n              // If an SVG prop is supplied with bad casing, it will\n              // be successfully parsed from HTML, but will produce a mismatch\n              // (and would be incorrectly rendered on the client).\n              // However, we already warn about bad casing elsewhere.\n              // So we'll skip the misleading extra mismatch warning in this case.\n              isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.\n\n              extraAttributeNames.delete(standardName);\n            } // $FlowFixMe - Should be inferred as not undefined.\n\n\n            extraAttributeNames.delete(propKey);\n          }\n\n          serverValue = getValueForAttribute(domElement, propKey, nextProp);\n        }\n\n        const dontWarnCustomElement = enableCustomElementPropertySupport && isCustomComponentTag && (typeof nextProp === 'function' || typeof nextProp === 'object');\n\n        if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      }\n    }\n  }\n\n  if (__DEV__) {\n    if (shouldWarnDev) {\n      if ( // $FlowFixMe - Should be inferred as not undefined.\n      extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        warnForExtraAttributes(extraAttributeNames);\n      }\n    }\n  }\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMInputPostMountWrapper(domElement, rawProps, true);\n      break;\n\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n\n    case 'select':\n    case 'option':\n      // For input and textarea we current always set the value property at\n      // post mount to force it to diverge from attributes. However, for\n      // option and select we don't quite do the same thing and select\n      // is not resilient to the DOM state changing so we don't do that here.\n      // TODO: Consider not doing this for input and textarea.\n      break;\n\n    default:\n      if (typeof rawProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n\n  return updatePayload;\n}\nexport function diffHydratedText(textNode, text, isConcurrentMode) {\n  const isDifferent = textNode.nodeValue !== text;\n  return isDifferent;\n}\nexport function warnForDeletedHydratableElement(parentNode, child) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());\n  }\n}\nexport function warnForDeletedHydratableText(parentNode, child) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());\n  }\n}\nexport function warnForInsertedHydratedElement(parentNode, tag, props) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());\n  }\n}\nexport function warnForInsertedHydratedText(parentNode, text) {\n  if (__DEV__) {\n    if (text === '') {\n      // We expect to insert empty text nodes since they're not represented in\n      // the HTML.\n      // TODO: Remove this special case if we can just avoid inserting empty\n      // text nodes.\n      return;\n    }\n\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase());\n  }\n}\nexport function restoreControlledState(domElement, tag, props) {\n  switch (tag) {\n    case 'input':\n      ReactDOMInputRestoreControlledState(domElement, props);\n      return;\n\n    case 'textarea':\n      ReactDOMTextareaRestoreControlledState(domElement, props);\n      return;\n\n    case 'select':\n      ReactDOMSelectRestoreControlledState(domElement, props);\n      return;\n  }\n}","map":{"version":3,"names":["registrationNameDependencies","possibleRegistrationNames","canUseDOM","hasOwnProperty","checkHtmlStringCoercion","getValueForAttribute","getValueForProperty","setValueForProperty","initWrapperState","ReactDOMInputInitWrapperState","getHostProps","ReactDOMInputGetHostProps","postMountWrapper","ReactDOMInputPostMountWrapper","updateChecked","ReactDOMInputUpdateChecked","updateWrapper","ReactDOMInputUpdateWrapper","restoreControlledState","ReactDOMInputRestoreControlledState","ReactDOMOptionPostMountWrapper","validateProps","ReactDOMOptionValidateProps","ReactDOMSelectInitWrapperState","ReactDOMSelectGetHostProps","ReactDOMSelectPostMountWrapper","ReactDOMSelectRestoreControlledState","postUpdateWrapper","ReactDOMSelectPostUpdateWrapper","ReactDOMTextareaInitWrapperState","ReactDOMTextareaGetHostProps","ReactDOMTextareaPostMountWrapper","ReactDOMTextareaUpdateWrapper","ReactDOMTextareaRestoreControlledState","track","setInnerHTML","setTextContent","createDangerousStringForStyles","setValueForStyles","validateShorthandPropertyCollisionInDev","HTML_NAMESPACE","getIntrinsicNamespace","getPropertyInfo","shouldIgnoreAttribute","shouldRemoveAttribute","assertValidProps","DOCUMENT_NODE","isCustomComponent","possibleStandardNames","validateProperties","validateARIAProperties","validateInputProperties","validateUnknownProperties","enableTrustedTypesIntegration","enableCustomElementPropertySupport","enableClientRenderFallbackOnTextMismatch","mediaEventTypes","listenToNonDelegatedEvent","didWarnInvalidHydration","didWarnScriptTags","DANGEROUSLY_SET_INNER_HTML","SUPPRESS_CONTENT_EDITABLE_WARNING","SUPPRESS_HYDRATION_WARNING","AUTOFOCUS","CHILDREN","STYLE","HTML","warnedUnknownTags","validatePropertiesInDevelopment","warnForPropDifference","warnForExtraAttributes","warnForInvalidEventListener","canDiffStyleForHydrationWarning","normalizeHTML","__DEV__","dialog","webview","type","props","document","documentMode","propName","serverValue","clientValue","normalizedClientValue","normalizeMarkupForTextOrAttribute","normalizedServerValue","console","error","JSON","stringify","attributeNames","names","forEach","name","push","registrationName","listener","parent","html","testElement","namespaceURI","ownerDocument","createElement","tagName","createElementNS","innerHTML","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","markup","markupString","replace","checkForUnmatchedText","serverText","clientText","isConcurrentMode","shouldWarnDev","normalizedClientText","normalizedServerText","Error","getOwnerDocumentFromRootContainer","rootContainerElement","nodeType","noop","trapClickOnNonInteractiveElement","node","onclick","setInitialDOMProperties","tag","domElement","nextProps","isCustomComponentTag","propKey","nextProp","Object","freeze","nextHtml","undefined","canSetTextContent","updateDOMProperties","updatePayload","wasCustomComponentTag","i","length","propValue","parentNamespace","log","toLowerCase","div","firstChild","removeChild","is","multiple","size","prototype","toString","call","createTextNode","text","setInitialProperties","rawProps","onClick","diffProperties","lastRawProps","nextRawProps","lastProps","styleName","styleUpdates","lastStyle","lastProp","lastHtml","updateProperties","getPossibleStandardName","lowerCasedName","diffHydratedProperties","extraAttributeNames","Set","attributes","add","textContent","propertyInfo","serverHTML","expectedHTML","delete","expectedStyle","getAttribute","isMismatchDueToBadCasing","attributeName","ownNamespace","standardName","dontWarnCustomElement","diffHydratedText","textNode","isDifferent","nodeValue","warnForDeletedHydratableElement","parentNode","child","nodeName","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/react-dom/src/client/ReactDOMComponent.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  registrationNameDependencies,\r\n  possibleRegistrationNames,\r\n} from '../events/EventRegistry';\r\n\r\nimport { canUseDOM } from 'shared/ExecutionEnvironment';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport { checkHtmlStringCoercion } from 'shared/CheckStringCoercion';\r\n\r\nimport {\r\n  getValueForAttribute,\r\n  getValueForProperty,\r\n  setValueForProperty,\r\n} from './DOMPropertyOperations';\r\nimport {\r\n  initWrapperState as ReactDOMInputInitWrapperState,\r\n  getHostProps as ReactDOMInputGetHostProps,\r\n  postMountWrapper as ReactDOMInputPostMountWrapper,\r\n  updateChecked as ReactDOMInputUpdateChecked,\r\n  updateWrapper as ReactDOMInputUpdateWrapper,\r\n  restoreControlledState as ReactDOMInputRestoreControlledState,\r\n} from './ReactDOMInput';\r\nimport {\r\n  postMountWrapper as ReactDOMOptionPostMountWrapper,\r\n  validateProps as ReactDOMOptionValidateProps,\r\n} from './ReactDOMOption';\r\nimport {\r\n  initWrapperState as ReactDOMSelectInitWrapperState,\r\n  getHostProps as ReactDOMSelectGetHostProps,\r\n  postMountWrapper as ReactDOMSelectPostMountWrapper,\r\n  restoreControlledState as ReactDOMSelectRestoreControlledState,\r\n  postUpdateWrapper as ReactDOMSelectPostUpdateWrapper,\r\n} from './ReactDOMSelect';\r\nimport {\r\n  initWrapperState as ReactDOMTextareaInitWrapperState,\r\n  getHostProps as ReactDOMTextareaGetHostProps,\r\n  postMountWrapper as ReactDOMTextareaPostMountWrapper,\r\n  updateWrapper as ReactDOMTextareaUpdateWrapper,\r\n  restoreControlledState as ReactDOMTextareaRestoreControlledState,\r\n} from './ReactDOMTextarea';\r\nimport { track } from './inputValueTracking';\r\nimport setInnerHTML from './setInnerHTML';\r\nimport setTextContent from './setTextContent';\r\nimport {\r\n  createDangerousStringForStyles,\r\n  setValueForStyles,\r\n  validateShorthandPropertyCollisionInDev,\r\n} from './CSSPropertyOperations';\r\nimport { HTML_NAMESPACE, getIntrinsicNamespace } from '../shared/DOMNamespaces';\r\nimport {\r\n  getPropertyInfo,\r\n  shouldIgnoreAttribute,\r\n  shouldRemoveAttribute,\r\n} from '../shared/DOMProperty';\r\nimport assertValidProps from '../shared/assertValidProps';\r\nimport { DOCUMENT_NODE } from '../shared/HTMLNodeType';\r\nimport isCustomComponent from '../shared/isCustomComponent';\r\nimport possibleStandardNames from '../shared/possibleStandardNames';\r\nimport { validateProperties as validateARIAProperties } from '../shared/ReactDOMInvalidARIAHook';\r\nimport { validateProperties as validateInputProperties } from '../shared/ReactDOMNullInputValuePropHook';\r\nimport { validateProperties as validateUnknownProperties } from '../shared/ReactDOMUnknownPropertyHook';\r\n\r\nimport {\r\n  enableTrustedTypesIntegration,\r\n  enableCustomElementPropertySupport,\r\n  enableClientRenderFallbackOnTextMismatch,\r\n} from 'shared/ReactFeatureFlags';\r\nimport {\r\n  mediaEventTypes,\r\n  listenToNonDelegatedEvent,\r\n} from '../events/DOMPluginEventSystem';\r\n\r\nlet didWarnInvalidHydration = false;\r\nlet didWarnScriptTags = false;\r\n\r\nconst DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\r\nconst SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\r\nconst SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\r\nconst AUTOFOCUS = 'autoFocus';\r\nconst CHILDREN = 'children';\r\nconst STYLE = 'style';\r\nconst HTML = '__html';\r\n\r\nlet warnedUnknownTags;\r\n\r\nlet validatePropertiesInDevelopment;\r\nlet warnForPropDifference;\r\nlet warnForExtraAttributes;\r\nlet warnForInvalidEventListener;\r\nlet canDiffStyleForHydrationWarning;\r\n\r\nlet normalizeHTML;\r\n\r\nif (__DEV__) {\r\n  warnedUnknownTags = {\r\n    // There are working polyfills for <dialog>. Let people use it.\r\n    dialog: true,\r\n    // Electron ships a custom <webview> tag to display external web content in\r\n    // an isolated frame and process.\r\n    // This tag is not present in non Electron environments such as JSDom which\r\n    // is often used for testing purposes.\r\n    // @see https://electronjs.org/docs/api/webview-tag\r\n    webview: true,\r\n  };\r\n\r\n  validatePropertiesInDevelopment = function (type, props) {\r\n    validateARIAProperties(type, props);\r\n    validateInputProperties(type, props);\r\n    validateUnknownProperties(type, props, {\r\n      registrationNameDependencies,\r\n      possibleRegistrationNames,\r\n    });\r\n  };\r\n\r\n  // IE 11 parses & normalizes the style attribute as opposed to other\r\n  // browsers. It adds spaces and sorts the properties in some\r\n  // non-alphabetical order. Handling that would require sorting CSS\r\n  // properties in the client & server versions or applying\r\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\r\n  // normalized. Since it only affects IE, we're skipping style warnings\r\n  // in that browser completely in favor of doing all that work.\r\n  // See https://github.com/facebook/react/issues/11807\r\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;\r\n\r\n  warnForPropDifference = function (\r\n    propName: string,\r\n    serverValue: mixed,\r\n    clientValue: mixed,\r\n  ) {\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    const normalizedClientValue = normalizeMarkupForTextOrAttribute(\r\n      clientValue,\r\n    );\r\n    const normalizedServerValue = normalizeMarkupForTextOrAttribute(\r\n      serverValue,\r\n    );\r\n    if (normalizedServerValue === normalizedClientValue) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    console.error(\r\n      'Prop `%s` did not match. Server: %s Client: %s',\r\n      propName,\r\n      JSON.stringify(normalizedServerValue),\r\n      JSON.stringify(normalizedClientValue),\r\n    );\r\n  };\r\n\r\n  warnForExtraAttributes = function (attributeNames: Set<string>) {\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    const names = [];\r\n    attributeNames.forEach(function (name) {\r\n      names.push(name);\r\n    });\r\n    console.error('Extra attributes from the server: %s', names);\r\n  };\r\n\r\n  warnForInvalidEventListener = function (registrationName, listener) {\r\n    if (listener === false) {\r\n      console.error(\r\n        'Expected `%s` listener to be a function, instead got `false`.\\n\\n' +\r\n        'If you used to conditionally omit it with %s={condition && value}, ' +\r\n        'pass %s={condition ? value : undefined} instead.',\r\n        registrationName,\r\n        registrationName,\r\n        registrationName,\r\n      );\r\n    } else {\r\n      console.error(\r\n        'Expected `%s` listener to be a function, instead got a value of `%s` type.',\r\n        registrationName,\r\n        typeof listener,\r\n      );\r\n    }\r\n  };\r\n\r\n  // Parse the HTML and read it back to normalize the HTML string so that it\r\n  // can be used for comparison.\r\n  normalizeHTML = function (parent: Element, html: string) {\r\n    // We could have created a separate document here to avoid\r\n    // re-initializing custom elements if they exist. But this breaks\r\n    // how <noscript> is being handled. So we use the same document.\r\n    // See the discussion in https://github.com/facebook/react/pull/11157.\r\n    const testElement =\r\n      parent.namespaceURI === HTML_NAMESPACE\r\n        ? parent.ownerDocument.createElement(parent.tagName)\r\n        : parent.ownerDocument.createElementNS(\r\n          (parent.namespaceURI: any),\r\n      parent.tagName,\r\n          );\r\n    testElement.innerHTML = html;\r\n    return testElement.innerHTML;\r\n  };\r\n}\r\n\r\n// HTML parsing normalizes CR and CRLF to LF.\r\n// It also can turn \\u0000 into \\uFFFD inside attributes.\r\n// https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\r\n// If we have a mismatch, it might be caused by that.\r\n// We will still patch up in this case but not fire the warning.\r\nconst NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\r\nconst NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\r\n\r\nfunction normalizeMarkupForTextOrAttribute (markup: mixed): string {\r\n  if (__DEV__) {\r\n    checkHtmlStringCoercion(markup);\r\n  }\r\n  const markupString = typeof markup === 'string' ? markup : '' + (markup: any);\r\n  return markupString\r\n    .replace(NORMALIZE_NEWLINES_REGEX, '\\n')\r\n    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\r\n}\r\n\r\nexport function checkForUnmatchedText (\r\n  serverText: string,\r\n  clientText: string | number,\r\n  isConcurrentMode: boolean,\r\n  shouldWarnDev: boolean,\r\n) {\r\n  const normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\r\n  const normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\r\n  if (normalizedServerText === normalizedClientText) {\r\n    return;\r\n  }\r\n\r\n  if (shouldWarnDev) {\r\n    if (__DEV__) {\r\n      if (!didWarnInvalidHydration) {\r\n        didWarnInvalidHydration = true;\r\n        console.error(\r\n          'Text content did not match. Server: \"%s\" Client: \"%s\"',\r\n          normalizedServerText,\r\n          normalizedClientText,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {\r\n    // In concurrent roots, we throw when there's a text mismatch and revert to\r\n    // client rendering, up to the nearest Suspense boundary.\r\n    throw new Error('Text content does not match server-rendered HTML.');\r\n  }\r\n}\r\n\r\nfunction getOwnerDocumentFromRootContainer (\r\n  rootContainerElement: Element | Document | DocumentFragment,\r\n): Document {\r\n  return rootContainerElement.nodeType === DOCUMENT_NODE\r\n    ? (rootContainerElement: any)\r\n      : rootContainerElement.ownerDocument;\r\n}\r\n\r\nfunction noop () { }\r\n\r\nexport function trapClickOnNonInteractiveElement (node: HTMLElement) {\r\n  // Mobile Safari does not fire properly bubble click events on\r\n  // non-interactive elements, which means delegated click listeners do not\r\n  // fire. The workaround for this bug involves attaching an empty click\r\n  // listener on the target node.\r\n  // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\r\n  // Just set it using the onclick property so that we don't have to manage any\r\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\r\n  // removed.\r\n  // TODO: Only do this for the relevant Safaris maybe?\r\n  node.onclick = noop;\r\n}\r\n\r\nfunction setInitialDOMProperties (\r\n  tag: string,\r\n  domElement: Element,\r\n  rootContainerElement: Element | Document | DocumentFragment,\r\n  nextProps: Object,\r\n  isCustomComponentTag: boolean,\r\n): void {\r\n  for (const propKey in nextProps) {\r\n    if (!nextProps.hasOwnProperty(propKey)) {\r\n      continue;\r\n    }\r\n    const nextProp = nextProps[propKey];\r\n    if (propKey === STYLE) {\r\n      if (__DEV__) {\r\n        if (nextProp) {\r\n          // Freeze the next style object so that we can assume it won't be\r\n          // mutated. We have already warned for this in the past.\r\n          Object.freeze(nextProp);\r\n        }\r\n      }\r\n      // Relies on `updateStylesByID` not mutating `styleUpdates`.\r\n      setValueForStyles(domElement, nextProp);\r\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\r\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\r\n      if (nextHtml != null) {\r\n        setInnerHTML(domElement, nextHtml);\r\n      }\r\n    } else if (propKey === CHILDREN) {\r\n      if (typeof nextProp === 'string') {\r\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\r\n        // textContent on a <textarea> will cause the placeholder to not\r\n        // show within the <textarea> until it has been focused and blurred again.\r\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\r\n        const canSetTextContent = tag !== 'textarea' || nextProp !== '';\r\n        if (canSetTextContent) {\r\n          setTextContent(domElement, nextProp);\r\n        }\r\n      } else if (typeof nextProp === 'number') {\r\n        setTextContent(domElement, '' + nextProp);\r\n      }\r\n    } else if (\r\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\r\n      propKey === SUPPRESS_HYDRATION_WARNING\r\n    ) {\r\n      // Noop\r\n    } else if (propKey === AUTOFOCUS) {\r\n      // We polyfill it separately on the client during commit.\r\n      // We could have excluded it in the property list instead of\r\n      // adding a special case here, but then it wouldn't be emitted\r\n      // on server rendering (but we *do* want to emit it in SSR).\r\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\r\n      if (nextProp != null) {\r\n        if (__DEV__ && typeof nextProp !== 'function') {\r\n          warnForInvalidEventListener(propKey, nextProp);\r\n        }\r\n        if (propKey === 'onScroll') {\r\n          listenToNonDelegatedEvent('scroll', domElement);\r\n        }\r\n      }\r\n    } else if (nextProp != null) {\r\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateDOMProperties (\r\n  domElement: Element,\r\n  updatePayload: Array<any>,\r\n  wasCustomComponentTag: boolean,\r\n  isCustomComponentTag: boolean,\r\n): void {\r\n  // TODO: Handle wasCustomComponentTag\r\n  for (let i = 0; i < updatePayload.length; i += 2) {\r\n    const propKey = updatePayload[i];\r\n    const propValue = updatePayload[i + 1];\r\n    if (propKey === STYLE) {\r\n      setValueForStyles(domElement, propValue);\r\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\r\n      setInnerHTML(domElement, propValue);\r\n    } else if (propKey === CHILDREN) {\r\n      setTextContent(domElement, propValue);\r\n    } else {\r\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function createElement (\r\n  type: string,\r\n  props: Object,\r\n  rootContainerElement: Element | Document | DocumentFragment,\r\n  parentNamespace: string,\r\n): Element {\r\n  console.log({\r\n    type,\r\n    props,\r\n    rootContainerElement,\r\n    parentNamespace\r\n  }, \"aaaaa\")\r\n  let isCustomComponentTag;\r\n  // We create tags in the namespace of their parent container, except HTML\r\n  // tags get no namespace.\r\n  const ownerDocument: Document = getOwnerDocumentFromRootContainer(\r\n    rootContainerElement,\r\n  );\r\n  let domElement: Element;\r\n  let namespaceURI = parentNamespace;\r\n  if (namespaceURI === HTML_NAMESPACE) {\r\n    namespaceURI = getIntrinsicNamespace(type);\r\n  }\r\n  if (namespaceURI === HTML_NAMESPACE) {\r\n    if (__DEV__) {\r\n      isCustomComponentTag = isCustomComponent(type, props);\r\n      // Should this check be gated by parent namespace? Not sure we want to\r\n      // allow <SVG> or <mATH>.\r\n      if (!isCustomComponentTag && type !== type.toLowerCase()) {\r\n        console.error(\r\n          '<%s /> is using incorrect casing. ' +\r\n          'Use PascalCase for React components, ' +\r\n          'or lowercase for HTML elements.',\r\n          type,\r\n        );\r\n      }\r\n    }\r\n\r\n    if (type === 'script') {\r\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\r\n      // set to true and it does not execute\r\n      const div = ownerDocument.createElement('div');\r\n      if (__DEV__) {\r\n        if (enableTrustedTypesIntegration && !didWarnScriptTags) {\r\n          console.error(\r\n            'Encountered a script tag while rendering React component. ' +\r\n            'Scripts inside React components are never executed when rendering ' +\r\n            'on the client. Consider using template tag instead ' +\r\n            '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).',\r\n          );\r\n          didWarnScriptTags = true;\r\n        }\r\n      }\r\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\r\n      // This is guaranteed to yield a script element.\r\n      const firstChild = ((div.firstChild: any): HTMLScriptElement);\r\n      domElement = div.removeChild(firstChild);\r\n    } else if (typeof props.is === 'string') {\r\n      // $FlowIssue `createElement` should be updated for Web Components\r\n      domElement = ownerDocument.createElement(type, { is: props.is });\r\n    } else {\r\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\r\n      // See discussion in https://github.com/facebook/react/pull/6896\r\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\r\n      domElement = ownerDocument.createElement(type);\r\n      // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\r\n      // attributes on `select`s needs to be added before `option`s are inserted.\r\n      // This prevents:\r\n      // - a bug where the `select` does not scroll to the correct option because singular\r\n      //  `select` elements automatically pick the first item #13222\r\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\r\n      // See https://github.com/facebook/react/issues/13222\r\n      // and https://github.com/facebook/react/issues/14239\r\n      if (type === 'select') {\r\n        const node = ((domElement: any): HTMLSelectElement);\r\n        if (props.multiple) {\r\n          node.multiple = true;\r\n        } else if (props.size) {\r\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\r\n          // it is possible that no option is selected.\r\n          //\r\n          // This is only necessary when a select in \"single selection mode\".\r\n          node.size = props.size;\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // 创建一个具有指定的命名空间URI 和限定名称的元素\r\n    // HTML： http://www.w3.org/1999/xhtml\r\n    // SVG：http://www.w3.org/2000/svg\r\n    // XBL：http://www.mozilla.org/xbl\r\n    // XUL：http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\r\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\r\n  }\r\n\r\n  if (__DEV__) {\r\n    if (namespaceURI === HTML_NAMESPACE) {\r\n      if (\r\n        !isCustomComponentTag &&\r\n        Object.prototype.toString.call(domElement) ===\r\n        '[object HTMLUnknownElement]' &&\r\n        !hasOwnProperty.call(warnedUnknownTags, type)\r\n      ) {\r\n        warnedUnknownTags[type] = true;\r\n        console.error(\r\n          'The tag <%s> is unrecognized in this browser. ' +\r\n          'If you meant to render a React component, start its name with ' +\r\n          'an uppercase letter.',\r\n          type,\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return domElement;\r\n}\r\n\r\nexport function createTextNode (\r\n  text: string,\r\n  rootContainerElement: Element | Document | DocumentFragment,\r\n): Text {\r\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(\r\n    text,\r\n  );\r\n}\r\n\r\nexport function setInitialProperties (\r\n  domElement: Element,\r\n  tag: string,\r\n  rawProps: Object,\r\n  rootContainerElement: Element | Document | DocumentFragment,\r\n): void {\r\n  const isCustomComponentTag = isCustomComponent(tag, rawProps);\r\n  if (__DEV__) {\r\n    validatePropertiesInDevelopment(tag, rawProps);\r\n  }\r\n\r\n  // TODO: Make sure that we check isMounted before firing any of these events.\r\n  let props: Object;\r\n  switch (tag) {\r\n    case 'dialog':\r\n      listenToNonDelegatedEvent('cancel', domElement);\r\n      listenToNonDelegatedEvent('close', domElement);\r\n      props = rawProps;\r\n      break;\r\n    case 'iframe':\r\n    case 'object':\r\n    case 'embed':\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the load event.\r\n      listenToNonDelegatedEvent('load', domElement);\r\n      props = rawProps;\r\n      break;\r\n    case 'video':\r\n    case 'audio':\r\n      // We listen to these events in case to ensure emulated bubble\r\n      // listeners still fire for all the media events.\r\n      for (let i = 0; i < mediaEventTypes.length; i++) {\r\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\r\n      }\r\n      props = rawProps;\r\n      break;\r\n    case 'source':\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the error event.\r\n      listenToNonDelegatedEvent('error', domElement);\r\n      props = rawProps;\r\n      break;\r\n    case 'img':\r\n    case 'image':\r\n    case 'link':\r\n      // We listen to these events in case to ensure emulated bubble\r\n      // listeners still fire for error and load events.\r\n      listenToNonDelegatedEvent('error', domElement);\r\n      listenToNonDelegatedEvent('load', domElement);\r\n      props = rawProps;\r\n      break;\r\n    case 'details':\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the toggle event.\r\n      listenToNonDelegatedEvent('toggle', domElement);\r\n      props = rawProps;\r\n      break;\r\n    case 'input':\r\n      ReactDOMInputInitWrapperState(domElement, rawProps);\r\n      props = ReactDOMInputGetHostProps(domElement, rawProps);\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the invalid event.\r\n      listenToNonDelegatedEvent('invalid', domElement);\r\n      break;\r\n    case 'option':\r\n      ReactDOMOptionValidateProps(domElement, rawProps);\r\n      props = rawProps;\r\n      break;\r\n    case 'select':\r\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\r\n      props = ReactDOMSelectGetHostProps(domElement, rawProps);\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the invalid event.\r\n      listenToNonDelegatedEvent('invalid', domElement);\r\n      break;\r\n    case 'textarea':\r\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\r\n      props = ReactDOMTextareaGetHostProps(domElement, rawProps);\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the invalid event.\r\n      listenToNonDelegatedEvent('invalid', domElement);\r\n      break;\r\n    default:\r\n      props = rawProps;\r\n  }\r\n\r\n  assertValidProps(tag, props);\r\n\r\n  setInitialDOMProperties(\r\n    tag,\r\n    domElement,\r\n    rootContainerElement,\r\n    props,\r\n    isCustomComponentTag,\r\n  );\r\n\r\n  switch (tag) {\r\n    case 'input':\r\n      // TODO: Make sure we check if this is still unmounted or do any clean\r\n      // up necessary since we never stop tracking anymore.\r\n      track((domElement: any));\r\n      ReactDOMInputPostMountWrapper(domElement, rawProps, false);\r\n      break;\r\n    case 'textarea':\r\n      // TODO: Make sure we check if this is still unmounted or do any clean\r\n      // up necessary since we never stop tracking anymore.\r\n      track((domElement: any));\r\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\r\n      break;\r\n    case 'option':\r\n      ReactDOMOptionPostMountWrapper(domElement, rawProps);\r\n      break;\r\n    case 'select':\r\n      ReactDOMSelectPostMountWrapper(domElement, rawProps);\r\n      break;\r\n    default:\r\n      if (typeof props.onClick === 'function') {\r\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\r\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\r\n      }\r\n      break;\r\n  }\r\n}\r\n\r\n// Calculate the diff between the two objects.\r\nexport function diffProperties (\r\n  domElement: Element,\r\n  tag: string,\r\n  lastRawProps: Object,\r\n  nextRawProps: Object,\r\n  rootContainerElement: Element | Document | DocumentFragment,\r\n): null | Array<mixed> {\r\n  if (__DEV__) {\r\n    validatePropertiesInDevelopment(tag, nextRawProps);\r\n  }\r\n\r\n  let updatePayload: null | Array<any> = null;\r\n\r\n  let lastProps: Object;\r\n  let nextProps: Object;\r\n  switch (tag) {\r\n    case 'input':\r\n      lastProps = ReactDOMInputGetHostProps(domElement, lastRawProps);\r\n      nextProps = ReactDOMInputGetHostProps(domElement, nextRawProps);\r\n      updatePayload = [];\r\n      break;\r\n    case 'select':\r\n      lastProps = ReactDOMSelectGetHostProps(domElement, lastRawProps);\r\n      nextProps = ReactDOMSelectGetHostProps(domElement, nextRawProps);\r\n      updatePayload = [];\r\n      break;\r\n    case 'textarea':\r\n      lastProps = ReactDOMTextareaGetHostProps(domElement, lastRawProps);\r\n      nextProps = ReactDOMTextareaGetHostProps(domElement, nextRawProps);\r\n      updatePayload = [];\r\n      break;\r\n    default:\r\n      lastProps = lastRawProps;\r\n      nextProps = nextRawProps;\r\n      if (\r\n        typeof lastProps.onClick !== 'function' &&\r\n        typeof nextProps.onClick === 'function'\r\n      ) {\r\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\r\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\r\n      }\r\n      break;\r\n  }\r\n\r\n  assertValidProps(tag, nextProps);\r\n\r\n  let propKey;\r\n  let styleName;\r\n  let styleUpdates = null;\r\n  for (propKey in lastProps) {\r\n    if (\r\n      nextProps.hasOwnProperty(propKey) ||\r\n      !lastProps.hasOwnProperty(propKey) ||\r\n      lastProps[propKey] == null\r\n    ) {\r\n      continue;\r\n    }\r\n    if (propKey === STYLE) {\r\n      const lastStyle = lastProps[propKey];\r\n      for (styleName in lastStyle) {\r\n        if (lastStyle.hasOwnProperty(styleName)) {\r\n          if (!styleUpdates) {\r\n            styleUpdates = {};\r\n          }\r\n          styleUpdates[styleName] = '';\r\n        }\r\n      }\r\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {\r\n      // Noop. This is handled by the clear text mechanism.\r\n    } else if (\r\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\r\n      propKey === SUPPRESS_HYDRATION_WARNING\r\n    ) {\r\n      // Noop\r\n    } else if (propKey === AUTOFOCUS) {\r\n      // Noop. It doesn't work on updates anyway.\r\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\r\n      // This is a special case. If any listener updates we need to ensure\r\n      // that the \"current\" fiber pointer gets updated so we need a commit\r\n      // to update this element.\r\n      if (!updatePayload) {\r\n        updatePayload = [];\r\n      }\r\n    } else {\r\n      // For all other deleted properties we add it to the queue. We use\r\n      // the allowed property list in the commit phase instead.\r\n      (updatePayload = updatePayload || []).push(propKey, null);\r\n    }\r\n  }\r\n  for (propKey in nextProps) {\r\n    const nextProp = nextProps[propKey];\r\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined;\r\n    if (\r\n      !nextProps.hasOwnProperty(propKey) ||\r\n      nextProp === lastProp ||\r\n      (nextProp == null && lastProp == null)\r\n    ) {\r\n      continue;\r\n    }\r\n    if (propKey === STYLE) {\r\n      if (__DEV__) {\r\n        if (nextProp) {\r\n          // Freeze the next style object so that we can assume it won't be\r\n          // mutated. We have already warned for this in the past.\r\n          Object.freeze(nextProp);\r\n        }\r\n      }\r\n      if (lastProp) {\r\n        // Unset styles on `lastProp` but not on `nextProp`.\r\n        for (styleName in lastProp) {\r\n          if (\r\n            lastProp.hasOwnProperty(styleName) &&\r\n            (!nextProp || !nextProp.hasOwnProperty(styleName))\r\n          ) {\r\n            if (!styleUpdates) {\r\n              styleUpdates = {};\r\n            }\r\n            styleUpdates[styleName] = '';\r\n          }\r\n        }\r\n        // Update styles that changed since `lastProp`.\r\n        for (styleName in nextProp) {\r\n          if (\r\n            nextProp.hasOwnProperty(styleName) &&\r\n            lastProp[styleName] !== nextProp[styleName]\r\n          ) {\r\n            if (!styleUpdates) {\r\n              styleUpdates = {};\r\n            }\r\n            styleUpdates[styleName] = nextProp[styleName];\r\n          }\r\n        }\r\n      } else {\r\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\r\n        if (!styleUpdates) {\r\n          if (!updatePayload) {\r\n            updatePayload = [];\r\n          }\r\n          updatePayload.push(propKey, styleUpdates);\r\n        }\r\n        styleUpdates = nextProp;\r\n      }\r\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\r\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\r\n      const lastHtml = lastProp ? lastProp[HTML] : undefined;\r\n      if (nextHtml != null) {\r\n        if (lastHtml !== nextHtml) {\r\n          (updatePayload = updatePayload || []).push(propKey, nextHtml);\r\n        }\r\n      } else {\r\n        // TODO: It might be too late to clear this if we have children\r\n        // inserted already.\r\n      }\r\n    } else if (propKey === CHILDREN) {\r\n      if (typeof nextProp === 'string' || typeof nextProp === 'number') {\r\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\r\n      }\r\n    } else if (\r\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\r\n      propKey === SUPPRESS_HYDRATION_WARNING\r\n    ) {\r\n      // Noop\r\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\r\n      if (nextProp != null) {\r\n        // We eagerly listen to this even though we haven't committed yet.\r\n        if (__DEV__ && typeof nextProp !== 'function') {\r\n          warnForInvalidEventListener(propKey, nextProp);\r\n        }\r\n        if (propKey === 'onScroll') {\r\n          listenToNonDelegatedEvent('scroll', domElement);\r\n        }\r\n      }\r\n      if (!updatePayload && lastProp !== nextProp) {\r\n        // This is a special case. If any listener updates we need to ensure\r\n        // that the \"current\" props pointer gets updated so we need a commit\r\n        // to update this element.\r\n        updatePayload = [];\r\n      }\r\n    } else {\r\n      // For any other property we always add it to the queue and then we\r\n      // filter it out using the allowed property list during the commit.\r\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\r\n    }\r\n  }\r\n  if (styleUpdates) {\r\n    if (__DEV__) {\r\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);\r\n    }\r\n    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);\r\n  }\r\n  return updatePayload;\r\n}\r\n\r\n// Apply the diff.\r\nexport function updateProperties (\r\n  domElement: Element,\r\n  updatePayload: Array<any>,\r\n  tag: string,\r\n  lastRawProps: Object,\r\n  nextRawProps: Object,\r\n): void {\r\n  // Update checked *before* name.\r\n  // In the middle of an update, it is possible to have multiple checked.\r\n  // When a checked radio tries to change name, browser makes another radio's checked false.\r\n  if (\r\n    tag === 'input' &&\r\n    nextRawProps.type === 'radio' &&\r\n    nextRawProps.name != null\r\n  ) {\r\n    ReactDOMInputUpdateChecked(domElement, nextRawProps);\r\n  }\r\n\r\n  const wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\r\n  const isCustomComponentTag = isCustomComponent(tag, nextRawProps);\r\n  // Apply the diff.\r\n  updateDOMProperties(\r\n    domElement,\r\n    updatePayload,\r\n    wasCustomComponentTag,\r\n    isCustomComponentTag,\r\n  );\r\n\r\n  // TODO: Ensure that an update gets scheduled if any of the special props\r\n  // changed.\r\n  switch (tag) {\r\n    case 'input':\r\n      // Update the wrapper around inputs *after* updating props. This has to\r\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\r\n      // raise warnings and prevent the new value from being assigned.\r\n      ReactDOMInputUpdateWrapper(domElement, nextRawProps);\r\n      break;\r\n    case 'textarea':\r\n      ReactDOMTextareaUpdateWrapper(domElement, nextRawProps);\r\n      break;\r\n    case 'select':\r\n      // <select> value update needs to occur after <option> children\r\n      // reconciliation\r\n      ReactDOMSelectPostUpdateWrapper(domElement, nextRawProps);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction getPossibleStandardName (propName: string): string | null {\r\n  if (__DEV__) {\r\n    const lowerCasedName = propName.toLowerCase();\r\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\r\n      return null;\r\n    }\r\n    return possibleStandardNames[lowerCasedName] || null;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function diffHydratedProperties (\r\n  domElement: Element,\r\n  tag: string,\r\n  rawProps: Object,\r\n  parentNamespace: string,\r\n  rootContainerElement: Element | Document | DocumentFragment,\r\n  isConcurrentMode: boolean,\r\n  shouldWarnDev: boolean,\r\n): null | Array<mixed> {\r\n  let isCustomComponentTag;\r\n  let extraAttributeNames: Set<string>;\r\n\r\n  if (__DEV__) {\r\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\r\n    validatePropertiesInDevelopment(tag, rawProps);\r\n  }\r\n\r\n  // TODO: Make sure that we check isMounted before firing any of these events.\r\n  switch (tag) {\r\n    case 'dialog':\r\n      listenToNonDelegatedEvent('cancel', domElement);\r\n      listenToNonDelegatedEvent('close', domElement);\r\n      break;\r\n    case 'iframe':\r\n    case 'object':\r\n    case 'embed':\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the load event.\r\n      listenToNonDelegatedEvent('load', domElement);\r\n      break;\r\n    case 'video':\r\n    case 'audio':\r\n      // We listen to these events in case to ensure emulated bubble\r\n      // listeners still fire for all the media events.\r\n      for (let i = 0; i < mediaEventTypes.length; i++) {\r\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\r\n      }\r\n      break;\r\n    case 'source':\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the error event.\r\n      listenToNonDelegatedEvent('error', domElement);\r\n      break;\r\n    case 'img':\r\n    case 'image':\r\n    case 'link':\r\n      // We listen to these events in case to ensure emulated bubble\r\n      // listeners still fire for error and load events.\r\n      listenToNonDelegatedEvent('error', domElement);\r\n      listenToNonDelegatedEvent('load', domElement);\r\n      break;\r\n    case 'details':\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the toggle event.\r\n      listenToNonDelegatedEvent('toggle', domElement);\r\n      break;\r\n    case 'input':\r\n      ReactDOMInputInitWrapperState(domElement, rawProps);\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the invalid event.\r\n      listenToNonDelegatedEvent('invalid', domElement);\r\n      break;\r\n    case 'option':\r\n      ReactDOMOptionValidateProps(domElement, rawProps);\r\n      break;\r\n    case 'select':\r\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the invalid event.\r\n      listenToNonDelegatedEvent('invalid', domElement);\r\n      break;\r\n    case 'textarea':\r\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\r\n      // We listen to this event in case to ensure emulated bubble\r\n      // listeners still fire for the invalid event.\r\n      listenToNonDelegatedEvent('invalid', domElement);\r\n      break;\r\n  }\r\n\r\n  assertValidProps(tag, rawProps);\r\n\r\n  if (__DEV__) {\r\n    extraAttributeNames = new Set();\r\n    const attributes = domElement.attributes;\r\n    for (let i = 0; i < attributes.length; i++) {\r\n      const name = attributes[i].name.toLowerCase();\r\n      switch (name) {\r\n        // Controlled attributes are not validated\r\n        // TODO: Only ignore them on controlled tags.\r\n        case 'value':\r\n          break;\r\n        case 'checked':\r\n          break;\r\n        case 'selected':\r\n          break;\r\n        default:\r\n          // Intentionally use the original name.\r\n          // See discussion in https://github.com/facebook/react/pull/10676.\r\n          extraAttributeNames.add(attributes[i].name);\r\n      }\r\n    }\r\n  }\r\n\r\n  let updatePayload = null;\r\n  for (const propKey in rawProps) {\r\n    if (!rawProps.hasOwnProperty(propKey)) {\r\n      continue;\r\n    }\r\n    const nextProp = rawProps[propKey];\r\n    if (propKey === CHILDREN) {\r\n      // For text content children we compare against textContent. This\r\n      // might match additional HTML that is hidden when we read it using\r\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\r\n      // satisfies our requirement. Our requirement is not to produce perfect\r\n      // HTML and attributes. Ideally we should preserve structure but it's\r\n      // ok not to if the visible content is still enough to indicate what\r\n      // even listeners these nodes might be wired up to.\r\n      // TODO: Warn if there is more than a single textNode as a child.\r\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\r\n      if (typeof nextProp === 'string') {\r\n        if (domElement.textContent !== nextProp) {\r\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\r\n            checkForUnmatchedText(\r\n              domElement.textContent,\r\n              nextProp,\r\n              isConcurrentMode,\r\n              shouldWarnDev,\r\n            );\r\n          }\r\n          updatePayload = [CHILDREN, nextProp];\r\n        }\r\n      } else if (typeof nextProp === 'number') {\r\n        if (domElement.textContent !== '' + nextProp) {\r\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\r\n            checkForUnmatchedText(\r\n              domElement.textContent,\r\n              nextProp,\r\n              isConcurrentMode,\r\n              shouldWarnDev,\r\n            );\r\n          }\r\n          updatePayload = [CHILDREN, '' + nextProp];\r\n        }\r\n      }\r\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\r\n      if (nextProp != null) {\r\n        if (__DEV__ && typeof nextProp !== 'function') {\r\n          warnForInvalidEventListener(propKey, nextProp);\r\n        }\r\n        if (propKey === 'onScroll') {\r\n          listenToNonDelegatedEvent('scroll', domElement);\r\n        }\r\n      }\r\n    } else if (\r\n      shouldWarnDev &&\r\n      __DEV__ &&\r\n      // Convince Flow we've calculated it (it's DEV-only in this method.)\r\n      typeof isCustomComponentTag === 'boolean'\r\n    ) {\r\n      // Validate that the properties correspond to their expected values.\r\n      let serverValue;\r\n      const propertyInfo =\r\n        isCustomComponentTag && enableCustomElementPropertySupport\r\n          ? null\r\n          : getPropertyInfo(propKey);\r\n      if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) {\r\n        // Don't bother comparing. We're ignoring all these warnings.\r\n      } else if (\r\n        propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\r\n        propKey === SUPPRESS_HYDRATION_WARNING ||\r\n        // Controlled attributes are not validated\r\n        // TODO: Only ignore them on controlled tags.\r\n        propKey === 'value' ||\r\n        propKey === 'checked' ||\r\n        propKey === 'selected'\r\n      ) {\r\n        // Noop\r\n      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\r\n        const serverHTML = domElement.innerHTML;\r\n        const nextHtml = nextProp ? nextProp[HTML] : undefined;\r\n        if (nextHtml != null) {\r\n          const expectedHTML = normalizeHTML(domElement, nextHtml);\r\n          if (expectedHTML !== serverHTML) {\r\n            warnForPropDifference(propKey, serverHTML, expectedHTML);\r\n          }\r\n        }\r\n      } else if (propKey === STYLE) {\r\n        // $FlowFixMe - Should be inferred as not undefined.\r\n        extraAttributeNames.delete(propKey);\r\n\r\n        if (canDiffStyleForHydrationWarning) {\r\n          const expectedStyle = createDangerousStringForStyles(nextProp);\r\n          serverValue = domElement.getAttribute('style');\r\n          if (expectedStyle !== serverValue) {\r\n            warnForPropDifference(propKey, serverValue, expectedStyle);\r\n          }\r\n        }\r\n      } else if (\r\n        enableCustomElementPropertySupport &&\r\n        isCustomComponentTag &&\r\n        (propKey === 'offsetParent' ||\r\n          propKey === 'offsetTop' ||\r\n          propKey === 'offsetLeft' ||\r\n          propKey === 'offsetWidth' ||\r\n          propKey === 'offsetHeight' ||\r\n          propKey === 'isContentEditable' ||\r\n          propKey === 'outerText' ||\r\n          propKey === 'outerHTML')\r\n      ) {\r\n        // $FlowFixMe - Should be inferred as not undefined.\r\n        extraAttributeNames.delete(propKey.toLowerCase());\r\n        if (__DEV__) {\r\n          console.error(\r\n            'Assignment to read-only property will result in a no-op: `%s`',\r\n            propKey,\r\n          );\r\n        }\r\n      } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {\r\n        // $FlowFixMe - Should be inferred as not undefined.\r\n        extraAttributeNames.delete(propKey.toLowerCase());\r\n        serverValue = getValueForAttribute(domElement, propKey, nextProp);\r\n\r\n        if (nextProp !== serverValue) {\r\n          warnForPropDifference(propKey, serverValue, nextProp);\r\n        }\r\n      } else if (\r\n        !shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) &&\r\n        !shouldRemoveAttribute(\r\n          propKey,\r\n          nextProp,\r\n          propertyInfo,\r\n          isCustomComponentTag,\r\n        )\r\n      ) {\r\n        let isMismatchDueToBadCasing = false;\r\n        if (propertyInfo !== null) {\r\n          // $FlowFixMe - Should be inferred as not undefined.\r\n          extraAttributeNames.delete(propertyInfo.attributeName);\r\n          serverValue = getValueForProperty(\r\n            domElement,\r\n            propKey,\r\n            nextProp,\r\n            propertyInfo,\r\n          );\r\n        } else {\r\n          let ownNamespace = parentNamespace;\r\n          if (ownNamespace === HTML_NAMESPACE) {\r\n            ownNamespace = getIntrinsicNamespace(tag);\r\n          }\r\n          if (ownNamespace === HTML_NAMESPACE) {\r\n            // $FlowFixMe - Should be inferred as not undefined.\r\n            extraAttributeNames.delete(propKey.toLowerCase());\r\n          } else {\r\n            const standardName = getPossibleStandardName(propKey);\r\n            if (standardName !== null && standardName !== propKey) {\r\n              // If an SVG prop is supplied with bad casing, it will\r\n              // be successfully parsed from HTML, but will produce a mismatch\r\n              // (and would be incorrectly rendered on the client).\r\n              // However, we already warn about bad casing elsewhere.\r\n              // So we'll skip the misleading extra mismatch warning in this case.\r\n              isMismatchDueToBadCasing = true;\r\n              // $FlowFixMe - Should be inferred as not undefined.\r\n              extraAttributeNames.delete(standardName);\r\n            }\r\n            // $FlowFixMe - Should be inferred as not undefined.\r\n            extraAttributeNames.delete(propKey);\r\n          }\r\n          serverValue = getValueForAttribute(domElement, propKey, nextProp);\r\n        }\r\n\r\n        const dontWarnCustomElement =\r\n          enableCustomElementPropertySupport &&\r\n          isCustomComponentTag &&\r\n          (typeof nextProp === 'function' || typeof nextProp === 'object');\r\n        if (\r\n          !dontWarnCustomElement &&\r\n          nextProp !== serverValue &&\r\n          !isMismatchDueToBadCasing\r\n        ) {\r\n          warnForPropDifference(propKey, serverValue, nextProp);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (__DEV__) {\r\n    if (shouldWarnDev) {\r\n      if (\r\n        // $FlowFixMe - Should be inferred as not undefined.\r\n        extraAttributeNames.size > 0 &&\r\n        rawProps[SUPPRESS_HYDRATION_WARNING] !== true\r\n      ) {\r\n        // $FlowFixMe - Should be inferred as not undefined.\r\n        warnForExtraAttributes(extraAttributeNames);\r\n      }\r\n    }\r\n  }\r\n\r\n  switch (tag) {\r\n    case 'input':\r\n      // TODO: Make sure we check if this is still unmounted or do any clean\r\n      // up necessary since we never stop tracking anymore.\r\n      track((domElement: any));\r\n      ReactDOMInputPostMountWrapper(domElement, rawProps, true);\r\n      break;\r\n    case 'textarea':\r\n      // TODO: Make sure we check if this is still unmounted or do any clean\r\n      // up necessary since we never stop tracking anymore.\r\n      track((domElement: any));\r\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\r\n      break;\r\n    case 'select':\r\n    case 'option':\r\n      // For input and textarea we current always set the value property at\r\n      // post mount to force it to diverge from attributes. However, for\r\n      // option and select we don't quite do the same thing and select\r\n      // is not resilient to the DOM state changing so we don't do that here.\r\n      // TODO: Consider not doing this for input and textarea.\r\n      break;\r\n    default:\r\n      if (typeof rawProps.onClick === 'function') {\r\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\r\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\r\n      }\r\n      break;\r\n  }\r\n\r\n  return updatePayload;\r\n}\r\n\r\nexport function diffHydratedText (\r\n  textNode: Text,\r\n  text: string,\r\n  isConcurrentMode: boolean,\r\n): boolean {\r\n  const isDifferent = textNode.nodeValue !== text;\r\n  return isDifferent;\r\n}\r\n\r\nexport function warnForDeletedHydratableElement (\r\n  parentNode: Element | Document | DocumentFragment,\r\n  child: Element,\r\n) {\r\n  if (__DEV__) {\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    console.error(\r\n      'Did not expect server HTML to contain a <%s> in <%s>.',\r\n      child.nodeName.toLowerCase(),\r\n      parentNode.nodeName.toLowerCase(),\r\n    );\r\n  }\r\n}\r\n\r\nexport function warnForDeletedHydratableText (\r\n  parentNode: Element | Document | DocumentFragment,\r\n  child: Text,\r\n) {\r\n  if (__DEV__) {\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    console.error(\r\n      'Did not expect server HTML to contain the text node \"%s\" in <%s>.',\r\n      child.nodeValue,\r\n      parentNode.nodeName.toLowerCase(),\r\n    );\r\n  }\r\n}\r\n\r\nexport function warnForInsertedHydratedElement (\r\n  parentNode: Element | Document | DocumentFragment,\r\n  tag: string,\r\n  props: Object,\r\n) {\r\n  if (__DEV__) {\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    console.error(\r\n      'Expected server HTML to contain a matching <%s> in <%s>.',\r\n      tag,\r\n      parentNode.nodeName.toLowerCase(),\r\n    );\r\n  }\r\n}\r\n\r\nexport function warnForInsertedHydratedText (\r\n  parentNode: Element | Document | DocumentFragment,\r\n  text: string,\r\n) {\r\n  if (__DEV__) {\r\n    if (text === '') {\r\n      // We expect to insert empty text nodes since they're not represented in\r\n      // the HTML.\r\n      // TODO: Remove this special case if we can just avoid inserting empty\r\n      // text nodes.\r\n      return;\r\n    }\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    console.error(\r\n      'Expected server HTML to contain a matching text node for \"%s\" in <%s>.',\r\n      text,\r\n      parentNode.nodeName.toLowerCase(),\r\n    );\r\n  }\r\n}\r\n\r\nexport function restoreControlledState (\r\n  domElement: Element,\r\n  tag: string,\r\n  props: Object,\r\n): void {\r\n  switch (tag) {\r\n    case 'input':\r\n      ReactDOMInputRestoreControlledState(domElement, props);\r\n      return;\r\n    case 'textarea':\r\n      ReactDOMTextareaRestoreControlledState(domElement, props);\r\n      return;\r\n    case 'select':\r\n      ReactDOMSelectRestoreControlledState(domElement, props);\r\n      return;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}