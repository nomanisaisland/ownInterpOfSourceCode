{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport { TEXT_NODE } from '../shared/HTMLNodeType';\n/**\r\n * Given any node return the first leaf node without children.\r\n *\r\n * @param {DOMElement|DOMTextNode} node\r\n * @return {DOMElement|DOMTextNode}\r\n */\n\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n\n  return node;\n}\n/**\r\n * Get the next sibling within a container. This will walk up the\r\n * DOM if a node's siblings have been exhausted.\r\n *\r\n * @param {DOMElement|DOMTextNode} node\r\n * @return {?DOMElement|DOMTextNode}\r\n */\n\n\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n\n    node = node.parentNode;\n  }\n}\n/**\r\n * Get object describing the nodes which contain characters at offset.\r\n *\r\n * @param {DOMElement|DOMTextNode} root\r\n * @param {number} offset\r\n * @return {?object}\r\n */\n\n\nfunction getNodeForCharacterOffset(root, offset) {\n  let node = getLeafNode(root);\n  let nodeStart = 0;\n  let nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === TEXT_NODE) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nexport default getNodeForCharacterOffset;","map":{"version":3,"names":["TEXT_NODE","getLeafNode","node","firstChild","getSiblingNode","nextSibling","parentNode","getNodeForCharacterOffset","root","offset","nodeStart","nodeEnd","nodeType","textContent","length"],"sources":["E:/react-test/src/react/packages/react-dom/src/client/getNodeForCharacterOffset.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\r\n\r\n/**\r\n * Given any node return the first leaf node without children.\r\n *\r\n * @param {DOMElement|DOMTextNode} node\r\n * @return {DOMElement|DOMTextNode}\r\n */\r\nfunction getLeafNode(node) {\r\n  while (node && node.firstChild) {\r\n    node = node.firstChild;\r\n  }\r\n  return node;\r\n}\r\n\r\n/**\r\n * Get the next sibling within a container. This will walk up the\r\n * DOM if a node's siblings have been exhausted.\r\n *\r\n * @param {DOMElement|DOMTextNode} node\r\n * @return {?DOMElement|DOMTextNode}\r\n */\r\nfunction getSiblingNode(node) {\r\n  while (node) {\r\n    if (node.nextSibling) {\r\n      return node.nextSibling;\r\n    }\r\n    node = node.parentNode;\r\n  }\r\n}\r\n\r\n/**\r\n * Get object describing the nodes which contain characters at offset.\r\n *\r\n * @param {DOMElement|DOMTextNode} root\r\n * @param {number} offset\r\n * @return {?object}\r\n */\r\nfunction getNodeForCharacterOffset(root: Element, offset: number): ?Object {\r\n  let node = getLeafNode(root);\r\n  let nodeStart = 0;\r\n  let nodeEnd = 0;\r\n\r\n  while (node) {\r\n    if (node.nodeType === TEXT_NODE) {\r\n      nodeEnd = nodeStart + node.textContent.length;\r\n\r\n      if (nodeStart <= offset && nodeEnd >= offset) {\r\n        return {\r\n          node: node,\r\n          offset: offset - nodeStart,\r\n        };\r\n      }\r\n\r\n      nodeStart = nodeEnd;\r\n    }\r\n\r\n    node = getLeafNode(getSiblingNode(node));\r\n  }\r\n}\r\n\r\nexport default getNodeForCharacterOffset;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,SAAR,QAAwB,wBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EACzB,OAAOA,IAAI,IAAIA,IAAI,CAACC,UAApB,EAAgC;IAC9BD,IAAI,GAAGA,IAAI,CAACC,UAAZ;EACD;;EACD,OAAOD,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,cAAT,CAAwBF,IAAxB,EAA8B;EAC5B,OAAOA,IAAP,EAAa;IACX,IAAIA,IAAI,CAACG,WAAT,EAAsB;MACpB,OAAOH,IAAI,CAACG,WAAZ;IACD;;IACDH,IAAI,GAAGA,IAAI,CAACI,UAAZ;EACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,yBAAT,CAAmCC,IAAnC,EAAkDC,MAAlD,EAA2E;EACzE,IAAIP,IAAI,GAAGD,WAAW,CAACO,IAAD,CAAtB;EACA,IAAIE,SAAS,GAAG,CAAhB;EACA,IAAIC,OAAO,GAAG,CAAd;;EAEA,OAAOT,IAAP,EAAa;IACX,IAAIA,IAAI,CAACU,QAAL,KAAkBZ,SAAtB,EAAiC;MAC/BW,OAAO,GAAGD,SAAS,GAAGR,IAAI,CAACW,WAAL,CAAiBC,MAAvC;;MAEA,IAAIJ,SAAS,IAAID,MAAb,IAAuBE,OAAO,IAAIF,MAAtC,EAA8C;QAC5C,OAAO;UACLP,IAAI,EAAEA,IADD;UAELO,MAAM,EAAEA,MAAM,GAAGC;QAFZ,CAAP;MAID;;MAEDA,SAAS,GAAGC,OAAZ;IACD;;IAEDT,IAAI,GAAGD,WAAW,CAACG,cAAc,CAACF,IAAD,CAAf,CAAlB;EACD;AACF;;AAED,eAAeK,yBAAf"},"metadata":{},"sourceType":"module"}