{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nconst valueStack = [];\nlet fiberStack;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor(defaultValue) {\n  return {\n    current: defaultValue\n  };\n}\n\nfunction isEmpty() {\n  return index === -1;\n}\n\nfunction pop(cursor, fiber) {\n  if (index < 0) {\n    if (__DEV__) {\n      console.error('Unexpected pop.');\n    }\n\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      console.error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push(cursor, value, fiber) {\n  index++;\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      console.error('Expected an empty stack. Something was not reset properly.');\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport { createCursor, isEmpty, pop, push, // DEV only:\ncheckThatStackIsEmpty, resetStackAfterFatalErrorInDev };","map":{"version":3,"names":["valueStack","fiberStack","__DEV__","index","createCursor","defaultValue","current","isEmpty","pop","cursor","fiber","console","error","push","value","checkThatStackIsEmpty","resetStackAfterFatalErrorInDev","length"],"sources":["E:/react-test/src/react/packages/react-reconciler/src/ReactFiberStack.old.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from './ReactInternalTypes';\r\n\r\nexport type StackCursor<T> = {|current: T|};\r\n\r\nconst valueStack: Array<any> = [];\r\n\r\nlet fiberStack: Array<Fiber | null>;\r\n\r\nif (__DEV__) {\r\n  fiberStack = [];\r\n}\r\n\r\nlet index = -1;\r\n\r\nfunction createCursor<T>(defaultValue: T): StackCursor<T> {\r\n  return {\r\n    current: defaultValue,\r\n  };\r\n}\r\n\r\nfunction isEmpty(): boolean {\r\n  return index === -1;\r\n}\r\n\r\nfunction pop<T>(cursor: StackCursor<T>, fiber: Fiber): void {\r\n  if (index < 0) {\r\n    if (__DEV__) {\r\n      console.error('Unexpected pop.');\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (__DEV__) {\r\n    if (fiber !== fiberStack[index]) {\r\n      console.error('Unexpected Fiber popped.');\r\n    }\r\n  }\r\n\r\n  cursor.current = valueStack[index];\r\n\r\n  valueStack[index] = null;\r\n\r\n  if (__DEV__) {\r\n    fiberStack[index] = null;\r\n  }\r\n\r\n  index--;\r\n}\r\n\r\nfunction push<T>(cursor: StackCursor<T>, value: T, fiber: Fiber): void {\r\n  index++;\r\n\r\n  valueStack[index] = cursor.current;\r\n\r\n  if (__DEV__) {\r\n    fiberStack[index] = fiber;\r\n  }\r\n\r\n  cursor.current = value;\r\n}\r\n\r\nfunction checkThatStackIsEmpty() {\r\n  if (__DEV__) {\r\n    if (index !== -1) {\r\n      console.error(\r\n        'Expected an empty stack. Something was not reset properly.',\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction resetStackAfterFatalErrorInDev() {\r\n  if (__DEV__) {\r\n    index = -1;\r\n    valueStack.length = 0;\r\n    fiberStack.length = 0;\r\n  }\r\n}\r\n\r\nexport {\r\n  createCursor,\r\n  isEmpty,\r\n  pop,\r\n  push,\r\n  // DEV only:\r\n  checkThatStackIsEmpty,\r\n  resetStackAfterFatalErrorInDev,\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,MAAMA,UAAsB,GAAG,EAA/B;AAEA,IAAIC,UAAJ;;AAEA,IAAIC,OAAJ,EAAa;EACXD,UAAU,GAAG,EAAb;AACD;;AAED,IAAIE,KAAK,GAAG,CAAC,CAAb;;AAEA,SAASC,YAAT,CAAyBC,YAAzB,EAA0D;EACxD,OAAO;IACLC,OAAO,EAAED;EADJ,CAAP;AAGD;;AAED,SAASE,OAAT,GAA4B;EAC1B,OAAOJ,KAAK,KAAK,CAAC,CAAlB;AACD;;AAED,SAASK,GAAT,CAAgBC,MAAhB,EAAwCC,KAAxC,EAA4D;EAC1D,IAAIP,KAAK,GAAG,CAAZ,EAAe;IACb,IAAID,OAAJ,EAAa;MACXS,OAAO,CAACC,KAAR,CAAc,iBAAd;IACD;;IACD;EACD;;EAED,IAAIV,OAAJ,EAAa;IACX,IAAIQ,KAAK,KAAKT,UAAU,CAACE,KAAD,CAAxB,EAAiC;MAC/BQ,OAAO,CAACC,KAAR,CAAc,0BAAd;IACD;EACF;;EAEDH,MAAM,CAACH,OAAP,GAAiBN,UAAU,CAACG,KAAD,CAA3B;EAEAH,UAAU,CAACG,KAAD,CAAV,GAAoB,IAApB;;EAEA,IAAID,OAAJ,EAAa;IACXD,UAAU,CAACE,KAAD,CAAV,GAAoB,IAApB;EACD;;EAEDA,KAAK;AACN;;AAED,SAASU,IAAT,CAAiBJ,MAAjB,EAAyCK,KAAzC,EAAmDJ,KAAnD,EAAuE;EACrEP,KAAK;EAELH,UAAU,CAACG,KAAD,CAAV,GAAoBM,MAAM,CAACH,OAA3B;;EAEA,IAAIJ,OAAJ,EAAa;IACXD,UAAU,CAACE,KAAD,CAAV,GAAoBO,KAApB;EACD;;EAEDD,MAAM,CAACH,OAAP,GAAiBQ,KAAjB;AACD;;AAED,SAASC,qBAAT,GAAiC;EAC/B,IAAIb,OAAJ,EAAa;IACX,IAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;MAChBQ,OAAO,CAACC,KAAR,CACE,4DADF;IAGD;EACF;AACF;;AAED,SAASI,8BAAT,GAA0C;EACxC,IAAId,OAAJ,EAAa;IACXC,KAAK,GAAG,CAAC,CAAT;IACAH,UAAU,CAACiB,MAAX,GAAoB,CAApB;IACAhB,UAAU,CAACgB,MAAX,GAAoB,CAApB;EACD;AACF;;AAED,SACEb,YADF,EAEEG,OAFF,EAGEC,GAHF,EAIEK,IAJF,EAKE;AACAE,qBANF,EAOEC,8BAPF"},"metadata":{},"sourceType":"module"}