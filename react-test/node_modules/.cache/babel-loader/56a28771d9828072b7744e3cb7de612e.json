{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport { getInstanceFromNode, isContainerMarkedAsRoot, markContainerAsRoot, unmarkContainerAsRoot } from './ReactDOMComponentTree';\nimport { listenToAllSupportedEvents } from '../events/DOMPluginEventSystem';\nimport { isValidContainerLegacy } from './ReactDOMRoot';\nimport { DOCUMENT_NODE, ELEMENT_NODE, COMMENT_NODE } from '../shared/HTMLNodeType';\nimport { createContainer, createHydrationContainer, findHostInstanceWithNoPortals, updateContainer, flushSync, getPublicRootInstance, findHostInstance, findHostInstanceWithWarning } from 'react-reconciler/src/ReactFiberReconciler';\nimport { LegacyRoot } from 'react-reconciler/src/ReactRootTags';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport { has as hasInstance } from 'shared/ReactInstanceMap';\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nlet topLevelUpdateWarnings;\n\nif (__DEV__) {\n  topLevelUpdateWarnings = container => {\n    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {\n      const hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);\n\n      if (hostInstance) {\n        if (hostInstance.parentNode !== container) {\n          console.error('render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');\n        }\n      }\n    }\n\n    const isRootRenderedBySomeReact = !!container._reactRootContainer;\n    const rootEl = getReactRootElementInContainer(container);\n    const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\n\n    if (hasNonRootReactChild && !isRootRenderedBySomeReact) {\n      console.error('render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');\n    }\n\n    if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {\n      console.error('render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');\n    }\n  };\n}\n\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOCUMENT_NODE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction noopOnRecoverableError() {// This isn't reachable because onRecoverableError isn't called in the\n  // legacy API.\n}\n\nfunction legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {\n  console.log(\"123213123141\");\n\n  if (isHydrationContainer) {\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n\n      callback = function () {\n        const instance = getPublicRootInstance(root);\n        originalCallback.call(instance);\n      };\n    }\n\n    const root = createHydrationContainer(initialChildren, callback, container, LegacyRoot, null, // hydrationCallbacks\n    false, // isStrictMode\n    false, // concurrentUpdatesByDefaultOverride,\n    '', // identifierPrefix\n    noopOnRecoverableError, // TODO(luna) Support hydration later\n    null);\n    container._reactRootContainer = root;\n    markContainerAsRoot(root.current, container);\n    const rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;\n    listenToAllSupportedEvents(rootContainerElement);\n    flushSync();\n    return root;\n  } else {\n    // First clear any existing content.\n    let rootSibling;\n\n    while (rootSibling = container.lastChild) {\n      container.removeChild(rootSibling);\n    }\n\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n\n      callback = function () {\n        const instance = getPublicRootInstance(root);\n        originalCallback.call(instance);\n      };\n    }\n\n    const root = createContainer(container, LegacyRoot, null, // hydrationCallbacks\n    false, // isStrictMode\n    false, // concurrentUpdatesByDefaultOverride,\n    '', // identifierPrefix\n    noopOnRecoverableError, // onRecoverableError\n    null // transitionCallbacks\n    );\n    container._reactRootContainer = root;\n    markContainerAsRoot(root.current, container);\n    const rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;\n    listenToAllSupportedEvents(rootContainerElement); // Initial mount should not be batched.\n\n    flushSync(() => {\n      updateContainer(initialChildren, root, parentComponent, callback);\n    });\n    return root;\n  }\n}\n\nfunction warnOnInvalidCallback(callback, callerName) {\n  if (__DEV__) {\n    if (callback !== null && typeof callback !== 'function') {\n      console.error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\n    }\n  }\n}\n\nfunction legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {\n  if (__DEV__) {\n    topLevelUpdateWarnings(container);\n    warnOnInvalidCallback(callback === undefined ? null : callback, 'render');\n  }\n\n  const maybeRoot = container._reactRootContainer;\n  let root;\n\n  if (!maybeRoot) {\n    // Initial mount\n    root = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);\n  } else {\n    root = maybeRoot;\n\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n\n      callback = function () {\n        const instance = getPublicRootInstance(root);\n        originalCallback.call(instance);\n      };\n    } // Update\n\n\n    updateContainer(children, root, parentComponent, callback);\n  }\n\n  return getPublicRootInstance(root);\n}\n\nexport function findDOMNode(componentOrElement) {\n  if (__DEV__) {\n    const owner = ReactCurrentOwner.current;\n\n    if (owner !== null && owner.stateNode !== null) {\n      const warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;\n\n      if (!warnedAboutRefsInRender) {\n        console.error('%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentNameFromType(owner.type) || 'A component');\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n\n  if (componentOrElement == null) {\n    return null;\n  }\n\n  if (componentOrElement.nodeType === ELEMENT_NODE) {\n    return componentOrElement;\n  }\n\n  if (__DEV__) {\n    return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');\n  }\n\n  return findHostInstance(componentOrElement);\n}\nexport function hydrate(element, container, callback) {\n  if (__DEV__) {\n    console.error('ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot ' + 'instead. Until you switch to the new API, your app will behave as ' + \"if it's running React 17. Learn \" + 'more: https://reactjs.org/link/switch-to-createroot');\n  }\n\n  if (!isValidContainerLegacy(container)) {\n    throw new Error('Target container is not a DOM element.');\n  }\n\n  if (__DEV__) {\n    const isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;\n\n    if (isModernRoot) {\n      console.error('You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. ' + 'Did you mean to call hydrateRoot(container, element)?');\n    }\n  } // TODO: throw or warn if we couldn't hydrate?\n\n\n  return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);\n}\nexport function render(element, container, callback) {\n  if (__DEV__) {\n    console.error('ReactDOM.render is no longer supported in React 18. Use createRoot ' + 'instead. Until you switch to the new API, your app will behave as ' + \"if it's running React 17. Learn \" + 'more: https://reactjs.org/link/switch-to-createroot');\n  }\n\n  if (!isValidContainerLegacy(container)) {\n    throw new Error('Target container is not a DOM element.');\n  }\n\n  if (__DEV__) {\n    const isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;\n\n    if (isModernRoot) {\n      console.error('You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. ' + 'Did you mean to call root.render(element)?');\n    }\n  }\n\n  return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);\n}\nexport function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {\n  if (__DEV__) {\n    console.error('ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported ' + 'in React 18. Consider using a portal instead. Until you switch to ' + \"the createRoot API, your app will behave as if it's running React \" + '17. Learn more: https://reactjs.org/link/switch-to-createroot');\n  }\n\n  if (!isValidContainerLegacy(containerNode)) {\n    throw new Error('Target container is not a DOM element.');\n  }\n\n  if (parentComponent == null || !hasInstance(parentComponent)) {\n    throw new Error('parentComponent must be a valid React Component');\n  }\n\n  return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);\n}\nexport function unmountComponentAtNode(container) {\n  if (!isValidContainerLegacy(container)) {\n    throw new Error('unmountComponentAtNode(...): Target container is not a DOM element.');\n  }\n\n  if (__DEV__) {\n    const isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;\n\n    if (isModernRoot) {\n      console.error('You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?');\n    }\n  }\n\n  if (container._reactRootContainer) {\n    if (__DEV__) {\n      const rootEl = getReactRootElementInContainer(container);\n      const renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);\n\n      if (renderedByDifferentReact) {\n        console.error(\"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by another copy of React.');\n      }\n    } // Unmount should not be batched.\n\n\n    flushSync(() => {\n      legacyRenderSubtreeIntoContainer(null, null, container, false, () => {\n        // $FlowFixMe This should probably use `delete container._reactRootContainer`\n        container._reactRootContainer = null;\n        unmarkContainerAsRoot(container);\n      });\n    }); // If you call unmountComponentAtNode twice in quick succession, you'll\n    // get `true` twice. That's probably fine?\n\n    return true;\n  } else {\n    if (__DEV__) {\n      const rootEl = getReactRootElementInContainer(container);\n      const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl)); // Check if the container itself is a React root node.\n\n      const isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;\n\n      if (hasNonRootReactChild) {\n        console.error(\"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');\n      }\n    }\n\n    return false;\n  }\n}","map":{"version":3,"names":["getInstanceFromNode","isContainerMarkedAsRoot","markContainerAsRoot","unmarkContainerAsRoot","listenToAllSupportedEvents","isValidContainerLegacy","DOCUMENT_NODE","ELEMENT_NODE","COMMENT_NODE","createContainer","createHydrationContainer","findHostInstanceWithNoPortals","updateContainer","flushSync","getPublicRootInstance","findHostInstance","findHostInstanceWithWarning","LegacyRoot","getComponentNameFromType","ReactSharedInternals","has","hasInstance","ReactCurrentOwner","topLevelUpdateWarnings","__DEV__","container","_reactRootContainer","nodeType","hostInstance","current","parentNode","console","error","isRootRenderedBySomeReact","rootEl","getReactRootElementInContainer","hasNonRootReactChild","tagName","toUpperCase","documentElement","firstChild","noopOnRecoverableError","legacyCreateRootFromDOMContainer","initialChildren","parentComponent","callback","isHydrationContainer","log","originalCallback","instance","root","call","rootContainerElement","rootSibling","lastChild","removeChild","warnOnInvalidCallback","callerName","legacyRenderSubtreeIntoContainer","children","forceHydrate","undefined","maybeRoot","findDOMNode","componentOrElement","owner","stateNode","warnedAboutRefsInRender","_warnedAboutRefsInRender","type","hydrate","element","Error","isModernRoot","render","unstable_renderSubtreeIntoContainer","containerNode","unmountComponentAtNode","renderedByDifferentReact","isContainerReactRoot"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/react-dom/src/client/ReactDOMLegacy.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Container} from './ReactDOMHostConfig';\r\nimport type {FiberRoot} from 'react-reconciler/src/ReactInternalTypes';\r\nimport type {ReactNodeList} from 'shared/ReactTypes';\r\n\r\nimport {\r\n  getInstanceFromNode,\r\n  isContainerMarkedAsRoot,\r\n  markContainerAsRoot,\r\n  unmarkContainerAsRoot,\r\n} from './ReactDOMComponentTree';\r\nimport {listenToAllSupportedEvents} from '../events/DOMPluginEventSystem';\r\nimport {isValidContainerLegacy} from './ReactDOMRoot';\r\nimport {\r\n  DOCUMENT_NODE,\r\n  ELEMENT_NODE,\r\n  COMMENT_NODE,\r\n} from '../shared/HTMLNodeType';\r\n\r\nimport {\r\n  createContainer,\r\n  createHydrationContainer,\r\n  findHostInstanceWithNoPortals,\r\n  updateContainer,\r\n  flushSync,\r\n  getPublicRootInstance,\r\n  findHostInstance,\r\n  findHostInstanceWithWarning,\r\n} from 'react-reconciler/src/ReactFiberReconciler';\r\nimport {LegacyRoot} from 'react-reconciler/src/ReactRootTags';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport {has as hasInstance} from 'shared/ReactInstanceMap';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\n\r\nlet topLevelUpdateWarnings;\r\n\r\nif (__DEV__) {\r\n  topLevelUpdateWarnings = (container: Container) => {\r\n    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {\r\n      const hostInstance = findHostInstanceWithNoPortals(\r\n        container._reactRootContainer.current,\r\n      );\r\n      if (hostInstance) {\r\n        if (hostInstance.parentNode !== container) {\r\n          console.error(\r\n            'render(...): It looks like the React-rendered content of this ' +\r\n              'container was removed without using React. This is not ' +\r\n              'supported and will cause errors. Instead, call ' +\r\n              'ReactDOM.unmountComponentAtNode to empty a container.',\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    const isRootRenderedBySomeReact = !!container._reactRootContainer;\r\n    const rootEl = getReactRootElementInContainer(container);\r\n    const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\r\n\r\n    if (hasNonRootReactChild && !isRootRenderedBySomeReact) {\r\n      console.error(\r\n        'render(...): Replacing React-rendered children with a new root ' +\r\n          'component. If you intended to update the children of this node, ' +\r\n          'you should instead have the existing children update their state ' +\r\n          'and render the new components instead of calling ReactDOM.render.',\r\n      );\r\n    }\r\n\r\n    if (\r\n      container.nodeType === ELEMENT_NODE &&\r\n      ((container: any): Element).tagName &&\r\n      ((container: any): Element).tagName.toUpperCase() === 'BODY'\r\n    ) {\r\n      console.error(\r\n        'render(): Rendering components directly into document.body is ' +\r\n          'discouraged, since its children are often manipulated by third-party ' +\r\n          'scripts and browser extensions. This may lead to subtle ' +\r\n          'reconciliation issues. Try rendering into a container element created ' +\r\n          'for your app.',\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nfunction getReactRootElementInContainer(container: any) {\r\n  if (!container) {\r\n    return null;\r\n  }\r\n\r\n  if (container.nodeType === DOCUMENT_NODE) {\r\n    return container.documentElement;\r\n  } else {\r\n    return container.firstChild;\r\n  }\r\n}\r\n\r\nfunction noopOnRecoverableError() {\r\n  // This isn't reachable because onRecoverableError isn't called in the\r\n  // legacy API.\r\n}\r\n\r\nfunction legacyCreateRootFromDOMContainer(\r\n  container: Container,\r\n  initialChildren: ReactNodeList,\r\n  parentComponent: ?React$Component<any, any>,\r\n  callback: ?Function,\r\n  isHydrationContainer: boolean,\r\n): FiberRoot {\r\n  console.log(\"123213123141\")\r\n\r\n  if (isHydrationContainer) {\r\n    if (typeof callback === 'function') {\r\n      const originalCallback = callback;\r\n      callback = function() {\r\n        const instance = getPublicRootInstance(root);\r\n        originalCallback.call(instance);\r\n      };\r\n    }\r\n\r\n    const root = createHydrationContainer(\r\n      initialChildren,\r\n      callback,\r\n      container,\r\n      LegacyRoot,\r\n      null, // hydrationCallbacks\r\n      false, // isStrictMode\r\n      false, // concurrentUpdatesByDefaultOverride,\r\n      '', // identifierPrefix\r\n      noopOnRecoverableError,\r\n      // TODO(luna) Support hydration later\r\n      null,\r\n    );\r\n    container._reactRootContainer = root;\r\n    markContainerAsRoot(root.current, container);\r\n\r\n    const rootContainerElement =\r\n      container.nodeType === COMMENT_NODE ? container.parentNode : container;\r\n    listenToAllSupportedEvents(rootContainerElement);\r\n\r\n    flushSync();\r\n    return root;\r\n  } else {\r\n    // First clear any existing content.\r\n    let rootSibling;\r\n    while ((rootSibling = container.lastChild)) {\r\n      container.removeChild(rootSibling);\r\n    }\r\n    if (typeof callback === 'function') {\r\n      const originalCallback = callback;\r\n      callback = function() {\r\n        const instance = getPublicRootInstance(root);\r\n        originalCallback.call(instance);\r\n      };\r\n    }\r\n\r\n    const root = createContainer(\r\n      container,\r\n      LegacyRoot,\r\n      null, // hydrationCallbacks\r\n      false, // isStrictMode\r\n      false, // concurrentUpdatesByDefaultOverride,\r\n      '', // identifierPrefix\r\n      noopOnRecoverableError, // onRecoverableError\r\n      null, // transitionCallbacks\r\n    );\r\n    container._reactRootContainer = root;\r\n    markContainerAsRoot(root.current, container);\r\n\r\n    const rootContainerElement =\r\n      container.nodeType === COMMENT_NODE ? container.parentNode : container;\r\n    listenToAllSupportedEvents(rootContainerElement);\r\n\r\n    // Initial mount should not be batched.\r\n    flushSync(() => {\r\n      updateContainer(initialChildren, root, parentComponent, callback);\r\n    });\r\n\r\n    return root;\r\n  }\r\n}\r\n\r\nfunction warnOnInvalidCallback(callback: mixed, callerName: string): void {\r\n  if (__DEV__) {\r\n    if (callback !== null && typeof callback !== 'function') {\r\n      console.error(\r\n        '%s(...): Expected the last optional `callback` argument to be a ' +\r\n          'function. Instead received: %s.',\r\n        callerName,\r\n        callback,\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction legacyRenderSubtreeIntoContainer(\r\n  parentComponent: ?React$Component<any, any>,\r\n  children: ReactNodeList,\r\n  container: Container,\r\n  forceHydrate: boolean,\r\n  callback: ?Function,\r\n) {\r\n  if (__DEV__) {\r\n    topLevelUpdateWarnings(container);\r\n    warnOnInvalidCallback(callback === undefined ? null : callback, 'render');\r\n  }\r\n\r\n  const maybeRoot = container._reactRootContainer;\r\n  let root: FiberRoot;\r\n  if (!maybeRoot) {\r\n    // Initial mount\r\n    root = legacyCreateRootFromDOMContainer(\r\n      container,\r\n      children,\r\n      parentComponent,\r\n      callback,\r\n      forceHydrate,\r\n    );\r\n  } else {\r\n    root = maybeRoot;\r\n    if (typeof callback === 'function') {\r\n      const originalCallback = callback;\r\n      callback = function() {\r\n        const instance = getPublicRootInstance(root);\r\n        originalCallback.call(instance);\r\n      };\r\n    }\r\n    // Update\r\n    updateContainer(children, root, parentComponent, callback);\r\n  }\r\n  return getPublicRootInstance(root);\r\n}\r\n\r\nexport function findDOMNode(\r\n  componentOrElement: Element | ?React$Component<any, any>,\r\n): null | Element | Text {\r\n  if (__DEV__) {\r\n    const owner = (ReactCurrentOwner.current: any);\r\n    if (owner !== null && owner.stateNode !== null) {\r\n      const warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;\r\n      if (!warnedAboutRefsInRender) {\r\n        console.error(\r\n          '%s is accessing findDOMNode inside its render(). ' +\r\n            'render() should be a pure function of props and state. It should ' +\r\n            'never access something that requires stale data from the previous ' +\r\n            'render, such as refs. Move this logic to componentDidMount and ' +\r\n            'componentDidUpdate instead.',\r\n          getComponentNameFromType(owner.type) || 'A component',\r\n        );\r\n      }\r\n      owner.stateNode._warnedAboutRefsInRender = true;\r\n    }\r\n  }\r\n  if (componentOrElement == null) {\r\n    return null;\r\n  }\r\n  if ((componentOrElement: any).nodeType === ELEMENT_NODE) {\r\n    return (componentOrElement: any);\r\n  }\r\n  if (__DEV__) {\r\n    return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');\r\n  }\r\n  return findHostInstance(componentOrElement);\r\n}\r\n\r\nexport function hydrate(\r\n  element: React$Node,\r\n  container: Container,\r\n  callback: ?Function,\r\n) {\r\n  if (__DEV__) {\r\n    console.error(\r\n      'ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot ' +\r\n        'instead. Until you switch to the new API, your app will behave as ' +\r\n        \"if it's running React 17. Learn \" +\r\n        'more: https://reactjs.org/link/switch-to-createroot',\r\n    );\r\n  }\r\n\r\n  if (!isValidContainerLegacy(container)) {\r\n    throw new Error('Target container is not a DOM element.');\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const isModernRoot =\r\n      isContainerMarkedAsRoot(container) &&\r\n      container._reactRootContainer === undefined;\r\n    if (isModernRoot) {\r\n      console.error(\r\n        'You are calling ReactDOM.hydrate() on a container that was previously ' +\r\n          'passed to ReactDOMClient.createRoot(). This is not supported. ' +\r\n          'Did you mean to call hydrateRoot(container, element)?',\r\n      );\r\n    }\r\n  }\r\n  // TODO: throw or warn if we couldn't hydrate?\r\n  return legacyRenderSubtreeIntoContainer(\r\n    null,\r\n    element,\r\n    container,\r\n    true,\r\n    callback,\r\n  );\r\n}\r\n\r\nexport function render(\r\n  element: React$Element<any>,\r\n  container: Container,\r\n  callback: ?Function,\r\n) {\r\n  if (__DEV__) {\r\n    console.error(\r\n      'ReactDOM.render is no longer supported in React 18. Use createRoot ' +\r\n        'instead. Until you switch to the new API, your app will behave as ' +\r\n        \"if it's running React 17. Learn \" +\r\n        'more: https://reactjs.org/link/switch-to-createroot',\r\n    );\r\n  }\r\n\r\n  if (!isValidContainerLegacy(container)) {\r\n    throw new Error('Target container is not a DOM element.');\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const isModernRoot =\r\n      isContainerMarkedAsRoot(container) &&\r\n      container._reactRootContainer === undefined;\r\n    if (isModernRoot) {\r\n      console.error(\r\n        'You are calling ReactDOM.render() on a container that was previously ' +\r\n          'passed to ReactDOMClient.createRoot(). This is not supported. ' +\r\n          'Did you mean to call root.render(element)?',\r\n      );\r\n    }\r\n  }\r\n  return legacyRenderSubtreeIntoContainer(\r\n    null,\r\n    element,\r\n    container,\r\n    false,\r\n    callback,\r\n  );\r\n}\r\n\r\nexport function unstable_renderSubtreeIntoContainer(\r\n  parentComponent: React$Component<any, any>,\r\n  element: React$Element<any>,\r\n  containerNode: Container,\r\n  callback: ?Function,\r\n) {\r\n  if (__DEV__) {\r\n    console.error(\r\n      'ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported ' +\r\n        'in React 18. Consider using a portal instead. Until you switch to ' +\r\n        \"the createRoot API, your app will behave as if it's running React \" +\r\n        '17. Learn more: https://reactjs.org/link/switch-to-createroot',\r\n    );\r\n  }\r\n\r\n  if (!isValidContainerLegacy(containerNode)) {\r\n    throw new Error('Target container is not a DOM element.');\r\n  }\r\n\r\n  if (parentComponent == null || !hasInstance(parentComponent)) {\r\n    throw new Error('parentComponent must be a valid React Component');\r\n  }\r\n\r\n  return legacyRenderSubtreeIntoContainer(\r\n    parentComponent,\r\n    element,\r\n    containerNode,\r\n    false,\r\n    callback,\r\n  );\r\n}\r\n\r\nexport function unmountComponentAtNode(container: Container) {\r\n  if (!isValidContainerLegacy(container)) {\r\n    throw new Error(\r\n      'unmountComponentAtNode(...): Target container is not a DOM element.',\r\n    );\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const isModernRoot =\r\n      isContainerMarkedAsRoot(container) &&\r\n      container._reactRootContainer === undefined;\r\n    if (isModernRoot) {\r\n      console.error(\r\n        'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' +\r\n          'passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?',\r\n      );\r\n    }\r\n  }\r\n\r\n  if (container._reactRootContainer) {\r\n    if (__DEV__) {\r\n      const rootEl = getReactRootElementInContainer(container);\r\n      const renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);\r\n      if (renderedByDifferentReact) {\r\n        console.error(\r\n          \"unmountComponentAtNode(): The node you're attempting to unmount \" +\r\n            'was rendered by another copy of React.',\r\n        );\r\n      }\r\n    }\r\n\r\n    // Unmount should not be batched.\r\n    flushSync(() => {\r\n      legacyRenderSubtreeIntoContainer(null, null, container, false, () => {\r\n        // $FlowFixMe This should probably use `delete container._reactRootContainer`\r\n        container._reactRootContainer = null;\r\n        unmarkContainerAsRoot(container);\r\n      });\r\n    });\r\n    // If you call unmountComponentAtNode twice in quick succession, you'll\r\n    // get `true` twice. That's probably fine?\r\n    return true;\r\n  } else {\r\n    if (__DEV__) {\r\n      const rootEl = getReactRootElementInContainer(container);\r\n      const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\r\n\r\n      // Check if the container itself is a React root node.\r\n      const isContainerReactRoot =\r\n        container.nodeType === ELEMENT_NODE &&\r\n        isValidContainerLegacy(container.parentNode) &&\r\n        !!container.parentNode._reactRootContainer;\r\n\r\n      if (hasNonRootReactChild) {\r\n        console.error(\r\n          \"unmountComponentAtNode(): The node you're attempting to unmount \" +\r\n            'was rendered by React and is not a top-level container. %s',\r\n          isContainerReactRoot\r\n            ? 'You may have accidentally passed in a React root node instead ' +\r\n                'of its container.'\r\n            : 'Instead, have the parent component update its state and ' +\r\n                'rerender in order to remove this component.',\r\n        );\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}