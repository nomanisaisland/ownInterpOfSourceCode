{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport { enableLegacyHidden } from 'shared/ReactFeatureFlags';\nimport { FunctionComponent, ClassComponent, IndeterminateComponent, HostRoot, HostPortal, HostComponent, HostText, Fragment, Mode, ContextConsumer, ContextProvider, ForwardRef, Profiler, SuspenseComponent, MemoComponent, SimpleMemoComponent, LazyComponent, IncompleteClassComponent, DehydratedFragment, SuspenseListComponent, ScopeComponent, OffscreenComponent, LegacyHiddenComponent, CacheComponent, TracingMarkerComponent } from 'react-reconciler/src/ReactWorkTags';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport { REACT_STRICT_MODE_TYPE } from 'shared/ReactSymbols'; // Keep in sync with shared/getComponentNameFromType\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  const functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);\n} // Keep in sync with shared/getComponentNameFromType\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nexport default function getComponentNameFromFiber(fiber) {\n  const {\n    tag,\n    type\n  } = fiber;\n\n  switch (tag) {\n    case CacheComponent:\n      return 'Cache';\n\n    case ContextConsumer:\n      const context = type;\n      return getContextName(context) + '.Consumer';\n\n    case ContextProvider:\n      const provider = type;\n      return getContextName(provider._context) + '.Provider';\n\n    case DehydratedFragment:\n      return 'DehydratedFragment';\n\n    case ForwardRef:\n      return getWrappedName(type, type.render, 'ForwardRef');\n\n    case Fragment:\n      return 'Fragment';\n\n    case HostComponent:\n      // Host component type is the display name (e.g. \"div\", \"View\")\n      return type;\n\n    case HostPortal:\n      return 'Portal';\n\n    case HostRoot:\n      return 'Root';\n\n    case HostText:\n      return 'Text';\n\n    case LazyComponent:\n      // Name comes from the type in this case; we don't have a tag.\n      return getComponentNameFromType(type);\n\n    case Mode:\n      if (type === REACT_STRICT_MODE_TYPE) {\n        // Don't be less specific than shared/getComponentNameFromType\n        return 'StrictMode';\n      }\n\n      return 'Mode';\n\n    case OffscreenComponent:\n      return 'Offscreen';\n\n    case Profiler:\n      return 'Profiler';\n\n    case ScopeComponent:\n      return 'Scope';\n\n    case SuspenseComponent:\n      return 'Suspense';\n\n    case SuspenseListComponent:\n      return 'SuspenseList';\n\n    case TracingMarkerComponent:\n      return 'TracingMarker';\n    // The display name for this tags come from the user-provided type:\n\n    case ClassComponent:\n    case FunctionComponent:\n    case IncompleteClassComponent:\n    case IndeterminateComponent:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      if (typeof type === 'function') {\n        return type.displayName || type.name || null;\n      }\n\n      if (typeof type === 'string') {\n        return type;\n      }\n\n      break;\n\n    case LegacyHiddenComponent:\n      if (enableLegacyHidden) {\n        return 'LegacyHidden';\n      }\n\n  }\n\n  return null;\n}","map":{"version":3,"names":["enableLegacyHidden","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","TracingMarkerComponent","getComponentNameFromType","REACT_STRICT_MODE_TYPE","getWrappedName","outerType","innerType","wrapperName","functionName","displayName","name","getContextName","type","getComponentNameFromFiber","fiber","tag","context","provider","_context","render"],"sources":["E:/debug-anything/react-test/src/react/packages/react-reconciler/src/getComponentNameFromFiber.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\r\n\r\nimport {enableLegacyHidden} from 'shared/ReactFeatureFlags';\r\n\r\nimport {\r\n  FunctionComponent,\r\n  ClassComponent,\r\n  IndeterminateComponent,\r\n  HostRoot,\r\n  HostPortal,\r\n  HostComponent,\r\n  HostText,\r\n  Fragment,\r\n  Mode,\r\n  ContextConsumer,\r\n  ContextProvider,\r\n  ForwardRef,\r\n  Profiler,\r\n  SuspenseComponent,\r\n  MemoComponent,\r\n  SimpleMemoComponent,\r\n  LazyComponent,\r\n  IncompleteClassComponent,\r\n  DehydratedFragment,\r\n  SuspenseListComponent,\r\n  ScopeComponent,\r\n  OffscreenComponent,\r\n  LegacyHiddenComponent,\r\n  CacheComponent,\r\n  TracingMarkerComponent,\r\n} from 'react-reconciler/src/ReactWorkTags';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {REACT_STRICT_MODE_TYPE} from 'shared/ReactSymbols';\r\n\r\n// Keep in sync with shared/getComponentNameFromType\r\nfunction getWrappedName(\r\n  outerType: mixed,\r\n  innerType: any,\r\n  wrapperName: string,\r\n): string {\r\n  const functionName = innerType.displayName || innerType.name || '';\r\n  return (\r\n    (outerType: any).displayName ||\r\n    (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\r\n  );\r\n}\r\n\r\n// Keep in sync with shared/getComponentNameFromType\r\nfunction getContextName(type: ReactContext<any>) {\r\n  return type.displayName || 'Context';\r\n}\r\n\r\nexport default function getComponentNameFromFiber(fiber: Fiber): string | null {\r\n  const {tag, type} = fiber;\r\n  switch (tag) {\r\n    case CacheComponent:\r\n      return 'Cache';\r\n    case ContextConsumer:\r\n      const context: ReactContext<any> = (type: any);\r\n      return getContextName(context) + '.Consumer';\r\n    case ContextProvider:\r\n      const provider: ReactProviderType<any> = (type: any);\r\n      return getContextName(provider._context) + '.Provider';\r\n    case DehydratedFragment:\r\n      return 'DehydratedFragment';\r\n    case ForwardRef:\r\n      return getWrappedName(type, type.render, 'ForwardRef');\r\n    case Fragment:\r\n      return 'Fragment';\r\n    case HostComponent:\r\n      // Host component type is the display name (e.g. \"div\", \"View\")\r\n      return type;\r\n    case HostPortal:\r\n      return 'Portal';\r\n    case HostRoot:\r\n      return 'Root';\r\n    case HostText:\r\n      return 'Text';\r\n    case LazyComponent:\r\n      // Name comes from the type in this case; we don't have a tag.\r\n      return getComponentNameFromType(type);\r\n    case Mode:\r\n      if (type === REACT_STRICT_MODE_TYPE) {\r\n        // Don't be less specific than shared/getComponentNameFromType\r\n        return 'StrictMode';\r\n      }\r\n      return 'Mode';\r\n    case OffscreenComponent:\r\n      return 'Offscreen';\r\n    case Profiler:\r\n      return 'Profiler';\r\n    case ScopeComponent:\r\n      return 'Scope';\r\n    case SuspenseComponent:\r\n      return 'Suspense';\r\n    case SuspenseListComponent:\r\n      return 'SuspenseList';\r\n    case TracingMarkerComponent:\r\n      return 'TracingMarker';\r\n    // The display name for this tags come from the user-provided type:\r\n    case ClassComponent:\r\n    case FunctionComponent:\r\n    case IncompleteClassComponent:\r\n    case IndeterminateComponent:\r\n    case MemoComponent:\r\n    case SimpleMemoComponent:\r\n      if (typeof type === 'function') {\r\n        return (type: any).displayName || type.name || null;\r\n      }\r\n      if (typeof type === 'string') {\r\n        return type;\r\n      }\r\n      break;\r\n    case LegacyHiddenComponent:\r\n      if (enableLegacyHidden) {\r\n        return 'LegacyHidden';\r\n      }\r\n  }\r\n\r\n  return null;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}