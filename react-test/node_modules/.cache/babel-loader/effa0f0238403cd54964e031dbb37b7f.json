{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\nimport voidElementTags from './voidElementTags';\nconst HTML = '__html';\n\nfunction assertValidProps(tag, props) {\n  if (!props) {\n    return;\n  } // Note the use of `==` which checks for null or undefined.\n\n\n  if (voidElementTags[tag]) {\n    if (props.children != null || props.dangerouslySetInnerHTML != null) {\n      throw new Error(`${tag} is a void element tag and must neither have \\`children\\` nor ` + 'use `dangerouslySetInnerHTML`.');\n    }\n  }\n\n  if (props.dangerouslySetInnerHTML != null) {\n    if (props.children != null) {\n      throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');\n    }\n\n    if (typeof props.dangerouslySetInnerHTML !== 'object' || !(HTML in props.dangerouslySetInnerHTML)) {\n      throw new Error('`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://reactjs.org/link/dangerously-set-inner-html ' + 'for more information.');\n    }\n  }\n\n  if (__DEV__) {\n    if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {\n      console.error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');\n    }\n  }\n\n  if (props.style != null && typeof props.style !== 'object') {\n    throw new Error('The `style` prop expects a mapping from style properties to values, ' + \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" + 'using JSX.');\n  }\n}\n\nexport default assertValidProps;","map":{"version":3,"names":["voidElementTags","HTML","assertValidProps","tag","props","children","dangerouslySetInnerHTML","Error","__DEV__","suppressContentEditableWarning","contentEditable","console","error","style"],"sources":["E:/react-test/src/react/packages/react-dom/src/shared/assertValidProps.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport voidElementTags from './voidElementTags';\r\n\r\nconst HTML = '__html';\r\n\r\nfunction assertValidProps(tag: string, props: ?Object) {\r\n  if (!props) {\r\n    return;\r\n  }\r\n  // Note the use of `==` which checks for null or undefined.\r\n  if (voidElementTags[tag]) {\r\n    if (props.children != null || props.dangerouslySetInnerHTML != null) {\r\n      throw new Error(\r\n        `${tag} is a void element tag and must neither have \\`children\\` nor ` +\r\n          'use `dangerouslySetInnerHTML`.',\r\n      );\r\n    }\r\n  }\r\n  if (props.dangerouslySetInnerHTML != null) {\r\n    if (props.children != null) {\r\n      throw new Error(\r\n        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',\r\n      );\r\n    }\r\n\r\n    if (\r\n      typeof props.dangerouslySetInnerHTML !== 'object' ||\r\n      !(HTML in props.dangerouslySetInnerHTML)\r\n    ) {\r\n      throw new Error(\r\n        '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\r\n          'Please visit https://reactjs.org/link/dangerously-set-inner-html ' +\r\n          'for more information.',\r\n      );\r\n    }\r\n  }\r\n  if (__DEV__) {\r\n    if (\r\n      !props.suppressContentEditableWarning &&\r\n      props.contentEditable &&\r\n      props.children != null\r\n    ) {\r\n      console.error(\r\n        'A component is `contentEditable` and contains `children` managed by ' +\r\n          'React. It is now your responsibility to guarantee that none of ' +\r\n          'those nodes are unexpectedly modified or duplicated. This is ' +\r\n          'probably not intentional.',\r\n      );\r\n    }\r\n  }\r\n\r\n  if (props.style != null && typeof props.style !== 'object') {\r\n    throw new Error(\r\n      'The `style` prop expects a mapping from style properties to values, ' +\r\n        \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" +\r\n        'using JSX.',\r\n    );\r\n  }\r\n}\r\n\r\nexport default assertValidProps;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,IAAI,GAAG,QAAb;;AAEA,SAASC,gBAAT,CAA0BC,GAA1B,EAAuCC,KAAvC,EAAuD;EACrD,IAAI,CAACA,KAAL,EAAY;IACV;EACD,CAHoD,CAIrD;;;EACA,IAAIJ,eAAe,CAACG,GAAD,CAAnB,EAA0B;IACxB,IAAIC,KAAK,CAACC,QAAN,IAAkB,IAAlB,IAA0BD,KAAK,CAACE,uBAAN,IAAiC,IAA/D,EAAqE;MACnE,MAAM,IAAIC,KAAJ,CACH,GAAEJ,GAAI,gEAAP,GACE,gCAFE,CAAN;IAID;EACF;;EACD,IAAIC,KAAK,CAACE,uBAAN,IAAiC,IAArC,EAA2C;IACzC,IAAIF,KAAK,CAACC,QAAN,IAAkB,IAAtB,EAA4B;MAC1B,MAAM,IAAIE,KAAJ,CACJ,oEADI,CAAN;IAGD;;IAED,IACE,OAAOH,KAAK,CAACE,uBAAb,KAAyC,QAAzC,IACA,EAAEL,IAAI,IAAIG,KAAK,CAACE,uBAAhB,CAFF,EAGE;MACA,MAAM,IAAIC,KAAJ,CACJ,0EACE,mEADF,GAEE,uBAHE,CAAN;IAKD;EACF;;EACD,IAAIC,OAAJ,EAAa;IACX,IACE,CAACJ,KAAK,CAACK,8BAAP,IACAL,KAAK,CAACM,eADN,IAEAN,KAAK,CAACC,QAAN,IAAkB,IAHpB,EAIE;MACAM,OAAO,CAACC,KAAR,CACE,yEACE,iEADF,GAEE,+DAFF,GAGE,2BAJJ;IAMD;EACF;;EAED,IAAIR,KAAK,CAACS,KAAN,IAAe,IAAf,IAAuB,OAAOT,KAAK,CAACS,KAAb,KAAuB,QAAlD,EAA4D;IAC1D,MAAM,IAAIN,KAAJ,CACJ,yEACE,wEADF,GAEE,YAHE,CAAN;EAKD;AACF;;AAED,eAAeL,gBAAf"},"metadata":{},"sourceType":"module"}