{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport { noTimeout, supportsHydration } from './ReactFiberHostConfig';\nimport { createHostRootFiber } from './ReactFiber.old';\nimport { NoLane, NoLanes, NoTimestamp, TotalLanes, createLaneMap } from './ReactFiberLane.old';\nimport { enableSuspenseCallback, enableCache, enableProfilerCommitHooks, enableProfilerTimer, enableUpdaterTracking, enableTransitionTracing } from 'shared/ReactFeatureFlags';\nimport { initializeUpdateQueue } from './ReactUpdateQueue.old';\nimport { LegacyRoot, ConcurrentRoot } from './ReactRootTags';\nimport { createCache, retainCache } from './ReactFiberCacheComponent.old';\n\nfunction FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.callbackNode = null;\n  this.callbackPriority = NoLane;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n  this.identifierPrefix = identifierPrefix;\n  this.onRecoverableError = onRecoverableError;\n\n  if (enableCache) {\n    this.pooledCache = null;\n    this.pooledCacheLanes = NoLanes;\n  }\n\n  if (supportsHydration) {\n    this.mutableSourceEagerHydrationData = null;\n  }\n\n  if (enableSuspenseCallback) {\n    this.hydrationCallbacks = null;\n  }\n\n  if (enableTransitionTracing) {\n    this.transitionCallbacks = null;\n    const transitionLanesMap = this.transitionLanes = [];\n\n    for (let i = 0; i < TotalLanes; i++) {\n      transitionLanesMap.push(null);\n    }\n  }\n\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    this.effectDuration = 0;\n    this.passiveEffectDuration = 0;\n  }\n\n  if (enableUpdaterTracking) {\n    this.memoizedUpdaters = new Set();\n    const pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];\n\n    for (let i = 0; i < TotalLanes; i++) {\n      pendingUpdatersLaneMap.push(new Set());\n    }\n  }\n\n  if (__DEV__) {\n    switch (tag) {\n      case ConcurrentRoot:\n        this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';\n        break;\n\n      case LegacyRoot:\n        this._debugRootType = hydrate ? 'hydrate()' : 'render()';\n        break;\n    }\n  }\n}\n\n_c = FiberRootNode;\nexport function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the\n// host config, but because they are passed in at runtime, we have to thread\n// them through the root constructor. Perhaps we should put them all into a\n// single type, like a DynamicHostConfig that is defined by the renderer.\nidentifierPrefix, onRecoverableError, transitionCallbacks) {\n  const root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);\n\n  if (enableSuspenseCallback) {\n    root.hydrationCallbacks = hydrationCallbacks;\n  }\n\n  if (enableTransitionTracing) {\n    root.transitionCallbacks = transitionCallbacks;\n  } // Cyclic construction. This cheats the type system right now because\n  // stateNode is any.\n\n\n  const uninitializedFiber = createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride);\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  if (enableCache) {\n    const initialCache = createCache();\n    retainCache(initialCache); // The pooledCache is a fresh cache instance that is used temporarily\n    // for newly mounted boundaries during a render. In general, the\n    // pooledCache is always cleared from the root at the end of a render:\n    // it is either released when render commits, or moved to an Offscreen\n    // component if rendering suspends. Because the lifetime of the pooled\n    // cache is distinct from the main memoizedState.cache, it must be\n    // retained separately.\n\n    root.pooledCache = initialCache;\n    retainCache(initialCache);\n    const initialState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: initialCache,\n      transitions: null,\n      pendingSuspenseBoundaries: null\n    };\n    uninitializedFiber.memoizedState = initialState;\n  } else {\n    const initialState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: null,\n      // not enabled yet\n      transitions: null,\n      pendingSuspenseBoundaries: null\n    };\n    uninitializedFiber.memoizedState = initialState;\n  }\n\n  initializeUpdateQueue(uninitializedFiber);\n  return root;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FiberRootNode\");","map":{"version":3,"names":["noTimeout","supportsHydration","createHostRootFiber","NoLane","NoLanes","NoTimestamp","TotalLanes","createLaneMap","enableSuspenseCallback","enableCache","enableProfilerCommitHooks","enableProfilerTimer","enableUpdaterTracking","enableTransitionTracing","initializeUpdateQueue","LegacyRoot","ConcurrentRoot","createCache","retainCache","FiberRootNode","containerInfo","tag","hydrate","identifierPrefix","onRecoverableError","pendingChildren","current","pingCache","finishedWork","timeoutHandle","context","pendingContext","callbackNode","callbackPriority","eventTimes","expirationTimes","pendingLanes","suspendedLanes","pingedLanes","expiredLanes","mutableReadLanes","finishedLanes","entangledLanes","entanglements","pooledCache","pooledCacheLanes","mutableSourceEagerHydrationData","hydrationCallbacks","transitionCallbacks","transitionLanesMap","transitionLanes","i","push","effectDuration","passiveEffectDuration","memoizedUpdaters","Set","pendingUpdatersLaneMap","__DEV__","_debugRootType","createFiberRoot","initialChildren","isStrictMode","concurrentUpdatesByDefaultOverride","root","uninitializedFiber","stateNode","initialCache","initialState","element","isDehydrated","cache","transitions","pendingSuspenseBoundaries","memoizedState"],"sources":["E:/debug-anything/react-test/src/react/packages/react-reconciler/src/ReactFiberRoot.old.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {ReactNodeList} from 'shared/ReactTypes';\r\nimport type {\r\n  FiberRoot,\r\n  SuspenseHydrationCallbacks,\r\n  TransitionTracingCallbacks,\r\n} from './ReactInternalTypes';\r\nimport type {RootTag} from './ReactRootTags';\r\nimport type {Cache} from './ReactFiberCacheComponent.old';\r\nimport type {\r\n  PendingSuspenseBoundaries,\r\n  Transition,\r\n} from './ReactFiberTracingMarkerComponent.old';\r\n\r\nimport {noTimeout, supportsHydration} from './ReactFiberHostConfig';\r\nimport {createHostRootFiber} from './ReactFiber.old';\r\nimport {\r\n  NoLane,\r\n  NoLanes,\r\n  NoTimestamp,\r\n  TotalLanes,\r\n  createLaneMap,\r\n} from './ReactFiberLane.old';\r\nimport {\r\n  enableSuspenseCallback,\r\n  enableCache,\r\n  enableProfilerCommitHooks,\r\n  enableProfilerTimer,\r\n  enableUpdaterTracking,\r\n  enableTransitionTracing,\r\n} from 'shared/ReactFeatureFlags';\r\nimport {initializeUpdateQueue} from './ReactUpdateQueue.old';\r\nimport {LegacyRoot, ConcurrentRoot} from './ReactRootTags';\r\nimport {createCache, retainCache} from './ReactFiberCacheComponent.old';\r\n\r\nexport type RootState = {\r\n  element: any,\r\n  isDehydrated: boolean,\r\n  cache: Cache,\r\n  pendingSuspenseBoundaries: PendingSuspenseBoundaries | null,\r\n  transitions: Set<Transition> | null,\r\n};\r\n\r\nfunction FiberRootNode(\r\n  containerInfo,\r\n  tag,\r\n  hydrate,\r\n  identifierPrefix,\r\n  onRecoverableError,\r\n) {\r\n  this.tag = tag;\r\n  this.containerInfo = containerInfo;\r\n  this.pendingChildren = null;\r\n  this.current = null;\r\n  this.pingCache = null;\r\n  this.finishedWork = null;\r\n  this.timeoutHandle = noTimeout;\r\n  this.context = null;\r\n  this.pendingContext = null;\r\n  this.callbackNode = null;\r\n  this.callbackPriority = NoLane;\r\n  this.eventTimes = createLaneMap(NoLanes);\r\n  this.expirationTimes = createLaneMap(NoTimestamp);\r\n\r\n  this.pendingLanes = NoLanes;\r\n  this.suspendedLanes = NoLanes;\r\n  this.pingedLanes = NoLanes;\r\n  this.expiredLanes = NoLanes;\r\n  this.mutableReadLanes = NoLanes;\r\n  this.finishedLanes = NoLanes;\r\n\r\n  this.entangledLanes = NoLanes;\r\n  this.entanglements = createLaneMap(NoLanes);\r\n\r\n  this.identifierPrefix = identifierPrefix;\r\n  this.onRecoverableError = onRecoverableError;\r\n\r\n  if (enableCache) {\r\n    this.pooledCache = null;\r\n    this.pooledCacheLanes = NoLanes;\r\n  }\r\n\r\n  if (supportsHydration) {\r\n    this.mutableSourceEagerHydrationData = null;\r\n  }\r\n\r\n  if (enableSuspenseCallback) {\r\n    this.hydrationCallbacks = null;\r\n  }\r\n\r\n  if (enableTransitionTracing) {\r\n    this.transitionCallbacks = null;\r\n    const transitionLanesMap = (this.transitionLanes = []);\r\n    for (let i = 0; i < TotalLanes; i++) {\r\n      transitionLanesMap.push(null);\r\n    }\r\n  }\r\n\r\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\r\n    this.effectDuration = 0;\r\n    this.passiveEffectDuration = 0;\r\n  }\r\n\r\n  if (enableUpdaterTracking) {\r\n    this.memoizedUpdaters = new Set();\r\n    const pendingUpdatersLaneMap = (this.pendingUpdatersLaneMap = []);\r\n    for (let i = 0; i < TotalLanes; i++) {\r\n      pendingUpdatersLaneMap.push(new Set());\r\n    }\r\n  }\r\n\r\n  if (__DEV__) {\r\n    switch (tag) {\r\n      case ConcurrentRoot:\r\n        this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';\r\n        break;\r\n      case LegacyRoot:\r\n        this._debugRootType = hydrate ? 'hydrate()' : 'render()';\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport function createFiberRoot(\r\n  containerInfo: any,\r\n  tag: RootTag,\r\n  hydrate: boolean,\r\n  initialChildren: ReactNodeList,\r\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\r\n  isStrictMode: boolean,\r\n  concurrentUpdatesByDefaultOverride: null | boolean,\r\n  // TODO: We have several of these arguments that are conceptually part of the\r\n  // host config, but because they are passed in at runtime, we have to thread\r\n  // them through the root constructor. Perhaps we should put them all into a\r\n  // single type, like a DynamicHostConfig that is defined by the renderer.\r\n  identifierPrefix: string,\r\n  onRecoverableError: null | ((error: mixed) => void),\r\n  transitionCallbacks: null | TransitionTracingCallbacks,\r\n): FiberRoot {\r\n  const root: FiberRoot = (new FiberRootNode(\r\n    containerInfo,\r\n    tag,\r\n    hydrate,\r\n    identifierPrefix,\r\n    onRecoverableError,\r\n  ): any);\r\n  if (enableSuspenseCallback) {\r\n    root.hydrationCallbacks = hydrationCallbacks;\r\n  }\r\n\r\n  if (enableTransitionTracing) {\r\n    root.transitionCallbacks = transitionCallbacks;\r\n  }\r\n\r\n  // Cyclic construction. This cheats the type system right now because\r\n  // stateNode is any.\r\n  const uninitializedFiber = createHostRootFiber(\r\n    tag,\r\n    isStrictMode,\r\n    concurrentUpdatesByDefaultOverride,\r\n  );\r\n  root.current = uninitializedFiber;\r\n  uninitializedFiber.stateNode = root;\r\n\r\n  if (enableCache) {\r\n    const initialCache = createCache();\r\n    retainCache(initialCache);\r\n\r\n    // The pooledCache is a fresh cache instance that is used temporarily\r\n    // for newly mounted boundaries during a render. In general, the\r\n    // pooledCache is always cleared from the root at the end of a render:\r\n    // it is either released when render commits, or moved to an Offscreen\r\n    // component if rendering suspends. Because the lifetime of the pooled\r\n    // cache is distinct from the main memoizedState.cache, it must be\r\n    // retained separately.\r\n    root.pooledCache = initialCache;\r\n    retainCache(initialCache);\r\n    const initialState: RootState = {\r\n      element: initialChildren,\r\n      isDehydrated: hydrate,\r\n      cache: initialCache,\r\n      transitions: null,\r\n      pendingSuspenseBoundaries: null,\r\n    };\r\n    uninitializedFiber.memoizedState = initialState;\r\n  } else {\r\n    const initialState: RootState = {\r\n      element: initialChildren,\r\n      isDehydrated: hydrate,\r\n      cache: (null: any), // not enabled yet\r\n      transitions: null,\r\n      pendingSuspenseBoundaries: null,\r\n    };\r\n    uninitializedFiber.memoizedState = initialState;\r\n  }\r\n\r\n  initializeUpdateQueue(uninitializedFiber);\r\n\r\n  return root;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}