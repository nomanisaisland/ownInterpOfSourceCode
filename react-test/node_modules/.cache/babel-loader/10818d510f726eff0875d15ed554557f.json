{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport { HostComponent, LazyComponent, SuspenseComponent, SuspenseListComponent, FunctionComponent, IndeterminateComponent, ForwardRef, SimpleMemoComponent, ClassComponent } from './ReactWorkTags';\nimport { describeBuiltInComponentFrame, describeFunctionComponentFrame, describeClassComponentFrame } from 'shared/ReactComponentStackFrame';\n\nfunction describeFiber(fiber) {\n  const owner = __DEV__ ? fiber._debugOwner ? fiber._debugOwner.type : null : null;\n  const source = __DEV__ ? fiber._debugSource : null;\n\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\n\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy', source, owner);\n\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense', source, owner);\n\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList', source, owner);\n\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type, source, owner);\n\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\n\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type, source, owner);\n\n    default:\n      return '';\n  }\n}\n\nexport function getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    let info = '';\n    let node = workInProgress;\n\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}","map":{"version":3,"names":["HostComponent","LazyComponent","SuspenseComponent","SuspenseListComponent","FunctionComponent","IndeterminateComponent","ForwardRef","SimpleMemoComponent","ClassComponent","describeBuiltInComponentFrame","describeFunctionComponentFrame","describeClassComponentFrame","describeFiber","fiber","owner","__DEV__","_debugOwner","type","source","_debugSource","tag","render","getStackByFiberInDevAndProd","workInProgress","info","node","return","x","message","stack"],"sources":["E:/debug-anything/react-test/src/react/packages/react-reconciler/src/ReactFiberComponentStack.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from './ReactInternalTypes';\r\n\r\nimport {\r\n  HostComponent,\r\n  LazyComponent,\r\n  SuspenseComponent,\r\n  SuspenseListComponent,\r\n  FunctionComponent,\r\n  IndeterminateComponent,\r\n  ForwardRef,\r\n  SimpleMemoComponent,\r\n  ClassComponent,\r\n} from './ReactWorkTags';\r\nimport {\r\n  describeBuiltInComponentFrame,\r\n  describeFunctionComponentFrame,\r\n  describeClassComponentFrame,\r\n} from 'shared/ReactComponentStackFrame';\r\n\r\nfunction describeFiber(fiber: Fiber): string {\r\n  const owner: null | Function = __DEV__\r\n    ? fiber._debugOwner\r\n      ? fiber._debugOwner.type\r\n      : null\r\n    : null;\r\n  const source = __DEV__ ? fiber._debugSource : null;\r\n  switch (fiber.tag) {\r\n    case HostComponent:\r\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\r\n    case LazyComponent:\r\n      return describeBuiltInComponentFrame('Lazy', source, owner);\r\n    case SuspenseComponent:\r\n      return describeBuiltInComponentFrame('Suspense', source, owner);\r\n    case SuspenseListComponent:\r\n      return describeBuiltInComponentFrame('SuspenseList', source, owner);\r\n    case FunctionComponent:\r\n    case IndeterminateComponent:\r\n    case SimpleMemoComponent:\r\n      return describeFunctionComponentFrame(fiber.type, source, owner);\r\n    case ForwardRef:\r\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\r\n    case ClassComponent:\r\n      return describeClassComponentFrame(fiber.type, source, owner);\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nexport function getStackByFiberInDevAndProd(workInProgress: Fiber): string {\r\n  try {\r\n    let info = '';\r\n    let node = workInProgress;\r\n    do {\r\n      info += describeFiber(node);\r\n      node = node.return;\r\n    } while (node);\r\n    return info;\r\n  } catch (x) {\r\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,SACEA,aADF,EAEEC,aAFF,EAGEC,iBAHF,EAIEC,qBAJF,EAKEC,iBALF,EAMEC,sBANF,EAOEC,UAPF,EAQEC,mBARF,EASEC,cATF,QAUO,iBAVP;AAWA,SACEC,6BADF,EAEEC,8BAFF,EAGEC,2BAHF,QAIO,iCAJP;;AAMA,SAASC,aAAT,CAAuBC,KAAvB,EAA6C;EAC3C,MAAMC,KAAsB,GAAGC,OAAO,GAClCF,KAAK,CAACG,WAAN,GACEH,KAAK,CAACG,WAAN,CAAkBC,IADpB,GAEE,IAHgC,GAIlC,IAJJ;EAKA,MAAMC,MAAM,GAAGH,OAAO,GAAGF,KAAK,CAACM,YAAT,GAAwB,IAA9C;;EACA,QAAQN,KAAK,CAACO,GAAd;IACE,KAAKpB,aAAL;MACE,OAAOS,6BAA6B,CAACI,KAAK,CAACI,IAAP,EAAaC,MAAb,EAAqBJ,KAArB,CAApC;;IACF,KAAKb,aAAL;MACE,OAAOQ,6BAA6B,CAAC,MAAD,EAASS,MAAT,EAAiBJ,KAAjB,CAApC;;IACF,KAAKZ,iBAAL;MACE,OAAOO,6BAA6B,CAAC,UAAD,EAAaS,MAAb,EAAqBJ,KAArB,CAApC;;IACF,KAAKX,qBAAL;MACE,OAAOM,6BAA6B,CAAC,cAAD,EAAiBS,MAAjB,EAAyBJ,KAAzB,CAApC;;IACF,KAAKV,iBAAL;IACA,KAAKC,sBAAL;IACA,KAAKE,mBAAL;MACE,OAAOG,8BAA8B,CAACG,KAAK,CAACI,IAAP,EAAaC,MAAb,EAAqBJ,KAArB,CAArC;;IACF,KAAKR,UAAL;MACE,OAAOI,8BAA8B,CAACG,KAAK,CAACI,IAAN,CAAWI,MAAZ,EAAoBH,MAApB,EAA4BJ,KAA5B,CAArC;;IACF,KAAKN,cAAL;MACE,OAAOG,2BAA2B,CAACE,KAAK,CAACI,IAAP,EAAaC,MAAb,EAAqBJ,KAArB,CAAlC;;IACF;MACE,OAAO,EAAP;EAlBJ;AAoBD;;AAED,OAAO,SAASQ,2BAAT,CAAqCC,cAArC,EAAoE;EACzE,IAAI;IACF,IAAIC,IAAI,GAAG,EAAX;IACA,IAAIC,IAAI,GAAGF,cAAX;;IACA,GAAG;MACDC,IAAI,IAAIZ,aAAa,CAACa,IAAD,CAArB;MACAA,IAAI,GAAGA,IAAI,CAACC,MAAZ;IACD,CAHD,QAGSD,IAHT;;IAIA,OAAOD,IAAP;EACD,CARD,CAQE,OAAOG,CAAP,EAAU;IACV,OAAO,+BAA+BA,CAAC,CAACC,OAAjC,GAA2C,IAA3C,GAAkDD,CAAC,CAACE,KAA3D;EACD;AACF"},"metadata":{},"sourceType":"module"}