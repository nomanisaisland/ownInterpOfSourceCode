{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport is from './objectIs';\nimport hasOwnProperty from './hasOwnProperty';\n/**\r\n * Performs equality by iterating through keys on an object and returning false\r\n * when any key has values which are not strictly equal between the arguments.\r\n * Returns true when the values of all keys are strictly equal.\r\n */\n\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  for (let i = 0; i < keysA.length; i++) {\n    const currentKey = keysA[i];\n\n    if (!hasOwnProperty.call(objB, currentKey) || !is(objA[currentKey], objB[currentKey])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;","map":{"version":3,"names":["is","hasOwnProperty","shallowEqual","objA","objB","keysA","Object","keys","keysB","length","i","currentKey","call"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/shared/shallowEqual.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport is from './objectIs';\r\nimport hasOwnProperty from './hasOwnProperty';\r\n\r\n/**\r\n * Performs equality by iterating through keys on an object and returning false\r\n * when any key has values which are not strictly equal between the arguments.\r\n * Returns true when the values of all keys are strictly equal.\r\n */\r\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\r\n  if (is(objA, objB)) {\r\n    return true;\r\n  }\r\n\r\n  if (\r\n    typeof objA !== 'object' ||\r\n    objA === null ||\r\n    typeof objB !== 'object' ||\r\n    objB === null\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  const keysA = Object.keys(objA);\r\n  const keysB = Object.keys(objB);\r\n\r\n  if (keysA.length !== keysB.length) {\r\n    return false;\r\n  }\r\n\r\n  // Test for A's keys different from B.\r\n  for (let i = 0; i < keysA.length; i++) {\r\n    const currentKey = keysA[i];\r\n    if (\r\n      !hasOwnProperty.call(objB, currentKey) ||\r\n      !is(objA[currentKey], objB[currentKey])\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport default shallowEqual;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,IAAtB,EAAmCC,IAAnC,EAAyD;EACvD,IAAIJ,EAAE,CAACG,IAAD,EAAOC,IAAP,CAAN,EAAoB;IAClB,OAAO,IAAP;EACD;;EAED,IACE,OAAOD,IAAP,KAAgB,QAAhB,IACAA,IAAI,KAAK,IADT,IAEA,OAAOC,IAAP,KAAgB,QAFhB,IAGAA,IAAI,KAAK,IAJX,EAKE;IACA,OAAO,KAAP;EACD;;EAED,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,CAAd;EACA,MAAMK,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAd;;EAEA,IAAIC,KAAK,CAACI,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;IACjC,OAAO,KAAP;EACD,CAnBsD,CAqBvD;;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACI,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;IACrC,MAAMC,UAAU,GAAGN,KAAK,CAACK,CAAD,CAAxB;;IACA,IACE,CAACT,cAAc,CAACW,IAAf,CAAoBR,IAApB,EAA0BO,UAA1B,CAAD,IACA,CAACX,EAAE,CAACG,IAAI,CAACQ,UAAD,CAAL,EAAmBP,IAAI,CAACO,UAAD,CAAvB,CAFL,EAGE;MACA,OAAO,KAAP;IACD;EACF;;EAED,OAAO,IAAP;AACD;;AAED,eAAeT,YAAf"},"metadata":{},"sourceType":"module"}