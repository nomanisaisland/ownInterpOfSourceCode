{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport { getPublicInstance, getInstanceFromNode, getInstanceFromScope } from './ReactFiberHostConfig';\nimport { isFiberSuspenseAndTimedOut } from './ReactFiberTreeReflection';\nimport { HostComponent, ScopeComponent, ContextProvider } from './ReactWorkTags';\nimport { enableScopeAPI } from 'shared/ReactFeatureFlags';\n\nfunction getSuspenseFallbackChild(fiber) {\n  return fiber.child.sibling.child;\n}\n\nconst emptyObject = {};\n\nfunction collectScopedNodes(node, fn, scopedNodes) {\n  if (enableScopeAPI) {\n    if (node.tag === HostComponent) {\n      const {\n        type,\n        memoizedProps,\n        stateNode\n      } = node;\n      const instance = getPublicInstance(stateNode);\n\n      if (instance !== null && fn(type, memoizedProps || emptyObject, instance) === true) {\n        scopedNodes.push(instance);\n      }\n    }\n\n    let child = node.child;\n\n    if (isFiberSuspenseAndTimedOut(node)) {\n      child = getSuspenseFallbackChild(node);\n    }\n\n    if (child !== null) {\n      collectScopedNodesFromChildren(child, fn, scopedNodes);\n    }\n  }\n}\n\nfunction collectFirstScopedNode(node, fn) {\n  if (enableScopeAPI) {\n    if (node.tag === HostComponent) {\n      const {\n        type,\n        memoizedProps,\n        stateNode\n      } = node;\n      const instance = getPublicInstance(stateNode);\n\n      if (instance !== null && fn(type, memoizedProps, instance) === true) {\n        return instance;\n      }\n    }\n\n    let child = node.child;\n\n    if (isFiberSuspenseAndTimedOut(node)) {\n      child = getSuspenseFallbackChild(node);\n    }\n\n    if (child !== null) {\n      return collectFirstScopedNodeFromChildren(child, fn);\n    }\n  }\n\n  return null;\n}\n\nfunction collectScopedNodesFromChildren(startingChild, fn, scopedNodes) {\n  let child = startingChild;\n\n  while (child !== null) {\n    collectScopedNodes(child, fn, scopedNodes);\n    child = child.sibling;\n  }\n}\n\nfunction collectFirstScopedNodeFromChildren(startingChild, fn) {\n  let child = startingChild;\n\n  while (child !== null) {\n    const scopedNode = collectFirstScopedNode(child, fn);\n\n    if (scopedNode !== null) {\n      return scopedNode;\n    }\n\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nfunction collectNearestContextValues(node, context, childContextValues) {\n  if (node.tag === ContextProvider && node.type._context === context) {\n    const contextValue = node.memoizedProps.value;\n    childContextValues.push(contextValue);\n  } else {\n    let child = node.child;\n\n    if (isFiberSuspenseAndTimedOut(node)) {\n      child = getSuspenseFallbackChild(node);\n    }\n\n    if (child !== null) {\n      collectNearestChildContextValues(child, context, childContextValues);\n    }\n  }\n}\n\nfunction collectNearestChildContextValues(startingChild, context, childContextValues) {\n  let child = startingChild;\n\n  while (child !== null) {\n    collectNearestContextValues(child, context, childContextValues);\n    child = child.sibling;\n  }\n}\n\nfunction DO_NOT_USE_queryAllNodes(fn) {\n  const currentFiber = getInstanceFromScope(this);\n\n  if (currentFiber === null) {\n    return null;\n  }\n\n  const child = currentFiber.child;\n  const scopedNodes = [];\n\n  if (child !== null) {\n    collectScopedNodesFromChildren(child, fn, scopedNodes);\n  }\n\n  return scopedNodes.length === 0 ? null : scopedNodes;\n}\n\n_c = DO_NOT_USE_queryAllNodes;\n\nfunction DO_NOT_USE_queryFirstNode(fn) {\n  const currentFiber = getInstanceFromScope(this);\n\n  if (currentFiber === null) {\n    return null;\n  }\n\n  const child = currentFiber.child;\n\n  if (child !== null) {\n    return collectFirstScopedNodeFromChildren(child, fn);\n  }\n\n  return null;\n}\n\n_c2 = DO_NOT_USE_queryFirstNode;\n\nfunction containsNode(node) {\n  let fiber = getInstanceFromNode(node);\n\n  while (fiber !== null) {\n    if (fiber.tag === ScopeComponent && fiber.stateNode === this) {\n      return true;\n    }\n\n    fiber = fiber.return;\n  }\n\n  return false;\n}\n\nfunction getChildContextValues(context) {\n  const currentFiber = getInstanceFromScope(this);\n\n  if (currentFiber === null) {\n    return [];\n  }\n\n  const child = currentFiber.child;\n  const childContextValues = [];\n\n  if (child !== null) {\n    collectNearestChildContextValues(child, context, childContextValues);\n  }\n\n  return childContextValues;\n}\n\nexport function createScopeInstance() {\n  return {\n    DO_NOT_USE_queryAllNodes,\n    DO_NOT_USE_queryFirstNode,\n    containsNode,\n    getChildContextValues\n  };\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DO_NOT_USE_queryAllNodes\");\n$RefreshReg$(_c2, \"DO_NOT_USE_queryFirstNode\");","map":{"version":3,"names":["getPublicInstance","getInstanceFromNode","getInstanceFromScope","isFiberSuspenseAndTimedOut","HostComponent","ScopeComponent","ContextProvider","enableScopeAPI","getSuspenseFallbackChild","fiber","child","sibling","emptyObject","collectScopedNodes","node","fn","scopedNodes","tag","type","memoizedProps","stateNode","instance","push","collectScopedNodesFromChildren","collectFirstScopedNode","collectFirstScopedNodeFromChildren","startingChild","scopedNode","collectNearestContextValues","context","childContextValues","_context","contextValue","value","collectNearestChildContextValues","DO_NOT_USE_queryAllNodes","currentFiber","length","DO_NOT_USE_queryFirstNode","containsNode","return","getChildContextValues","createScopeInstance"],"sources":["E:/debug-anything/react-test/src/react/packages/react-reconciler/src/ReactFiberScope.new.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from './ReactInternalTypes';\r\nimport type {\r\n  ReactScopeInstance,\r\n  ReactContext,\r\n  ReactScopeQuery,\r\n} from 'shared/ReactTypes';\r\n\r\nimport {\r\n  getPublicInstance,\r\n  getInstanceFromNode,\r\n  getInstanceFromScope,\r\n} from './ReactFiberHostConfig';\r\nimport {isFiberSuspenseAndTimedOut} from './ReactFiberTreeReflection';\r\n\r\nimport {HostComponent, ScopeComponent, ContextProvider} from './ReactWorkTags';\r\nimport {enableScopeAPI} from 'shared/ReactFeatureFlags';\r\n\r\nfunction getSuspenseFallbackChild(fiber: Fiber): Fiber | null {\r\n  return ((((fiber.child: any): Fiber).sibling: any): Fiber).child;\r\n}\r\n\r\nconst emptyObject = {};\r\n\r\nfunction collectScopedNodes(\r\n  node: Fiber,\r\n  fn: ReactScopeQuery,\r\n  scopedNodes: Array<any>,\r\n): void {\r\n  if (enableScopeAPI) {\r\n    if (node.tag === HostComponent) {\r\n      const {type, memoizedProps, stateNode} = node;\r\n      const instance = getPublicInstance(stateNode);\r\n      if (\r\n        instance !== null &&\r\n        fn(type, memoizedProps || emptyObject, instance) === true\r\n      ) {\r\n        scopedNodes.push(instance);\r\n      }\r\n    }\r\n    let child = node.child;\r\n\r\n    if (isFiberSuspenseAndTimedOut(node)) {\r\n      child = getSuspenseFallbackChild(node);\r\n    }\r\n    if (child !== null) {\r\n      collectScopedNodesFromChildren(child, fn, scopedNodes);\r\n    }\r\n  }\r\n}\r\n\r\nfunction collectFirstScopedNode(\r\n  node: Fiber,\r\n  fn: ReactScopeQuery,\r\n): null | Object {\r\n  if (enableScopeAPI) {\r\n    if (node.tag === HostComponent) {\r\n      const {type, memoizedProps, stateNode} = node;\r\n      const instance = getPublicInstance(stateNode);\r\n      if (instance !== null && fn(type, memoizedProps, instance) === true) {\r\n        return instance;\r\n      }\r\n    }\r\n    let child = node.child;\r\n\r\n    if (isFiberSuspenseAndTimedOut(node)) {\r\n      child = getSuspenseFallbackChild(node);\r\n    }\r\n    if (child !== null) {\r\n      return collectFirstScopedNodeFromChildren(child, fn);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction collectScopedNodesFromChildren(\r\n  startingChild: Fiber,\r\n  fn: ReactScopeQuery,\r\n  scopedNodes: Array<any>,\r\n): void {\r\n  let child = startingChild;\r\n  while (child !== null) {\r\n    collectScopedNodes(child, fn, scopedNodes);\r\n    child = child.sibling;\r\n  }\r\n}\r\n\r\nfunction collectFirstScopedNodeFromChildren(\r\n  startingChild: Fiber,\r\n  fn: ReactScopeQuery,\r\n): Object | null {\r\n  let child = startingChild;\r\n  while (child !== null) {\r\n    const scopedNode = collectFirstScopedNode(child, fn);\r\n    if (scopedNode !== null) {\r\n      return scopedNode;\r\n    }\r\n    child = child.sibling;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction collectNearestContextValues<T>(\r\n  node: Fiber,\r\n  context: ReactContext<T>,\r\n  childContextValues: Array<T>,\r\n): void {\r\n  if (node.tag === ContextProvider && node.type._context === context) {\r\n    const contextValue = node.memoizedProps.value;\r\n    childContextValues.push(contextValue);\r\n  } else {\r\n    let child = node.child;\r\n\r\n    if (isFiberSuspenseAndTimedOut(node)) {\r\n      child = getSuspenseFallbackChild(node);\r\n    }\r\n    if (child !== null) {\r\n      collectNearestChildContextValues(child, context, childContextValues);\r\n    }\r\n  }\r\n}\r\n\r\nfunction collectNearestChildContextValues<T>(\r\n  startingChild: Fiber | null,\r\n  context: ReactContext<T>,\r\n  childContextValues: Array<T>,\r\n): void {\r\n  let child = startingChild;\r\n  while (child !== null) {\r\n    collectNearestContextValues(child, context, childContextValues);\r\n    child = child.sibling;\r\n  }\r\n}\r\n\r\nfunction DO_NOT_USE_queryAllNodes(fn: ReactScopeQuery): null | Array<Object> {\r\n  const currentFiber = getInstanceFromScope(this);\r\n  if (currentFiber === null) {\r\n    return null;\r\n  }\r\n  const child = currentFiber.child;\r\n  const scopedNodes = [];\r\n  if (child !== null) {\r\n    collectScopedNodesFromChildren(child, fn, scopedNodes);\r\n  }\r\n  return scopedNodes.length === 0 ? null : scopedNodes;\r\n}\r\n\r\nfunction DO_NOT_USE_queryFirstNode(fn: ReactScopeQuery): null | Object {\r\n  const currentFiber = getInstanceFromScope(this);\r\n  if (currentFiber === null) {\r\n    return null;\r\n  }\r\n  const child = currentFiber.child;\r\n  if (child !== null) {\r\n    return collectFirstScopedNodeFromChildren(child, fn);\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction containsNode(node: Object): boolean {\r\n  let fiber = getInstanceFromNode(node);\r\n  while (fiber !== null) {\r\n    if (fiber.tag === ScopeComponent && fiber.stateNode === this) {\r\n      return true;\r\n    }\r\n    fiber = fiber.return;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction getChildContextValues<T>(context: ReactContext<T>): Array<T> {\r\n  const currentFiber = getInstanceFromScope(this);\r\n  if (currentFiber === null) {\r\n    return [];\r\n  }\r\n  const child = currentFiber.child;\r\n  const childContextValues = [];\r\n  if (child !== null) {\r\n    collectNearestChildContextValues(child, context, childContextValues);\r\n  }\r\n  return childContextValues;\r\n}\r\n\r\nexport function createScopeInstance(): ReactScopeInstance {\r\n  return {\r\n    DO_NOT_USE_queryAllNodes,\r\n    DO_NOT_USE_queryFirstNode,\r\n    containsNode,\r\n    getChildContextValues,\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}