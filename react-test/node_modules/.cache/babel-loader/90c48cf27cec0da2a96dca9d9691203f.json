{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\nimport isValidElementType from 'shared/isValidElementType';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport checkPropTypes from 'shared/checkPropTypes';\nimport { getIteratorFn, REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE, REACT_FRAGMENT_TYPE, REACT_ELEMENT_TYPE } from 'shared/ReactSymbols';\nimport { warnAboutSpreadingKeyToJSX } from 'shared/ReactFeatureFlags';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport isArray from 'shared/isArray';\nimport { jsxDEV } from './ReactJSXElement';\nimport { describeUnknownElementTypeFrameInDEV } from 'shared/ReactComponentStackFrame';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  if (__DEV__) {\n    if (element) {\n      const owner = element._owner;\n      const stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nlet propTypesMisspellWarningShown;\n\nif (__DEV__) {\n  propTypesMisspellWarningShown = false;\n}\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\n\n\nexport function isValidElement(object) {\n  if (__DEV__) {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (__DEV__) {\n    if (ReactCurrentOwner.current) {\n      const name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (__DEV__) {\n    if (source !== undefined) {\n      const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      const lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\n\n\nconst ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  if (__DEV__) {\n    let info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      const parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\n      }\n    }\n\n    return info;\n  }\n}\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (__DEV__) {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    let childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = ` It was passed a child from ${getComponentNameFromType(element._owner.type)}.`;\n    }\n\n    setCurrentlyValidatingElement(element);\n    console.error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (__DEV__) {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (let i = 0; i < node.length; i++) {\n        const child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      const iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          const iterator = iteratorFn.call(node);\n          let step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\n\n\nfunction validatePropTypes(element) {\n  if (__DEV__) {\n    const type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    let propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      const name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      const name = getComponentNameFromType(type);\n      console.error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      console.error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\n\n\nfunction validateFragmentProps(fragment) {\n  if (__DEV__) {\n    const keys = Object.keys(fragment.props);\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n        console.error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nexport function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  if (__DEV__) {\n    const validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      let info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      const sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      let typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      console.error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    const element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      const children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (let i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            console.error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (warnAboutSpreadingKeyToJSX) {\n      if (hasOwnProperty.call(props, 'key')) {\n        console.error('React.jsx: Spreading a key to JSX is a deprecated pattern. ' + 'Explicitly pass a key after spreading props in your JSX call. ' + 'E.g. <%s {...props} key={key} />', getComponentNameFromType(type) || 'ComponentName');\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nexport function jsxWithValidationStatic(type, props, key) {\n  if (__DEV__) {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nexport function jsxWithValidationDynamic(type, props, key) {\n  if (__DEV__) {\n    return jsxWithValidation(type, props, key, false);\n  }\n}","map":{"version":3,"names":["isValidElementType","getComponentNameFromType","checkPropTypes","getIteratorFn","REACT_FORWARD_REF_TYPE","REACT_MEMO_TYPE","REACT_FRAGMENT_TYPE","REACT_ELEMENT_TYPE","warnAboutSpreadingKeyToJSX","hasOwnProperty","isArray","jsxDEV","describeUnknownElementTypeFrameInDEV","ReactSharedInternals","ReactCurrentOwner","ReactDebugCurrentFrame","setCurrentlyValidatingElement","element","__DEV__","owner","_owner","stack","type","_source","setExtraStackFrame","propTypesMisspellWarningShown","isValidElement","object","$$typeof","getDeclarationErrorAddendum","current","name","getSourceInfoErrorAddendum","source","undefined","fileName","replace","lineNumber","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","info","parentName","displayName","validateExplicitKey","_store","validated","key","currentComponentErrorInfo","childOwner","console","error","validateChildKeys","node","i","length","child","iteratorFn","entries","iterator","call","step","next","done","value","validatePropTypes","propTypes","props","PropTypes","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","keys","Object","ref","jsxWithValidation","isStaticChildren","self","validType","sourceInfo","typeString","children","freeze","jsxWithValidationStatic","jsxWithValidationDynamic"],"sources":["E:/debug-anything/react-test/src/react/packages/react/src/jsx/ReactJSXElementValidator.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\r\nimport isValidElementType from 'shared/isValidElementType';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport checkPropTypes from 'shared/checkPropTypes';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_ELEMENT_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport isArray from 'shared/isArray';\r\nimport {jsxDEV} from './ReactJSXElement';\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nlet propTypesMisspellWarningShown;\r\n\r\nif (__DEV__) {\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  if (__DEV__) {\r\n    return (\r\n      typeof object === 'object' &&\r\n      object !== null &&\r\n      object.$$typeof === REACT_ELEMENT_TYPE\r\n    );\r\n  }\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  if (__DEV__) {\r\n    if (ReactCurrentOwner.current) {\r\n      const name = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n      if (name) {\r\n        return '\\n\\nCheck the render method of `' + name + '`.';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  if (__DEV__) {\r\n    if (source !== undefined) {\r\n      const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n      const lineNumber = source.lineNumber;\r\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\nconst ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  if (__DEV__) {\r\n    let info = getDeclarationErrorAddendum();\r\n\r\n    if (!info) {\r\n      const parentName =\r\n        typeof parentType === 'string'\r\n          ? parentType\r\n          : parentType.displayName || parentType.name;\r\n      if (parentName) {\r\n        info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\nfunction validateExplicitKey(element, parentType) {\r\n  if (__DEV__) {\r\n    if (!element._store || element._store.validated || element.key != null) {\r\n      return;\r\n    }\r\n    element._store.validated = true;\r\n\r\n    const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n      return;\r\n    }\r\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n    // Usually the current owner is the offender, but if it accepts children as a\r\n    // property, it may be the creator of the child that's responsible for\r\n    // assigning it a key.\r\n    let childOwner = '';\r\n    if (\r\n      element &&\r\n      element._owner &&\r\n      element._owner !== ReactCurrentOwner.current\r\n    ) {\r\n      // Give the component that originally created this child.\r\n      childOwner = ` It was passed a child from ${getComponentNameFromType(\r\n        element._owner.type,\r\n      )}.`;\r\n    }\r\n\r\n    setCurrentlyValidatingElement(element);\r\n    console.error(\r\n      'Each child in a list should have a unique \"key\" prop.' +\r\n        '%s%s See https://reactjs.org/link/warning-keys for more information.',\r\n      currentComponentErrorInfo,\r\n      childOwner,\r\n    );\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\nfunction validateChildKeys(node, parentType) {\r\n  if (__DEV__) {\r\n    if (typeof node !== 'object') {\r\n      return;\r\n    }\r\n    if (isArray(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        const child = node[i];\r\n        if (isValidElement(child)) {\r\n          validateExplicitKey(child, parentType);\r\n        }\r\n      }\r\n    } else if (isValidElement(node)) {\r\n      // This element was passed in a valid location.\r\n      if (node._store) {\r\n        node._store.validated = true;\r\n      }\r\n    } else if (node) {\r\n      const iteratorFn = getIteratorFn(node);\r\n      if (typeof iteratorFn === 'function') {\r\n        // Entry iterators used to provide implicit keys,\r\n        // but now we print a separate warning for them later.\r\n        if (iteratorFn !== node.entries) {\r\n          const iterator = iteratorFn.call(node);\r\n          let step;\r\n          while (!(step = iterator.next()).done) {\r\n            if (isValidElement(step.value)) {\r\n              validateExplicitKey(step.value, parentType);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\nfunction validatePropTypes(element) {\r\n  if (__DEV__) {\r\n    const type = element.type;\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n    let propTypes;\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (\r\n      typeof type === 'object' &&\r\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n        // Note: Memo only checks outer props here.\r\n        // Inner props are checked in the reconciler.\r\n        type.$$typeof === REACT_MEMO_TYPE)\r\n    ) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true;\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      console.error(\r\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\r\n        name || 'Unknown',\r\n      );\r\n    }\r\n    if (\r\n      typeof type.getDefaultProps === 'function' &&\r\n      !type.getDefaultProps.isReactClassApproved\r\n    ) {\r\n      console.error(\r\n        'getDefaultProps is only used on classic React.createClass ' +\r\n          'definitions. Use a static property named `defaultProps` instead.',\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\nfunction validateFragmentProps(fragment) {\r\n  if (__DEV__) {\r\n    const keys = Object.keys(fragment.props);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement(fragment);\r\n        console.error(\r\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\r\n            'React.Fragment can only have `key` and `children` props.',\r\n          key,\r\n        );\r\n        setCurrentlyValidatingElement(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement(fragment);\r\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n      setCurrentlyValidatingElement(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport function jsxWithValidation(\r\n  type,\r\n  props,\r\n  key,\r\n  isStaticChildren,\r\n  source,\r\n  self,\r\n) {\r\n  if (__DEV__) {\r\n    const validType = isValidElementType(type);\r\n\r\n    // We warn in this case but don't throw. We expect the element creation to\r\n    // succeed and there will likely be errors in render.\r\n    if (!validType) {\r\n      let info = '';\r\n      if (\r\n        type === undefined ||\r\n        (typeof type === 'object' &&\r\n          type !== null &&\r\n          Object.keys(type).length === 0)\r\n      ) {\r\n        info +=\r\n          ' You likely forgot to export your component from the file ' +\r\n          \"it's defined in, or you might have mixed up default and named imports.\";\r\n      }\r\n\r\n      const sourceInfo = getSourceInfoErrorAddendum(source);\r\n      if (sourceInfo) {\r\n        info += sourceInfo;\r\n      } else {\r\n        info += getDeclarationErrorAddendum();\r\n      }\r\n\r\n      let typeString;\r\n      if (type === null) {\r\n        typeString = 'null';\r\n      } else if (isArray(type)) {\r\n        typeString = 'array';\r\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n        typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n        info =\r\n          ' Did you accidentally export a JSX literal instead of a component?';\r\n      } else {\r\n        typeString = typeof type;\r\n      }\r\n\r\n      console.error(\r\n        'React.jsx: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n\r\n    const element =   jsxDEV(type, props, key, source, self);\r\n\r\n    // The result can be nullish if a mock or a custom function is used.\r\n    // TODO: Drop this when these are no longer allowed as the type argument.\r\n    if (element == null) {\r\n      return element;\r\n    }\r\n\r\n    // Skip key warning if the type isn't valid since our key validation logic\r\n    // doesn't expect a non-string/function type and can throw confusing errors.\r\n    // We don't want exception behavior to differ between dev and prod.\r\n    // (Rendering will throw with a helpful message and as soon as the type is\r\n    // fixed, the key warnings will appear.)\r\n\r\n    if (validType) {\r\n      const children = props.children;\r\n      if (children !== undefined) {\r\n        if (isStaticChildren) {\r\n          if (isArray(children)) {\r\n            for (let i = 0; i < children.length; i++) {\r\n              validateChildKeys(children[i], type);\r\n            }\r\n\r\n            if (Object.freeze) {\r\n              Object.freeze(children);\r\n            }\r\n          } else {\r\n            console.error(\r\n              'React.jsx: Static children should always be an array. ' +\r\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\r\n                'Use the Babel transform instead.',\r\n            );\r\n          }\r\n        } else {\r\n          validateChildKeys(children, type);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (warnAboutSpreadingKeyToJSX) {\r\n      if (hasOwnProperty.call(props, 'key')) {\r\n        console.error(\r\n          'React.jsx: Spreading a key to JSX is a deprecated pattern. ' +\r\n            'Explicitly pass a key after spreading props in your JSX call. ' +\r\n            'E.g. <%s {...props} key={key} />',\r\n          getComponentNameFromType(type) || 'ComponentName',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (type === REACT_FRAGMENT_TYPE) {\r\n      validateFragmentProps(element);\r\n    } else {\r\n      validatePropTypes(element);\r\n    }\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\n// These two functions exist to still get child warnings in dev\r\n// even with the prod transform. This means that jsxDEV is purely\r\n// opt-in behavior for better messages but that we won't stop\r\n// giving you warnings if you use production apis.\r\nexport function jsxWithValidationStatic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, true);\r\n  }\r\n}\r\n\r\nexport function jsxWithValidationDynamic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, false);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}