{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\nimport { canUseDOM } from 'shared/ExecutionEnvironment';\n/**\r\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\r\n *\r\n * @param {string} styleProp\r\n * @param {string} eventName\r\n * @returns {object}\r\n */\n\nfunction makePrefixMap(styleProp, eventName) {\n  const prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  return prefixes;\n}\n/**\r\n * A list of event names to a configurable list of vendor prefixes.\r\n */\n\n\nconst vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n/**\r\n * Event names that have already been detected and prefixed (if applicable).\r\n */\n\nconst prefixedEventNames = {};\n/**\r\n * Element to check for prefixes on.\r\n */\n\nlet style = {};\n/**\r\n * Bootstrap if a DOM exists.\r\n */\n\nif (canUseDOM) {\n  style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  } // Same as above\n\n\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n/**\r\n * Attempts to determine the correct vendor prefixed event name.\r\n *\r\n * @param {string} eventName\r\n * @returns {string}\r\n */\n\n\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  const prefixMap = vendorPrefixes[eventName];\n\n  for (const styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return eventName;\n}\n\nexport default getVendorPrefixedEventName;","map":{"version":3,"names":["canUseDOM","makePrefixMap","styleProp","eventName","prefixes","toLowerCase","vendorPrefixes","animationend","animationiteration","animationstart","transitionend","prefixedEventNames","style","document","createElement","window","animation","transition","getVendorPrefixedEventName","prefixMap","hasOwnProperty"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/react-dom/src/events/getVendorPrefixedEventName.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\r\n\r\n/**\r\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\r\n *\r\n * @param {string} styleProp\r\n * @param {string} eventName\r\n * @returns {object}\r\n */\r\nfunction makePrefixMap(styleProp, eventName) {\r\n  const prefixes = {};\r\n\r\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\r\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\r\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\r\n\r\n  return prefixes;\r\n}\r\n\r\n/**\r\n * A list of event names to a configurable list of vendor prefixes.\r\n */\r\nconst vendorPrefixes = {\r\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\r\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\r\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\r\n  transitionend: makePrefixMap('Transition', 'TransitionEnd'),\r\n};\r\n\r\n/**\r\n * Event names that have already been detected and prefixed (if applicable).\r\n */\r\nconst prefixedEventNames = {};\r\n\r\n/**\r\n * Element to check for prefixes on.\r\n */\r\nlet style = {};\r\n\r\n/**\r\n * Bootstrap if a DOM exists.\r\n */\r\nif (canUseDOM) {\r\n  style = document.createElement('div').style;\r\n\r\n  // On some platforms, in particular some releases of Android 4.x,\r\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\r\n  // style object but the events that fire will still be prefixed, so we need\r\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\r\n  if (!('AnimationEvent' in window)) {\r\n    delete vendorPrefixes.animationend.animation;\r\n    delete vendorPrefixes.animationiteration.animation;\r\n    delete vendorPrefixes.animationstart.animation;\r\n  }\r\n\r\n  // Same as above\r\n  if (!('TransitionEvent' in window)) {\r\n    delete vendorPrefixes.transitionend.transition;\r\n  }\r\n}\r\n\r\n/**\r\n * Attempts to determine the correct vendor prefixed event name.\r\n *\r\n * @param {string} eventName\r\n * @returns {string}\r\n */\r\nfunction getVendorPrefixedEventName(eventName) {\r\n  if (prefixedEventNames[eventName]) {\r\n    return prefixedEventNames[eventName];\r\n  } else if (!vendorPrefixes[eventName]) {\r\n    return eventName;\r\n  }\r\n\r\n  const prefixMap = vendorPrefixes[eventName];\r\n\r\n  for (const styleProp in prefixMap) {\r\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\r\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\r\n    }\r\n  }\r\n\r\n  return eventName;\r\n}\r\n\r\nexport default getVendorPrefixedEventName;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,SAAR,QAAwB,6BAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,SAAlC,EAA6C;EAC3C,MAAMC,QAAQ,GAAG,EAAjB;EAEAA,QAAQ,CAACF,SAAS,CAACG,WAAV,EAAD,CAAR,GAAoCF,SAAS,CAACE,WAAV,EAApC;EACAD,QAAQ,CAAC,WAAWF,SAAZ,CAAR,GAAiC,WAAWC,SAA5C;EACAC,QAAQ,CAAC,QAAQF,SAAT,CAAR,GAA8B,QAAQC,SAAtC;EAEA,OAAOC,QAAP;AACD;AAED;AACA;AACA;;;AACA,MAAME,cAAc,GAAG;EACrBC,YAAY,EAAEN,aAAa,CAAC,WAAD,EAAc,cAAd,CADN;EAErBO,kBAAkB,EAAEP,aAAa,CAAC,WAAD,EAAc,oBAAd,CAFZ;EAGrBQ,cAAc,EAAER,aAAa,CAAC,WAAD,EAAc,gBAAd,CAHR;EAIrBS,aAAa,EAAET,aAAa,CAAC,YAAD,EAAe,eAAf;AAJP,CAAvB;AAOA;AACA;AACA;;AACA,MAAMU,kBAAkB,GAAG,EAA3B;AAEA;AACA;AACA;;AACA,IAAIC,KAAK,GAAG,EAAZ;AAEA;AACA;AACA;;AACA,IAAIZ,SAAJ,EAAe;EACbY,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,EAA8BF,KAAtC,CADa,CAGb;EACA;EACA;EACA;;EACA,IAAI,EAAE,oBAAoBG,MAAtB,CAAJ,EAAmC;IACjC,OAAOT,cAAc,CAACC,YAAf,CAA4BS,SAAnC;IACA,OAAOV,cAAc,CAACE,kBAAf,CAAkCQ,SAAzC;IACA,OAAOV,cAAc,CAACG,cAAf,CAA8BO,SAArC;EACD,CAXY,CAab;;;EACA,IAAI,EAAE,qBAAqBD,MAAvB,CAAJ,EAAoC;IAClC,OAAOT,cAAc,CAACI,aAAf,CAA6BO,UAApC;EACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,0BAAT,CAAoCf,SAApC,EAA+C;EAC7C,IAAIQ,kBAAkB,CAACR,SAAD,CAAtB,EAAmC;IACjC,OAAOQ,kBAAkB,CAACR,SAAD,CAAzB;EACD,CAFD,MAEO,IAAI,CAACG,cAAc,CAACH,SAAD,CAAnB,EAAgC;IACrC,OAAOA,SAAP;EACD;;EAED,MAAMgB,SAAS,GAAGb,cAAc,CAACH,SAAD,CAAhC;;EAEA,KAAK,MAAMD,SAAX,IAAwBiB,SAAxB,EAAmC;IACjC,IAAIA,SAAS,CAACC,cAAV,CAAyBlB,SAAzB,KAAuCA,SAAS,IAAIU,KAAxD,EAA+D;MAC7D,OAAQD,kBAAkB,CAACR,SAAD,CAAlB,GAAgCgB,SAAS,CAACjB,SAAD,CAAjD;IACD;EACF;;EAED,OAAOC,SAAP;AACD;;AAED,eAAee,0BAAf"},"metadata":{},"sourceType":"module"}