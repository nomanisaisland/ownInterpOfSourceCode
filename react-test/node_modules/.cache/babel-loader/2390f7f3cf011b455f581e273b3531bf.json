{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nlet didWarnAboutMessageChannel = false;\nlet enqueueTaskImpl = null;\nexport default function enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      const requireString = ('require' + Math.random()).slice(0, 7);\n      const nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        if (__DEV__) {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              console.error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        const channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}","map":{"version":3,"names":["didWarnAboutMessageChannel","enqueueTaskImpl","enqueueTask","task","requireString","Math","random","slice","nodeRequire","module","call","setImmediate","_err","callback","__DEV__","MessageChannel","console","error","channel","port1","onmessage","port2","postMessage","undefined"],"sources":["E:/react-test/src/react/packages/shared/enqueueTask.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nlet didWarnAboutMessageChannel = false;\r\nlet enqueueTaskImpl = null;\r\n\r\nexport default function enqueueTask(task: () => void) {\r\n  if (enqueueTaskImpl === null) {\r\n    try {\r\n      // read require off the module object to get around the bundlers.\r\n      // we don't want them to detect a require and bundle a Node polyfill.\r\n      const requireString = ('require' + Math.random()).slice(0, 7);\r\n      const nodeRequire = module && module[requireString];\r\n      // assuming we're in node, let's try to get node's\r\n      // version of setImmediate, bypassing fake timers if any.\r\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\r\n    } catch (_err) {\r\n      // we're in a browser\r\n      // we can't use regular timers because they may still be faked\r\n      // so we try MessageChannel+postMessage instead\r\n      enqueueTaskImpl = function(callback: () => void) {\r\n        if (__DEV__) {\r\n          if (didWarnAboutMessageChannel === false) {\r\n            didWarnAboutMessageChannel = true;\r\n            if (typeof MessageChannel === 'undefined') {\r\n              console.error(\r\n                'This browser does not have a MessageChannel implementation, ' +\r\n                  'so enqueuing tasks via await act(async () => ...) will fail. ' +\r\n                  'Please file an issue at https://github.com/facebook/react/issues ' +\r\n                  'if you encounter this warning.',\r\n              );\r\n            }\r\n          }\r\n        }\r\n        const channel = new MessageChannel();\r\n        channel.port1.onmessage = callback;\r\n        channel.port2.postMessage(undefined);\r\n      };\r\n    }\r\n  }\r\n  return enqueueTaskImpl(task);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,0BAA0B,GAAG,KAAjC;AACA,IAAIC,eAAe,GAAG,IAAtB;AAEA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAAuC;EACpD,IAAIF,eAAe,KAAK,IAAxB,EAA8B;IAC5B,IAAI;MACF;MACA;MACA,MAAMG,aAAa,GAAG,CAAC,YAAYC,IAAI,CAACC,MAAL,EAAb,EAA4BC,KAA5B,CAAkC,CAAlC,EAAqC,CAArC,CAAtB;MACA,MAAMC,WAAW,GAAGC,MAAM,IAAIA,MAAM,CAACL,aAAD,CAApC,CAJE,CAKF;MACA;;MACAH,eAAe,GAAGO,WAAW,CAACE,IAAZ,CAAiBD,MAAjB,EAAyB,QAAzB,EAAmCE,YAArD;IACD,CARD,CAQE,OAAOC,IAAP,EAAa;MACb;MACA;MACA;MACAX,eAAe,GAAG,UAASY,QAAT,EAA+B;QAC/C,IAAIC,OAAJ,EAAa;UACX,IAAId,0BAA0B,KAAK,KAAnC,EAA0C;YACxCA,0BAA0B,GAAG,IAA7B;;YACA,IAAI,OAAOe,cAAP,KAA0B,WAA9B,EAA2C;cACzCC,OAAO,CAACC,KAAR,CACE,iEACE,+DADF,GAEE,mEAFF,GAGE,gCAJJ;YAMD;UACF;QACF;;QACD,MAAMC,OAAO,GAAG,IAAIH,cAAJ,EAAhB;QACAG,OAAO,CAACC,KAAR,CAAcC,SAAd,GAA0BP,QAA1B;QACAK,OAAO,CAACG,KAAR,CAAcC,WAAd,CAA0BC,SAA1B;MACD,CAjBD;IAkBD;EACF;;EACD,OAAOtB,eAAe,CAACE,IAAD,CAAtB;AACD"},"metadata":{},"sourceType":"module"}