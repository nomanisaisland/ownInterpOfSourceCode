{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\nimport { TEXT_NODE } from '../shared/HTMLNodeType';\n/**\r\n * Gets the target node from a native browser event by accounting for\r\n * inconsistencies in browser DOM APIs.\r\n *\r\n * @param {object} nativeEvent Native browser event.\r\n * @return {DOMEventTarget} Target node.\r\n */\n\nfunction getEventTarget(nativeEvent) {\n  // Fallback to nativeEvent.srcElement for IE9\n  // https://github.com/facebook/react/issues/12506\n  let target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963\n\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n\n\n  return target.nodeType === TEXT_NODE ? target.parentNode : target;\n}\n\nexport default getEventTarget;","map":{"version":3,"names":["TEXT_NODE","getEventTarget","nativeEvent","target","srcElement","window","correspondingUseElement","nodeType","parentNode"],"sources":["E:/react-test/src/react/packages/react-dom/src/events/getEventTarget.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\r\n\r\n/**\r\n * Gets the target node from a native browser event by accounting for\r\n * inconsistencies in browser DOM APIs.\r\n *\r\n * @param {object} nativeEvent Native browser event.\r\n * @return {DOMEventTarget} Target node.\r\n */\r\nfunction getEventTarget(nativeEvent) {\r\n  // Fallback to nativeEvent.srcElement for IE9\r\n  // https://github.com/facebook/react/issues/12506\r\n  let target = nativeEvent.target || nativeEvent.srcElement || window;\r\n\r\n  // Normalize SVG <use> element events #4963\r\n  if (target.correspondingUseElement) {\r\n    target = target.correspondingUseElement;\r\n  }\r\n\r\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\r\n  // @see http://www.quirksmode.org/js/events_properties.html\r\n  return target.nodeType === TEXT_NODE ? target.parentNode : target;\r\n}\r\n\r\nexport default getEventTarget;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,SAAR,QAAwB,wBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,WAAxB,EAAqC;EACnC;EACA;EACA,IAAIC,MAAM,GAAGD,WAAW,CAACC,MAAZ,IAAsBD,WAAW,CAACE,UAAlC,IAAgDC,MAA7D,CAHmC,CAKnC;;EACA,IAAIF,MAAM,CAACG,uBAAX,EAAoC;IAClCH,MAAM,GAAGA,MAAM,CAACG,uBAAhB;EACD,CARkC,CAUnC;EACA;;;EACA,OAAOH,MAAM,CAACI,QAAP,KAAoBP,SAApB,GAAgCG,MAAM,CAACK,UAAvC,GAAoDL,MAA3D;AACD;;AAED,eAAeF,cAAf"},"metadata":{},"sourceType":"module"}