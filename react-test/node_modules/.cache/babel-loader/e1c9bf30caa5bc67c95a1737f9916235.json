{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\nexport const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg'; // Assumes there is no parent namespace.\n\nexport function getIntrinsicNamespace(type) {\n  switch (type) {\n    case 'svg':\n      return SVG_NAMESPACE;\n\n    case 'math':\n      return MATH_NAMESPACE;\n\n    default:\n      return HTML_NAMESPACE;\n  }\n}\nexport function getChildNamespace(parentNamespace, type) {\n  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {\n    // No (or default) parent namespace: potential entry point.\n    return getIntrinsicNamespace(type);\n  }\n\n  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {\n    // We're leaving SVG.\n    return HTML_NAMESPACE;\n  } // By default, pass namespace below.\n\n\n  return parentNamespace;\n}","map":{"version":3,"names":["HTML_NAMESPACE","MATH_NAMESPACE","SVG_NAMESPACE","getIntrinsicNamespace","type","getChildNamespace","parentNamespace"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/react-dom/src/shared/DOMNamespaces.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\r\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\r\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\r\n\r\n// Assumes there is no parent namespace.\r\nexport function getIntrinsicNamespace(type: string): string {\r\n  switch (type) {\r\n    case 'svg':\r\n      return SVG_NAMESPACE;\r\n    case 'math':\r\n      return MATH_NAMESPACE;\r\n    default:\r\n      return HTML_NAMESPACE;\r\n  }\r\n}\r\n\r\nexport function getChildNamespace(\r\n  parentNamespace: string | null,\r\n  type: string,\r\n): string {\r\n  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {\r\n    // No (or default) parent namespace: potential entry point.\r\n    return getIntrinsicNamespace(type);\r\n  }\r\n  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {\r\n    // We're leaving SVG.\r\n    return HTML_NAMESPACE;\r\n  }\r\n  // By default, pass namespace below.\r\n  return parentNamespace;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,cAAc,GAAG,8BAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,oCAAvB;AACP,OAAO,MAAMC,aAAa,GAAG,4BAAtB,C,CAEP;;AACA,OAAO,SAASC,qBAAT,CAA+BC,IAA/B,EAAqD;EAC1D,QAAQA,IAAR;IACE,KAAK,KAAL;MACE,OAAOF,aAAP;;IACF,KAAK,MAAL;MACE,OAAOD,cAAP;;IACF;MACE,OAAOD,cAAP;EANJ;AAQD;AAED,OAAO,SAASK,iBAAT,CACLC,eADK,EAELF,IAFK,EAGG;EACR,IAAIE,eAAe,IAAI,IAAnB,IAA2BA,eAAe,KAAKN,cAAnD,EAAmE;IACjE;IACA,OAAOG,qBAAqB,CAACC,IAAD,CAA5B;EACD;;EACD,IAAIE,eAAe,KAAKJ,aAApB,IAAqCE,IAAI,KAAK,eAAlD,EAAmE;IACjE;IACA,OAAOJ,cAAP;EACD,CARO,CASR;;;EACA,OAAOM,eAAP;AACD"},"metadata":{},"sourceType":"module"}