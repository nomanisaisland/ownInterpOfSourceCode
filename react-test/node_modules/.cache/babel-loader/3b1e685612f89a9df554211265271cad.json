{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\n// This exists to avoid circular dependency between ReactDOMEventReplaying\n// and DOMPluginEventSystem.\nlet currentReplayingEvent = null;\nexport function setReplayingEvent(event) {\n  if (__DEV__) {\n    if (currentReplayingEvent !== null) {\n      console.error('Expected currently replaying event to be null. This error ' + 'is likely caused by a bug in React. Please file an issue.');\n    }\n  }\n\n  currentReplayingEvent = event;\n}\nexport function resetReplayingEvent() {\n  if (__DEV__) {\n    if (currentReplayingEvent === null) {\n      console.error('Expected currently replaying event to not be null. This error ' + 'is likely caused by a bug in React. Please file an issue.');\n    }\n  }\n\n  currentReplayingEvent = null;\n}\nexport function isReplayingEvent(event) {\n  return event === currentReplayingEvent;\n}","map":{"version":3,"names":["currentReplayingEvent","setReplayingEvent","event","__DEV__","console","error","resetReplayingEvent","isReplayingEvent"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/react-dom/src/events/CurrentReplayingEvent.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport type {AnyNativeEvent} from '../events/PluginModuleType';\r\n\r\n// This exists to avoid circular dependency between ReactDOMEventReplaying\r\n// and DOMPluginEventSystem.\r\n\r\nlet currentReplayingEvent = null;\r\n\r\nexport function setReplayingEvent(event: AnyNativeEvent): void {\r\n  if (__DEV__) {\r\n    if (currentReplayingEvent !== null) {\r\n      console.error(\r\n        'Expected currently replaying event to be null. This error ' +\r\n          'is likely caused by a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n  currentReplayingEvent = event;\r\n}\r\n\r\nexport function resetReplayingEvent(): void {\r\n  if (__DEV__) {\r\n    if (currentReplayingEvent === null) {\r\n      console.error(\r\n        'Expected currently replaying event to not be null. This error ' +\r\n          'is likely caused by a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n  currentReplayingEvent = null;\r\n}\r\n\r\nexport function isReplayingEvent(event: AnyNativeEvent): boolean {\r\n  return event === currentReplayingEvent;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA,IAAIA,qBAAqB,GAAG,IAA5B;AAEA,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAAwD;EAC7D,IAAIC,OAAJ,EAAa;IACX,IAAIH,qBAAqB,KAAK,IAA9B,EAAoC;MAClCI,OAAO,CAACC,KAAR,CACE,+DACE,2DAFJ;IAID;EACF;;EACDL,qBAAqB,GAAGE,KAAxB;AACD;AAED,OAAO,SAASI,mBAAT,GAAqC;EAC1C,IAAIH,OAAJ,EAAa;IACX,IAAIH,qBAAqB,KAAK,IAA9B,EAAoC;MAClCI,OAAO,CAACC,KAAR,CACE,mEACE,2DAFJ;IAID;EACF;;EACDL,qBAAqB,GAAG,IAAxB;AACD;AAED,OAAO,SAASO,gBAAT,CAA0BL,KAA1B,EAA0D;EAC/D,OAAOA,KAAK,KAAKF,qBAAjB;AACD"},"metadata":{},"sourceType":"module"}