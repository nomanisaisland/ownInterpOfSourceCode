{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport getVendorPrefixedEventName from './getVendorPrefixedEventName';\nexport const ANIMATION_END = getVendorPrefixedEventName('animationend');\nexport const ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');\nexport const ANIMATION_START = getVendorPrefixedEventName('animationstart');\nexport const TRANSITION_END = getVendorPrefixedEventName('transitionend');","map":{"version":3,"names":["getVendorPrefixedEventName","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","TRANSITION_END"],"sources":["E:/react-test/src/react/packages/react-dom/src/events/DOMEventNames.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport getVendorPrefixedEventName from './getVendorPrefixedEventName';\r\n\r\nexport type DOMEventName =\r\n  | 'abort'\r\n  | 'afterblur' // Not a real event. This is used by event experiments.\r\n  // These are vendor-prefixed so you should use the exported constants instead:\r\n  // 'animationiteration' |\r\n  // 'animationend |\r\n  // 'animationstart' |\r\n  | 'beforeblur' // Not a real event. This is used by event experiments.\r\n  | 'beforeinput'\r\n  | 'blur'\r\n  | 'canplay'\r\n  | 'canplaythrough'\r\n  | 'cancel'\r\n  | 'change'\r\n  | 'click'\r\n  | 'close'\r\n  | 'compositionend'\r\n  | 'compositionstart'\r\n  | 'compositionupdate'\r\n  | 'contextmenu'\r\n  | 'copy'\r\n  | 'cut'\r\n  | 'dblclick'\r\n  | 'auxclick'\r\n  | 'drag'\r\n  | 'dragend'\r\n  | 'dragenter'\r\n  | 'dragexit'\r\n  | 'dragleave'\r\n  | 'dragover'\r\n  | 'dragstart'\r\n  | 'drop'\r\n  | 'durationchange'\r\n  | 'emptied'\r\n  | 'encrypted'\r\n  | 'ended'\r\n  | 'error'\r\n  | 'focus'\r\n  | 'focusin'\r\n  | 'focusout'\r\n  | 'fullscreenchange'\r\n  | 'gotpointercapture'\r\n  | 'hashchange'\r\n  | 'input'\r\n  | 'invalid'\r\n  | 'keydown'\r\n  | 'keypress'\r\n  | 'keyup'\r\n  | 'load'\r\n  | 'loadstart'\r\n  | 'loadeddata'\r\n  | 'loadedmetadata'\r\n  | 'lostpointercapture'\r\n  | 'message'\r\n  | 'mousedown'\r\n  | 'mouseenter'\r\n  | 'mouseleave'\r\n  | 'mousemove'\r\n  | 'mouseout'\r\n  | 'mouseover'\r\n  | 'mouseup'\r\n  | 'paste'\r\n  | 'pause'\r\n  | 'play'\r\n  | 'playing'\r\n  | 'pointercancel'\r\n  | 'pointerdown'\r\n  | 'pointerenter'\r\n  | 'pointerleave'\r\n  | 'pointermove'\r\n  | 'pointerout'\r\n  | 'pointerover'\r\n  | 'pointerup'\r\n  | 'popstate'\r\n  | 'progress'\r\n  | 'ratechange'\r\n  | 'reset'\r\n  | 'resize'\r\n  | 'scroll'\r\n  | 'seeked'\r\n  | 'seeking'\r\n  | 'select'\r\n  | 'selectstart'\r\n  | 'selectionchange'\r\n  | 'stalled'\r\n  | 'submit'\r\n  | 'suspend'\r\n  | 'textInput' // Intentionally camelCase. Non-standard.\r\n  | 'timeupdate'\r\n  | 'toggle'\r\n  | 'touchcancel'\r\n  | 'touchend'\r\n  | 'touchmove'\r\n  | 'touchstart'\r\n  // These are vendor-prefixed so you should use the exported constants instead:\r\n  // 'transitionend' |\r\n  | 'volumechange'\r\n  | 'waiting'\r\n  | 'wheel';\r\n\r\nexport const ANIMATION_END: DOMEventName = getVendorPrefixedEventName(\r\n  'animationend',\r\n);\r\nexport const ANIMATION_ITERATION: DOMEventName = getVendorPrefixedEventName(\r\n  'animationiteration',\r\n);\r\nexport const ANIMATION_START: DOMEventName = getVendorPrefixedEventName(\r\n  'animationstart',\r\n);\r\nexport const TRANSITION_END: DOMEventName = getVendorPrefixedEventName(\r\n  'transitionend',\r\n);\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,0BAAP,MAAuC,8BAAvC;AAsGA,OAAO,MAAMC,aAA2B,GAAGD,0BAA0B,CACnE,cADmE,CAA9D;AAGP,OAAO,MAAME,mBAAiC,GAAGF,0BAA0B,CACzE,oBADyE,CAApE;AAGP,OAAO,MAAMG,eAA6B,GAAGH,0BAA0B,CACrE,gBADqE,CAAhE;AAGP,OAAO,MAAMI,cAA4B,GAAGJ,0BAA0B,CACpE,eADoE,CAA/D"},"metadata":{},"sourceType":"module"}