{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\nlet validateDOMNesting = () => {};\n\nlet updatedAncestorInfo = () => {};\n\nif (__DEV__) {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  const specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\n  const inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n\n  const buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n\n  const impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n  const emptyAncestorInfo = {\n    current: null,\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  updatedAncestorInfo = function (oldInfo, tag) {\n    const ancestorInfo = { ...(oldInfo || emptyAncestorInfo)\n    };\n    const info = {\n      tag\n    };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    } // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\n\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n  /**\r\n   * Returns whether\r\n   */\n\n\n  const isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n\n      case 'option':\n        return tag === '#text';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n\n      case 'html':\n        return tag === 'head' || tag === 'body' || tag === 'frameset';\n\n      case 'frameset':\n        return tag === 'frame';\n\n      case '#document':\n        return tag === 'html';\n    } // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\n\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frameset':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n  /**\r\n   * Returns whether\r\n   */\n\n\n  const findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n      case 'pre':\n      case 'listing':\n      case 'table':\n      case 'hr':\n      case 'xmp':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  const didWarn = {};\n\n  validateDOMNesting = function (childTag, childText, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    const parentInfo = ancestorInfo.current;\n    const parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      if (childTag != null) {\n        console.error('validateDOMNesting: when childText is passed, childTag should be null');\n      }\n\n      childTag = '#text';\n    }\n\n    const invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    const invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    const invalidParentOrAncestor = invalidParent || invalidAncestor;\n\n    if (!invalidParentOrAncestor) {\n      return;\n    }\n\n    const ancestorTag = invalidParentOrAncestor.tag;\n    const warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;\n\n    if (didWarn[warnKey]) {\n      return;\n    }\n\n    didWarn[warnKey] = true;\n    let tagDisplayName = childTag;\n    let whitespaceInfo = '';\n\n    if (childTag === '#text') {\n      if (/\\S/.test(childText)) {\n        tagDisplayName = 'Text nodes';\n      } else {\n        tagDisplayName = 'Whitespace text nodes';\n        whitespaceInfo = \" Make sure you don't have any extra whitespace between tags on \" + 'each line of your source code.';\n      }\n    } else {\n      tagDisplayName = '<' + childTag + '>';\n    }\n\n    if (invalidParent) {\n      let info = '';\n\n      if (ancestorTag === 'table' && childTag === 'tr') {\n        info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';\n      }\n\n      console.error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);\n    } else {\n      console.error('validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.', tagDisplayName, ancestorTag);\n    }\n  };\n}\n\nexport { updatedAncestorInfo, validateDOMNesting };","map":{"version":3,"names":["validateDOMNesting","updatedAncestorInfo","__DEV__","specialTags","inScopeTags","buttonScopeTags","concat","impliedEndTags","emptyAncestorInfo","current","formTag","aTagInScope","buttonTagInScope","nobrTagInScope","pTagInButtonScope","listItemTagAutoclosing","dlItemTagAutoclosing","oldInfo","tag","ancestorInfo","info","indexOf","isTagValidWithParent","parentTag","findInvalidAncestorForTag","didWarn","childTag","childText","parentInfo","console","error","invalidParent","invalidAncestor","invalidParentOrAncestor","ancestorTag","warnKey","tagDisplayName","whitespaceInfo","test"],"sources":["E:/debug-anything/react-test/src/react/packages/react-dom/src/client/validateDOMNesting.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nlet validateDOMNesting = () => {};\r\nlet updatedAncestorInfo = () => {};\r\n\r\nif (__DEV__) {\r\n  // This validation code was written based on the HTML5 parsing spec:\r\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\r\n  //\r\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\r\n  // not clear what practical benefit doing so provides); instead, we warn only\r\n  // for cases where the parser will give a parse tree differing from what React\r\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\r\n  // because it still parses correctly; we do warn for other cases like nested\r\n  // <p> tags where the beginning of the second element implicitly closes the\r\n  // first, causing a confusing mess.\r\n\r\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\r\n  const specialTags = [\r\n    'address',\r\n    'applet',\r\n    'area',\r\n    'article',\r\n    'aside',\r\n    'base',\r\n    'basefont',\r\n    'bgsound',\r\n    'blockquote',\r\n    'body',\r\n    'br',\r\n    'button',\r\n    'caption',\r\n    'center',\r\n    'col',\r\n    'colgroup',\r\n    'dd',\r\n    'details',\r\n    'dir',\r\n    'div',\r\n    'dl',\r\n    'dt',\r\n    'embed',\r\n    'fieldset',\r\n    'figcaption',\r\n    'figure',\r\n    'footer',\r\n    'form',\r\n    'frame',\r\n    'frameset',\r\n    'h1',\r\n    'h2',\r\n    'h3',\r\n    'h4',\r\n    'h5',\r\n    'h6',\r\n    'head',\r\n    'header',\r\n    'hgroup',\r\n    'hr',\r\n    'html',\r\n    'iframe',\r\n    'img',\r\n    'input',\r\n    'isindex',\r\n    'li',\r\n    'link',\r\n    'listing',\r\n    'main',\r\n    'marquee',\r\n    'menu',\r\n    'menuitem',\r\n    'meta',\r\n    'nav',\r\n    'noembed',\r\n    'noframes',\r\n    'noscript',\r\n    'object',\r\n    'ol',\r\n    'p',\r\n    'param',\r\n    'plaintext',\r\n    'pre',\r\n    'script',\r\n    'section',\r\n    'select',\r\n    'source',\r\n    'style',\r\n    'summary',\r\n    'table',\r\n    'tbody',\r\n    'td',\r\n    'template',\r\n    'textarea',\r\n    'tfoot',\r\n    'th',\r\n    'thead',\r\n    'title',\r\n    'tr',\r\n    'track',\r\n    'ul',\r\n    'wbr',\r\n    'xmp',\r\n  ];\r\n\r\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\r\n  const inScopeTags = [\r\n    'applet',\r\n    'caption',\r\n    'html',\r\n    'table',\r\n    'td',\r\n    'th',\r\n    'marquee',\r\n    'object',\r\n    'template',\r\n\r\n    // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\r\n    // TODO: Distinguish by namespace here -- for <title>, including it here\r\n    // errs on the side of fewer warnings\r\n    'foreignObject',\r\n    'desc',\r\n    'title',\r\n  ];\r\n\r\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\r\n  const buttonScopeTags = inScopeTags.concat(['button']);\r\n\r\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\r\n  const impliedEndTags = [\r\n    'dd',\r\n    'dt',\r\n    'li',\r\n    'option',\r\n    'optgroup',\r\n    'p',\r\n    'rp',\r\n    'rt',\r\n  ];\r\n\r\n  const emptyAncestorInfo = {\r\n    current: null,\r\n\r\n    formTag: null,\r\n    aTagInScope: null,\r\n    buttonTagInScope: null,\r\n    nobrTagInScope: null,\r\n    pTagInButtonScope: null,\r\n\r\n    listItemTagAutoclosing: null,\r\n    dlItemTagAutoclosing: null,\r\n  };\r\n\r\n  updatedAncestorInfo = function(oldInfo, tag) {\r\n    const ancestorInfo = {...(oldInfo || emptyAncestorInfo)};\r\n    const info = {tag};\r\n\r\n    if (inScopeTags.indexOf(tag) !== -1) {\r\n      ancestorInfo.aTagInScope = null;\r\n      ancestorInfo.buttonTagInScope = null;\r\n      ancestorInfo.nobrTagInScope = null;\r\n    }\r\n    if (buttonScopeTags.indexOf(tag) !== -1) {\r\n      ancestorInfo.pTagInButtonScope = null;\r\n    }\r\n\r\n    // See rules for 'li', 'dd', 'dt' start tags in\r\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\r\n    if (\r\n      specialTags.indexOf(tag) !== -1 &&\r\n      tag !== 'address' &&\r\n      tag !== 'div' &&\r\n      tag !== 'p'\r\n    ) {\r\n      ancestorInfo.listItemTagAutoclosing = null;\r\n      ancestorInfo.dlItemTagAutoclosing = null;\r\n    }\r\n\r\n    ancestorInfo.current = info;\r\n\r\n    if (tag === 'form') {\r\n      ancestorInfo.formTag = info;\r\n    }\r\n    if (tag === 'a') {\r\n      ancestorInfo.aTagInScope = info;\r\n    }\r\n    if (tag === 'button') {\r\n      ancestorInfo.buttonTagInScope = info;\r\n    }\r\n    if (tag === 'nobr') {\r\n      ancestorInfo.nobrTagInScope = info;\r\n    }\r\n    if (tag === 'p') {\r\n      ancestorInfo.pTagInButtonScope = info;\r\n    }\r\n    if (tag === 'li') {\r\n      ancestorInfo.listItemTagAutoclosing = info;\r\n    }\r\n    if (tag === 'dd' || tag === 'dt') {\r\n      ancestorInfo.dlItemTagAutoclosing = info;\r\n    }\r\n\r\n    return ancestorInfo;\r\n  };\r\n\r\n  /**\r\n   * Returns whether\r\n   */\r\n  const isTagValidWithParent = function(tag, parentTag) {\r\n    // First, let's check if we're in an unusual parsing mode...\r\n    switch (parentTag) {\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\r\n      case 'select':\r\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\r\n      case 'optgroup':\r\n        return tag === 'option' || tag === '#text';\r\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\r\n      // but\r\n      case 'option':\r\n        return tag === '#text';\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\r\n      // No special behavior since these rules fall back to \"in body\" mode for\r\n      // all except special table nodes which cause bad parsing behavior anyway.\r\n\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\r\n      case 'tr':\r\n        return (\r\n          tag === 'th' ||\r\n          tag === 'td' ||\r\n          tag === 'style' ||\r\n          tag === 'script' ||\r\n          tag === 'template'\r\n        );\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\r\n      case 'tbody':\r\n      case 'thead':\r\n      case 'tfoot':\r\n        return (\r\n          tag === 'tr' ||\r\n          tag === 'style' ||\r\n          tag === 'script' ||\r\n          tag === 'template'\r\n        );\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\r\n      case 'colgroup':\r\n        return tag === 'col' || tag === 'template';\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\r\n      case 'table':\r\n        return (\r\n          tag === 'caption' ||\r\n          tag === 'colgroup' ||\r\n          tag === 'tbody' ||\r\n          tag === 'tfoot' ||\r\n          tag === 'thead' ||\r\n          tag === 'style' ||\r\n          tag === 'script' ||\r\n          tag === 'template'\r\n        );\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\r\n      case 'head':\r\n        return (\r\n          tag === 'base' ||\r\n          tag === 'basefont' ||\r\n          tag === 'bgsound' ||\r\n          tag === 'link' ||\r\n          tag === 'meta' ||\r\n          tag === 'title' ||\r\n          tag === 'noscript' ||\r\n          tag === 'noframes' ||\r\n          tag === 'style' ||\r\n          tag === 'script' ||\r\n          tag === 'template'\r\n        );\r\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\r\n      case 'html':\r\n        return tag === 'head' || tag === 'body' || tag === 'frameset';\r\n      case 'frameset':\r\n        return tag === 'frame';\r\n      case '#document':\r\n        return tag === 'html';\r\n    }\r\n\r\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\r\n    // where the parsing rules cause implicit opens or closes to be added.\r\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\r\n    switch (tag) {\r\n      case 'h1':\r\n      case 'h2':\r\n      case 'h3':\r\n      case 'h4':\r\n      case 'h5':\r\n      case 'h6':\r\n        return (\r\n          parentTag !== 'h1' &&\r\n          parentTag !== 'h2' &&\r\n          parentTag !== 'h3' &&\r\n          parentTag !== 'h4' &&\r\n          parentTag !== 'h5' &&\r\n          parentTag !== 'h6'\r\n        );\r\n\r\n      case 'rp':\r\n      case 'rt':\r\n        return impliedEndTags.indexOf(parentTag) === -1;\r\n\r\n      case 'body':\r\n      case 'caption':\r\n      case 'col':\r\n      case 'colgroup':\r\n      case 'frameset':\r\n      case 'frame':\r\n      case 'head':\r\n      case 'html':\r\n      case 'tbody':\r\n      case 'td':\r\n      case 'tfoot':\r\n      case 'th':\r\n      case 'thead':\r\n      case 'tr':\r\n        // These tags are only valid with a few parents that have special child\r\n        // parsing rules -- if we're down here, then none of those matched and\r\n        // so we allow it only if we don't know what the parent is, as all other\r\n        // cases are invalid.\r\n        return parentTag == null;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Returns whether\r\n   */\r\n  const findInvalidAncestorForTag = function(tag, ancestorInfo) {\r\n    switch (tag) {\r\n      case 'address':\r\n      case 'article':\r\n      case 'aside':\r\n      case 'blockquote':\r\n      case 'center':\r\n      case 'details':\r\n      case 'dialog':\r\n      case 'dir':\r\n      case 'div':\r\n      case 'dl':\r\n      case 'fieldset':\r\n      case 'figcaption':\r\n      case 'figure':\r\n      case 'footer':\r\n      case 'header':\r\n      case 'hgroup':\r\n      case 'main':\r\n      case 'menu':\r\n      case 'nav':\r\n      case 'ol':\r\n      case 'p':\r\n      case 'section':\r\n      case 'summary':\r\n      case 'ul':\r\n      case 'pre':\r\n      case 'listing':\r\n      case 'table':\r\n      case 'hr':\r\n      case 'xmp':\r\n      case 'h1':\r\n      case 'h2':\r\n      case 'h3':\r\n      case 'h4':\r\n      case 'h5':\r\n      case 'h6':\r\n        return ancestorInfo.pTagInButtonScope;\r\n\r\n      case 'form':\r\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\r\n\r\n      case 'li':\r\n        return ancestorInfo.listItemTagAutoclosing;\r\n\r\n      case 'dd':\r\n      case 'dt':\r\n        return ancestorInfo.dlItemTagAutoclosing;\r\n\r\n      case 'button':\r\n        return ancestorInfo.buttonTagInScope;\r\n\r\n      case 'a':\r\n        // Spec says something about storing a list of markers, but it sounds\r\n        // equivalent to this check.\r\n        return ancestorInfo.aTagInScope;\r\n\r\n      case 'nobr':\r\n        return ancestorInfo.nobrTagInScope;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const didWarn = {};\r\n\r\n  validateDOMNesting = function(childTag, childText, ancestorInfo) {\r\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\r\n    const parentInfo = ancestorInfo.current;\r\n    const parentTag = parentInfo && parentInfo.tag;\r\n\r\n    if (childText != null) {\r\n      if (childTag != null) {\r\n        console.error(\r\n          'validateDOMNesting: when childText is passed, childTag should be null',\r\n        );\r\n      }\r\n      childTag = '#text';\r\n    }\r\n\r\n    const invalidParent = isTagValidWithParent(childTag, parentTag)\r\n      ? null\r\n      : parentInfo;\r\n    const invalidAncestor = invalidParent\r\n      ? null\r\n      : findInvalidAncestorForTag(childTag, ancestorInfo);\r\n    const invalidParentOrAncestor = invalidParent || invalidAncestor;\r\n    if (!invalidParentOrAncestor) {\r\n      return;\r\n    }\r\n\r\n    const ancestorTag = invalidParentOrAncestor.tag;\r\n\r\n    const warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;\r\n    if (didWarn[warnKey]) {\r\n      return;\r\n    }\r\n    didWarn[warnKey] = true;\r\n\r\n    let tagDisplayName = childTag;\r\n    let whitespaceInfo = '';\r\n    if (childTag === '#text') {\r\n      if (/\\S/.test(childText)) {\r\n        tagDisplayName = 'Text nodes';\r\n      } else {\r\n        tagDisplayName = 'Whitespace text nodes';\r\n        whitespaceInfo =\r\n          \" Make sure you don't have any extra whitespace between tags on \" +\r\n          'each line of your source code.';\r\n      }\r\n    } else {\r\n      tagDisplayName = '<' + childTag + '>';\r\n    }\r\n\r\n    if (invalidParent) {\r\n      let info = '';\r\n      if (ancestorTag === 'table' && childTag === 'tr') {\r\n        info +=\r\n          ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' +\r\n          'the browser.';\r\n      }\r\n      console.error(\r\n        'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s',\r\n        tagDisplayName,\r\n        ancestorTag,\r\n        whitespaceInfo,\r\n        info,\r\n      );\r\n    } else {\r\n      console.error(\r\n        'validateDOMNesting(...): %s cannot appear as a descendant of ' +\r\n          '<%s>.',\r\n        tagDisplayName,\r\n        ancestorTag,\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport {updatedAncestorInfo, validateDOMNesting};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}