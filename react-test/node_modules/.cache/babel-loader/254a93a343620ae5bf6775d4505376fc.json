{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport { resetCurrentFiber as resetCurrentDebugFiberInDEV, setCurrentFiber as setCurrentDebugFiberInDEV } from './ReactCurrentFiber';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport { StrictLegacyMode } from './ReactTypeOfMode';\nconst ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings(fiber, instance) {},\n\n  flushPendingUnsafeLifecycleWarnings() {},\n\n  recordLegacyContextWarning(fiber, instance) {},\n\n  flushLegacyContextWarning() {},\n\n  discardPendingWarnings() {}\n\n};\n\nif (__DEV__) {\n  const findStrictRoot = fiber => {\n    let maybeStrictRoot = null;\n    let node = fiber;\n\n    while (node !== null) {\n      if (node.mode & StrictLegacyMode) {\n        maybeStrictRoot = node;\n      }\n\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  const setToSortedString = set => {\n    const array = [];\n    set.forEach(value => {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  let pendingComponentWillMountWarnings = [];\n  let pendingUNSAFE_ComponentWillMountWarnings = [];\n  let pendingComponentWillReceivePropsWarnings = [];\n  let pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n  let pendingComponentWillUpdateWarnings = [];\n  let pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.\n\n  const didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = (fiber, instance) => {\n    // Dedupe strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.\n    instance.componentWillMount.__suppressDeprecationWarning !== true) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === 'function') {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = () => {\n    // We do an initial pass to gather component names\n    const componentWillMountUniqueNames = new Set();\n\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(fiber => {\n        componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    const UNSAFE_componentWillMountUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(fiber => {\n        UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    const componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(fiber => {\n        componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    const UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(fiber => {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    const componentWillUpdateUniqueNames = new Set();\n\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(fiber => {\n        componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    const UNSAFE_componentWillUpdateUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(fiber => {\n        UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    } // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n\n\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\n      console.error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' + '\\nPlease update the following components: %s', sortedNames);\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);\n      console.error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + \"* If you're updating state whenever props change, \" + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' + '\\nPlease update the following components: %s', sortedNames);\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);\n      console.error('Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + '\\nPlease update the following components: %s', sortedNames);\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillMountUniqueNames);\n      console.warn('componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', sortedNames);\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillReceivePropsUniqueNames);\n      console.warn('componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + \"* If you're updating state whenever props change, refactor your \" + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', sortedNames);\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillUpdateUniqueNames);\n      console.warn('componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', sortedNames);\n    }\n  };\n\n  let pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.\n\n  const didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = (fiber, instance) => {\n    const strictRoot = findStrictRoot(fiber);\n\n    if (strictRoot === null) {\n      console.error('Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n      return;\n    } // Dedup strategy: Warn once per component.\n\n\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    let warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = () => {\n    pendingLegacyContextWarning.forEach((fiberArray, strictRoot) => {\n      if (fiberArray.length === 0) {\n        return;\n      }\n\n      const firstFiber = fiberArray[0];\n      const uniqueNames = new Set();\n      fiberArray.forEach(fiber => {\n        uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutLegacyContext.add(fiber.type);\n      });\n      const sortedNames = setToSortedString(uniqueNames);\n\n      try {\n        setCurrentDebugFiberInDEV(firstFiber);\n        console.error('Legacy context API has been detected within a strict-mode tree.' + '\\n\\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context', sortedNames);\n      } finally {\n        resetCurrentDebugFiberInDEV();\n      }\n    });\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = () => {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\nexport default ReactStrictModeWarnings;","map":{"version":3,"names":["resetCurrentFiber","resetCurrentDebugFiberInDEV","setCurrentFiber","setCurrentDebugFiberInDEV","getComponentNameFromFiber","StrictLegacyMode","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","fiber","instance","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","__DEV__","findStrictRoot","maybeStrictRoot","node","mode","return","setToSortedString","set","array","forEach","value","push","sort","join","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","has","type","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","length","add","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","size","sortedNames","console","error","warn","pendingLegacyContextWarning","Map","didWarnAboutLegacyContext","strictRoot","warningsForRoot","get","contextTypes","childContextTypes","getChildContext","undefined","fiberArray","firstFiber","uniqueNames"],"sources":["E:/react-test/src/react/packages/react-reconciler/src/ReactStrictModeWarnings.old.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from './ReactInternalTypes';\r\n\r\nimport {\r\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\r\n  setCurrentFiber as setCurrentDebugFiberInDEV,\r\n} from './ReactCurrentFiber';\r\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\r\nimport {StrictLegacyMode} from './ReactTypeOfMode';\r\n\r\ntype FiberArray = Array<Fiber>;\r\ntype FiberToFiberComponentsMap = Map<Fiber, FiberArray>;\r\n\r\nconst ReactStrictModeWarnings = {\r\n  recordUnsafeLifecycleWarnings(fiber: Fiber, instance: any): void {},\r\n  flushPendingUnsafeLifecycleWarnings(): void {},\r\n  recordLegacyContextWarning(fiber: Fiber, instance: any): void {},\r\n  flushLegacyContextWarning(): void {},\r\n  discardPendingWarnings(): void {},\r\n};\r\n\r\nif (__DEV__) {\r\n  const findStrictRoot = (fiber: Fiber): Fiber | null => {\r\n    let maybeStrictRoot = null;\r\n\r\n    let node = fiber;\r\n    while (node !== null) {\r\n      if (node.mode & StrictLegacyMode) {\r\n        maybeStrictRoot = node;\r\n      }\r\n      node = node.return;\r\n    }\r\n\r\n    return maybeStrictRoot;\r\n  };\r\n\r\n  const setToSortedString = set => {\r\n    const array = [];\r\n    set.forEach(value => {\r\n      array.push(value);\r\n    });\r\n    return array.sort().join(', ');\r\n  };\r\n\r\n  let pendingComponentWillMountWarnings: Array<Fiber> = [];\r\n  let pendingUNSAFE_ComponentWillMountWarnings: Array<Fiber> = [];\r\n  let pendingComponentWillReceivePropsWarnings: Array<Fiber> = [];\r\n  let pendingUNSAFE_ComponentWillReceivePropsWarnings: Array<Fiber> = [];\r\n  let pendingComponentWillUpdateWarnings: Array<Fiber> = [];\r\n  let pendingUNSAFE_ComponentWillUpdateWarnings: Array<Fiber> = [];\r\n\r\n  // Tracks components we have already warned about.\r\n  const didWarnAboutUnsafeLifecycles = new Set();\r\n\r\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = (\r\n    fiber: Fiber,\r\n    instance: any,\r\n  ) => {\r\n    // Dedupe strategy: Warn once per component.\r\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      typeof instance.componentWillMount === 'function' &&\r\n      // Don't warn about react-lifecycles-compat polyfilled components.\r\n      instance.componentWillMount.__suppressDeprecationWarning !== true\r\n    ) {\r\n      pendingComponentWillMountWarnings.push(fiber);\r\n    }\r\n\r\n    if (\r\n      fiber.mode & StrictLegacyMode &&\r\n      typeof instance.UNSAFE_componentWillMount === 'function'\r\n    ) {\r\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\r\n    }\r\n\r\n    if (\r\n      typeof instance.componentWillReceiveProps === 'function' &&\r\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\r\n    ) {\r\n      pendingComponentWillReceivePropsWarnings.push(fiber);\r\n    }\r\n\r\n    if (\r\n      fiber.mode & StrictLegacyMode &&\r\n      typeof instance.UNSAFE_componentWillReceiveProps === 'function'\r\n    ) {\r\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\r\n    }\r\n\r\n    if (\r\n      typeof instance.componentWillUpdate === 'function' &&\r\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\r\n    ) {\r\n      pendingComponentWillUpdateWarnings.push(fiber);\r\n    }\r\n\r\n    if (\r\n      fiber.mode & StrictLegacyMode &&\r\n      typeof instance.UNSAFE_componentWillUpdate === 'function'\r\n    ) {\r\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\r\n    }\r\n  };\r\n\r\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = () => {\r\n    // We do an initial pass to gather component names\r\n    const componentWillMountUniqueNames = new Set();\r\n    if (pendingComponentWillMountWarnings.length > 0) {\r\n      pendingComponentWillMountWarnings.forEach(fiber => {\r\n        componentWillMountUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || 'Component',\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingComponentWillMountWarnings = [];\r\n    }\r\n\r\n    const UNSAFE_componentWillMountUniqueNames = new Set();\r\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\r\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(fiber => {\r\n        UNSAFE_componentWillMountUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || 'Component',\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingUNSAFE_ComponentWillMountWarnings = [];\r\n    }\r\n\r\n    const componentWillReceivePropsUniqueNames = new Set();\r\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\r\n      pendingComponentWillReceivePropsWarnings.forEach(fiber => {\r\n        componentWillReceivePropsUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || 'Component',\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n\r\n      pendingComponentWillReceivePropsWarnings = [];\r\n    }\r\n\r\n    const UNSAFE_componentWillReceivePropsUniqueNames = new Set();\r\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\r\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(fiber => {\r\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || 'Component',\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n\r\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\r\n    }\r\n\r\n    const componentWillUpdateUniqueNames = new Set();\r\n    if (pendingComponentWillUpdateWarnings.length > 0) {\r\n      pendingComponentWillUpdateWarnings.forEach(fiber => {\r\n        componentWillUpdateUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || 'Component',\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n\r\n      pendingComponentWillUpdateWarnings = [];\r\n    }\r\n\r\n    const UNSAFE_componentWillUpdateUniqueNames = new Set();\r\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\r\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(fiber => {\r\n        UNSAFE_componentWillUpdateUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || 'Component',\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n\r\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\r\n    }\r\n\r\n    // Finally, we flush all the warnings\r\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\r\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\r\n      const sortedNames = setToSortedString(\r\n        UNSAFE_componentWillMountUniqueNames,\r\n      );\r\n      console.error(\r\n        'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' +\r\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\r\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\r\n          '\\nPlease update the following components: %s',\r\n        sortedNames,\r\n      );\r\n    }\r\n\r\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\r\n      const sortedNames = setToSortedString(\r\n        UNSAFE_componentWillReceivePropsUniqueNames,\r\n      );\r\n      console.error(\r\n        'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' +\r\n          'and may indicate bugs in your code. ' +\r\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\r\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\r\n          \"* If you're updating state whenever props change, \" +\r\n          'refactor your code to use memoization techniques or move it to ' +\r\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\r\n          '\\nPlease update the following components: %s',\r\n        sortedNames,\r\n      );\r\n    }\r\n\r\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\r\n      const sortedNames = setToSortedString(\r\n        UNSAFE_componentWillUpdateUniqueNames,\r\n      );\r\n      console.error(\r\n        'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' +\r\n          'and may indicate bugs in your code. ' +\r\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\r\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\r\n          '\\nPlease update the following components: %s',\r\n        sortedNames,\r\n      );\r\n    }\r\n\r\n    if (componentWillMountUniqueNames.size > 0) {\r\n      const sortedNames = setToSortedString(componentWillMountUniqueNames);\r\n\r\n      console.warn(\r\n        'componentWillMount has been renamed, and is not recommended for use. ' +\r\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\r\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\r\n          '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' +\r\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\r\n          'To rename all deprecated lifecycles to their new names, you can run ' +\r\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\r\n          '\\nPlease update the following components: %s',\r\n        sortedNames,\r\n      );\r\n    }\r\n\r\n    if (componentWillReceivePropsUniqueNames.size > 0) {\r\n      const sortedNames = setToSortedString(\r\n        componentWillReceivePropsUniqueNames,\r\n      );\r\n\r\n      console.warn(\r\n        'componentWillReceiveProps has been renamed, and is not recommended for use. ' +\r\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\r\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\r\n          \"* If you're updating state whenever props change, refactor your \" +\r\n          'code to use memoization techniques or move it to ' +\r\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\r\n          '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' +\r\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\r\n          'To rename all deprecated lifecycles to their new names, you can run ' +\r\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\r\n          '\\nPlease update the following components: %s',\r\n        sortedNames,\r\n      );\r\n    }\r\n\r\n    if (componentWillUpdateUniqueNames.size > 0) {\r\n      const sortedNames = setToSortedString(componentWillUpdateUniqueNames);\r\n\r\n      console.warn(\r\n        'componentWillUpdate has been renamed, and is not recommended for use. ' +\r\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\r\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\r\n          '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' +\r\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\r\n          'To rename all deprecated lifecycles to their new names, you can run ' +\r\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\r\n          '\\nPlease update the following components: %s',\r\n        sortedNames,\r\n      );\r\n    }\r\n  };\r\n\r\n  let pendingLegacyContextWarning: FiberToFiberComponentsMap = new Map();\r\n\r\n  // Tracks components we have already warned about.\r\n  const didWarnAboutLegacyContext = new Set();\r\n\r\n  ReactStrictModeWarnings.recordLegacyContextWarning = (\r\n    fiber: Fiber,\r\n    instance: any,\r\n  ) => {\r\n    const strictRoot = findStrictRoot(fiber);\r\n    if (strictRoot === null) {\r\n      console.error(\r\n        'Expected to find a StrictMode component in a strict mode tree. ' +\r\n          'This error is likely caused by a bug in React. Please file an issue.',\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Dedup strategy: Warn once per component.\r\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\r\n      return;\r\n    }\r\n\r\n    let warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\r\n\r\n    if (\r\n      fiber.type.contextTypes != null ||\r\n      fiber.type.childContextTypes != null ||\r\n      (instance !== null && typeof instance.getChildContext === 'function')\r\n    ) {\r\n      if (warningsForRoot === undefined) {\r\n        warningsForRoot = [];\r\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\r\n      }\r\n      warningsForRoot.push(fiber);\r\n    }\r\n  };\r\n\r\n  ReactStrictModeWarnings.flushLegacyContextWarning = () => {\r\n    ((pendingLegacyContextWarning: any): FiberToFiberComponentsMap).forEach(\r\n      (fiberArray: FiberArray, strictRoot) => {\r\n        if (fiberArray.length === 0) {\r\n          return;\r\n        }\r\n        const firstFiber = fiberArray[0];\r\n\r\n        const uniqueNames = new Set();\r\n        fiberArray.forEach(fiber => {\r\n          uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\r\n          didWarnAboutLegacyContext.add(fiber.type);\r\n        });\r\n\r\n        const sortedNames = setToSortedString(uniqueNames);\r\n\r\n        try {\r\n          setCurrentDebugFiberInDEV(firstFiber);\r\n          console.error(\r\n            'Legacy context API has been detected within a strict-mode tree.' +\r\n              '\\n\\nThe old API will be supported in all 16.x releases, but applications ' +\r\n              'using it should migrate to the new version.' +\r\n              '\\n\\nPlease update the following components: %s' +\r\n              '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context',\r\n            sortedNames,\r\n          );\r\n        } finally {\r\n          resetCurrentDebugFiberInDEV();\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  ReactStrictModeWarnings.discardPendingWarnings = () => {\r\n    pendingComponentWillMountWarnings = [];\r\n    pendingUNSAFE_ComponentWillMountWarnings = [];\r\n    pendingComponentWillReceivePropsWarnings = [];\r\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\r\n    pendingComponentWillUpdateWarnings = [];\r\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\r\n    pendingLegacyContextWarning = new Map();\r\n  };\r\n}\r\n\r\nexport default ReactStrictModeWarnings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}