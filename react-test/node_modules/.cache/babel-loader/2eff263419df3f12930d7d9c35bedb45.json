{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\nexport const clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\nconst log = Math.log;\nconst LN2 = Math.LN2;\n\nfunction clz32Fallback(x) {\n  const asUint = x >>> 0;\n\n  if (asUint === 0) {\n    return 32;\n  }\n\n  return 31 - (log(asUint) / LN2 | 0) | 0;\n}","map":{"version":3,"names":["clz32","Math","clz32Fallback","log","LN2","x","asUint"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/react-reconciler/src/clz32.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\r\n\r\nexport const clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\r\n\r\n// Count leading zeros.\r\n// Based on:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\nconst log = Math.log;\r\nconst LN2 = Math.LN2;\r\nfunction clz32Fallback(x: number): number {\r\n  const asUint = x >>> 0;\r\n  if (asUint === 0) {\r\n    return 32;\r\n  }\r\n  return (31 - ((log(asUint) / LN2) | 0)) | 0;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAO,MAAMA,KAAK,GAAGC,IAAI,CAACD,KAAL,GAAaC,IAAI,CAACD,KAAlB,GAA0BE,aAAxC,C,CAEP;AACA;AACA;;AACA,MAAMC,GAAG,GAAGF,IAAI,CAACE,GAAjB;AACA,MAAMC,GAAG,GAAGH,IAAI,CAACG,GAAjB;;AACA,SAASF,aAAT,CAAuBG,CAAvB,EAA0C;EACxC,MAAMC,MAAM,GAAGD,CAAC,KAAK,CAArB;;EACA,IAAIC,MAAM,KAAK,CAAf,EAAkB;IAChB,OAAO,EAAP;EACD;;EACD,OAAQ,MAAOH,GAAG,CAACG,MAAD,CAAH,GAAcF,GAAf,GAAsB,CAA5B,CAAD,GAAmC,CAA1C;AACD"},"metadata":{},"sourceType":"module"}