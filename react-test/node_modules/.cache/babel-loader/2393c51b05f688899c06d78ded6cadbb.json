{"ast":null,"code":"/**\r\n * @Author: lujiafeng\r\n * @Date: 2022-07-09 17:48:33\r\n * @LastEditTime: 2022-09-05 13:25:40\r\n * @LastEditors: lujiafeng\r\n * @Description:\r\n * @FilePath: \\debug-anything\\react-test\\src\\react\\packages\\react-dom\\src\\events\\getListener.js\r\n * @可以输入预定的版权声明、个性签名、空行等\r\n */\n\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * \r\n */\nimport { getFiberCurrentPropsFromNode } from '../client/ReactDOMComponentTree';\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n    case 'onMouseEnter':\n      return !!(props.disabled && isInteractive(type));\n\n    default:\n      return false;\n  }\n}\n/** 应该是获取需要监听的事件\r\n * @param {object} inst The instance, which is the source of events.\r\n * @param {string} registrationName Name of listener (e.g. `onClick`).\r\n * @return {?function} The stored callback.\r\n */\n\n\nexport default function getListener(inst, registrationName) {\n  const stateNode = inst.stateNode;\n\n  if (stateNode === null) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  } // 获取真实DOM上绑定的props属性\n\n\n  const props = getFiberCurrentPropsFromNode(stateNode);\n\n  if (props === null) {\n    // Work in progress.\n    return null;\n  } // 获取props中注册的方法\n\n\n  const listener = props[registrationName];\n\n  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\n    return null;\n  }\n\n  if (listener && typeof listener !== 'function') {\n    throw new Error(`Expected \\`${registrationName}\\` listener to be a function, instead got a value of \\`${typeof listener}\\` type.`);\n  }\n\n  return listener;\n}","map":{"version":3,"names":["getFiberCurrentPropsFromNode","isInteractive","tag","shouldPreventMouseEvent","name","type","props","disabled","getListener","inst","registrationName","stateNode","listener","Error"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/react-dom/src/events/getListener.js"],"sourcesContent":["/**\r\n * @Author: lujiafeng\r\n * @Date: 2022-07-09 17:48:33\r\n * @LastEditTime: 2022-09-05 13:25:40\r\n * @LastEditors: lujiafeng\r\n * @Description:\r\n * @FilePath: \\debug-anything\\react-test\\src\\react\\packages\\react-dom\\src\\events\\getListener.js\r\n * @可以输入预定的版权声明、个性签名、空行等\r\n */\r\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\r\nimport type {Props} from '../client/ReactDOMHostConfig';\r\n\r\nimport {getFiberCurrentPropsFromNode} from '../client/ReactDOMComponentTree';\r\n\r\nfunction isInteractive(tag: string): boolean {\r\n  return (\r\n    tag === 'button' ||\r\n    tag === 'input' ||\r\n    tag === 'select' ||\r\n    tag === 'textarea'\r\n  );\r\n}\r\n\r\nfunction shouldPreventMouseEvent(\r\n  name: string,\r\n  type: string,\r\n  props: Props,\r\n): boolean {\r\n  switch (name) {\r\n    case 'onClick':\r\n    case 'onClickCapture':\r\n    case 'onDoubleClick':\r\n    case 'onDoubleClickCapture':\r\n    case 'onMouseDown':\r\n    case 'onMouseDownCapture':\r\n    case 'onMouseMove':\r\n    case 'onMouseMoveCapture':\r\n    case 'onMouseUp':\r\n    case 'onMouseUpCapture':\r\n    case 'onMouseEnter':\r\n      return !!(props.disabled && isInteractive(type));\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\n/** 应该是获取需要监听的事件\r\n * @param {object} inst The instance, which is the source of events.\r\n * @param {string} registrationName Name of listener (e.g. `onClick`).\r\n * @return {?function} The stored callback.\r\n */\r\nexport default function getListener(\r\n  inst: Fiber,\r\n  registrationName: string,\r\n): Function | null {\r\n  const stateNode = inst.stateNode;\r\n  if (stateNode === null) {\r\n    // Work in progress (ex: onload events in incremental mode).\r\n    return null;\r\n  }\r\n  // 获取真实DOM上绑定的props属性\r\n  const props = getFiberCurrentPropsFromNode(stateNode);\r\n  if (props === null) {\r\n    // Work in progress.\r\n    return null;\r\n  }\r\n  // 获取props中注册的方法\r\n  const listener = props[registrationName];\r\n  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\r\n    return null;\r\n  }\r\n\r\n  if (listener && typeof listener !== 'function') {\r\n    throw new Error(\r\n      `Expected \\`${registrationName}\\` listener to be a function, instead got a value of \\`${typeof listener}\\` type.`,\r\n    );\r\n  }\r\n\r\n  return listener;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,SAAQA,4BAAR,QAA2C,iCAA3C;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA6C;EAC3C,OACEA,GAAG,KAAK,QAAR,IACAA,GAAG,KAAK,OADR,IAEAA,GAAG,KAAK,QAFR,IAGAA,GAAG,KAAK,UAJV;AAMD;;AAED,SAASC,uBAAT,CACEC,IADF,EAEEC,IAFF,EAGEC,KAHF,EAIW;EACT,QAAQF,IAAR;IACE,KAAK,SAAL;IACA,KAAK,gBAAL;IACA,KAAK,eAAL;IACA,KAAK,sBAAL;IACA,KAAK,aAAL;IACA,KAAK,oBAAL;IACA,KAAK,aAAL;IACA,KAAK,oBAAL;IACA,KAAK,WAAL;IACA,KAAK,kBAAL;IACA,KAAK,cAAL;MACE,OAAO,CAAC,EAAEE,KAAK,CAACC,QAAN,IAAkBN,aAAa,CAACI,IAAD,CAAjC,CAAR;;IACF;MACE,OAAO,KAAP;EAdJ;AAgBD;AAED;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASG,WAAT,CACbC,IADa,EAEbC,gBAFa,EAGI;EACjB,MAAMC,SAAS,GAAGF,IAAI,CAACE,SAAvB;;EACA,IAAIA,SAAS,KAAK,IAAlB,EAAwB;IACtB;IACA,OAAO,IAAP;EACD,CALgB,CAMjB;;;EACA,MAAML,KAAK,GAAGN,4BAA4B,CAACW,SAAD,CAA1C;;EACA,IAAIL,KAAK,KAAK,IAAd,EAAoB;IAClB;IACA,OAAO,IAAP;EACD,CAXgB,CAYjB;;;EACA,MAAMM,QAAQ,GAAGN,KAAK,CAACI,gBAAD,CAAtB;;EACA,IAAIP,uBAAuB,CAACO,gBAAD,EAAmBD,IAAI,CAACJ,IAAxB,EAA8BC,KAA9B,CAA3B,EAAiE;IAC/D,OAAO,IAAP;EACD;;EAED,IAAIM,QAAQ,IAAI,OAAOA,QAAP,KAAoB,UAApC,EAAgD;IAC9C,MAAM,IAAIC,KAAJ,CACH,cAAaH,gBAAiB,0DAAyD,OAAOE,QAAS,UADpG,CAAN;EAGD;;EAED,OAAOA,QAAP;AACD"},"metadata":{},"sourceType":"module"}