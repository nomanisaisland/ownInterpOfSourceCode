{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nlet disabledDepth = 0;\nlet prevLog;\nlet prevInfo;\nlet prevWarn;\nlet prevError;\nlet prevGroup;\nlet prevGroupCollapsed;\nlet prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nexport function disableLogs() {\n  if (__DEV__) {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      const props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nexport function reenableLogs() {\n  if (__DEV__) {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      const props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: { ...props,\n          value: prevLog\n        },\n        info: { ...props,\n          value: prevInfo\n        },\n        warn: { ...props,\n          value: prevWarn\n        },\n        error: { ...props,\n          value: prevError\n        },\n        group: { ...props,\n          value: prevGroup\n        },\n        groupCollapsed: { ...props,\n          value: prevGroupCollapsed\n        },\n        groupEnd: { ...props,\n          value: prevGroupEnd\n        }\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      console.error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}","map":{"version":3,"names":["disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","__DEV__","console","log","info","warn","error","group","groupCollapsed","groupEnd","props","configurable","enumerable","value","writable","Object","defineProperties","reenableLogs"],"sources":["E:/debug-anything/react-test/src/react/packages/shared/ConsolePatchingDev.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// Helpers to patch console.logs to avoid logging during side-effect free\r\n// replaying on render function. This currently only patches the object\r\n// lazily which won't cover if the log function was extracted eagerly.\r\n// We could also eagerly patch the method.\r\n\r\nlet disabledDepth = 0;\r\nlet prevLog;\r\nlet prevInfo;\r\nlet prevWarn;\r\nlet prevError;\r\nlet prevGroup;\r\nlet prevGroupCollapsed;\r\nlet prevGroupEnd;\r\n\r\nfunction disabledLog() {}\r\ndisabledLog.__reactDisabledLog = true;\r\n\r\nexport function disableLogs(): void {\r\n  if (__DEV__) {\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      prevLog = console.log;\r\n      prevInfo = console.info;\r\n      prevWarn = console.warn;\r\n      prevError = console.error;\r\n      prevGroup = console.group;\r\n      prevGroupCollapsed = console.groupCollapsed;\r\n      prevGroupEnd = console.groupEnd;\r\n      // https://github.com/facebook/react/issues/19099\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value: disabledLog,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        info: props,\r\n        log: props,\r\n        warn: props,\r\n        error: props,\r\n        group: props,\r\n        groupCollapsed: props,\r\n        groupEnd: props,\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    disabledDepth++;\r\n  }\r\n}\r\n\r\nexport function reenableLogs(): void {\r\n  if (__DEV__) {\r\n    disabledDepth--;\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        log: {...props, value: prevLog},\r\n        info: {...props, value: prevInfo},\r\n        warn: {...props, value: prevWarn},\r\n        error: {...props, value: prevError},\r\n        group: {...props, value: prevGroup},\r\n        groupCollapsed: {...props, value: prevGroupCollapsed},\r\n        groupEnd: {...props, value: prevGroupEnd},\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    if (disabledDepth < 0) {\r\n      console.error(\r\n        'disabledDepth fell below zero. ' +\r\n          'This is a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,IAAIA,aAAa,GAAG,CAApB;AACA,IAAIC,OAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,kBAAJ;AACA,IAAIC,YAAJ;;AAEA,SAASC,WAAT,GAAuB,CAAE;;AACzBA,WAAW,CAACC,kBAAZ,GAAiC,IAAjC;AAEA,OAAO,SAASC,WAAT,GAA6B;EAClC,IAAIC,OAAJ,EAAa;IACX,IAAIX,aAAa,KAAK,CAAtB,EAAyB;MACvB;MACAC,OAAO,GAAGW,OAAO,CAACC,GAAlB;MACAX,QAAQ,GAAGU,OAAO,CAACE,IAAnB;MACAX,QAAQ,GAAGS,OAAO,CAACG,IAAnB;MACAX,SAAS,GAAGQ,OAAO,CAACI,KAApB;MACAX,SAAS,GAAGO,OAAO,CAACK,KAApB;MACAX,kBAAkB,GAAGM,OAAO,CAACM,cAA7B;MACAX,YAAY,GAAGK,OAAO,CAACO,QAAvB,CARuB,CASvB;;MACA,MAAMC,KAAK,GAAG;QACZC,YAAY,EAAE,IADF;QAEZC,UAAU,EAAE,IAFA;QAGZC,KAAK,EAAEf,WAHK;QAIZgB,QAAQ,EAAE;MAJE,CAAd,CAVuB,CAgBvB;;MACAC,MAAM,CAACC,gBAAP,CAAwBd,OAAxB,EAAiC;QAC/BE,IAAI,EAAEM,KADyB;QAE/BP,GAAG,EAAEO,KAF0B;QAG/BL,IAAI,EAAEK,KAHyB;QAI/BJ,KAAK,EAAEI,KAJwB;QAK/BH,KAAK,EAAEG,KALwB;QAM/BF,cAAc,EAAEE,KANe;QAO/BD,QAAQ,EAAEC;MAPqB,CAAjC;MASA;IACD;;IACDpB,aAAa;EACd;AACF;AAED,OAAO,SAAS2B,YAAT,GAA8B;EACnC,IAAIhB,OAAJ,EAAa;IACXX,aAAa;;IACb,IAAIA,aAAa,KAAK,CAAtB,EAAyB;MACvB;MACA,MAAMoB,KAAK,GAAG;QACZC,YAAY,EAAE,IADF;QAEZC,UAAU,EAAE,IAFA;QAGZE,QAAQ,EAAE;MAHE,CAAd,CAFuB,CAOvB;;MACAC,MAAM,CAACC,gBAAP,CAAwBd,OAAxB,EAAiC;QAC/BC,GAAG,EAAE,EAAC,GAAGO,KAAJ;UAAWG,KAAK,EAAEtB;QAAlB,CAD0B;QAE/Ba,IAAI,EAAE,EAAC,GAAGM,KAAJ;UAAWG,KAAK,EAAErB;QAAlB,CAFyB;QAG/Ba,IAAI,EAAE,EAAC,GAAGK,KAAJ;UAAWG,KAAK,EAAEpB;QAAlB,CAHyB;QAI/Ba,KAAK,EAAE,EAAC,GAAGI,KAAJ;UAAWG,KAAK,EAAEnB;QAAlB,CAJwB;QAK/Ba,KAAK,EAAE,EAAC,GAAGG,KAAJ;UAAWG,KAAK,EAAElB;QAAlB,CALwB;QAM/Ba,cAAc,EAAE,EAAC,GAAGE,KAAJ;UAAWG,KAAK,EAAEjB;QAAlB,CANe;QAO/Ba,QAAQ,EAAE,EAAC,GAAGC,KAAJ;UAAWG,KAAK,EAAEhB;QAAlB;MAPqB,CAAjC;MASA;IACD;;IACD,IAAIP,aAAa,GAAG,CAApB,EAAuB;MACrBY,OAAO,CAACI,KAAR,CACE,oCACE,+CAFJ;IAID;EACF;AACF"},"metadata":{},"sourceType":"module"}