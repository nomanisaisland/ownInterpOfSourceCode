{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\n\n/* eslint valid-typeof: 0 */\nimport assign from 'shared/assign';\nimport getEventCharCode from './getEventCharCode';\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n} // This is intentionally a factory so that we have different returned constructors.\n// If we had a single constructor, it would be megamorphic and engines would deopt.\n\n\nfunction createSyntheticEvent(Interface) {\n  /**\r\n   * Synthetic events are dispatched by event plugins, typically in response to a\r\n   * top-level event delegation handler.\r\n   *\r\n   * These systems should generally use pooling to reduce the frequency of garbage\r\n   * collection. The system should check `isPersistent` to determine whether the\r\n   * event should be released into the pool after being dispatched. Users that\r\n   * need a persisted event should invoke `persist`.\r\n   *\r\n   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\r\n   * normalizing browser quirks. Subclasses do not necessarily have to implement a\r\n   * DOM interface; custom application-specific events can also subclass this.\r\n   */\n  // 构造异步事件队列内部参数\n  function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {\n    // react事件名\n    this._reactName = reactName; // 目标节点Fiber实例\n\n    this._targetInst = targetInst; // 事件类型click等\n\n    this.type = reactEventType; // 触发的原生事件\n\n    this.nativeEvent = nativeEvent; // 原生事件触发目标节点\n\n    this.target = nativeEventTarget; // 当前的节点，目前好像没有被处理。一直为null\n\n    this.currentTarget = null; // 将外部的参数加进来\n\n    for (const propName in Interface) {\n      // 由于是判断自身的属性，所以必定不会进入这个分支\n      if (!Interface.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      const normalize = Interface[propName];\n\n      if (normalize) {\n        this[propName] = normalize(nativeEvent);\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    } // event.defaultPrevented 返回一个布尔值，表明当前事件是否调用了 event.preventDefault()方法。\n    // 获取是否取消了默认事件\n\n\n    const defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false; // defaultPrevented为true时表示调用了\n\n    if (defaultPrevented) {\n      // 取消默认 functionThatReturnsTrue 返回true\n      this.isDefaultPrevented = functionThatReturnsTrue;\n    } else {\n      // 取消默认 functionThatReturnsFalse 返回false\n      this.isDefaultPrevented = functionThatReturnsFalse;\n    } // 默认没有\n\n\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = true;\n      const event = this.nativeEvent;\n\n      if (!event) {\n        return;\n      }\n\n      if (event.preventDefault) {\n        event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE\n      } else if (typeof event.returnValue !== 'unknown') {\n        event.returnValue = false;\n      }\n\n      this.isDefaultPrevented = functionThatReturnsTrue;\n    },\n    stopPropagation: function () {\n      const event = this.nativeEvent;\n\n      if (!event) {\n        return;\n      }\n\n      if (event.stopPropagation) {\n        event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE\n      } else if (typeof event.cancelBubble !== 'unknown') {\n        // The ChangeEventPlugin registers a \"propertychange\" event for\n        // IE. This event does not support bubbling or cancelling, and\n        // any references to cancelBubble throw \"Member not found\".  A\n        // typeof check of \"unknown\" circumvents this issue (and is also\n        // IE specific).\n        event.cancelBubble = true;\n      }\n\n      this.isPropagationStopped = functionThatReturnsTrue;\n    },\n\n    /**\r\n     * We release all dispatched `SyntheticEvent`s after each event loop, adding\r\n     * them back into the pool. This allows a way to hold onto a reference that\r\n     * won't be added back into the pool.\r\n     */\n    persist: function () {// Modern event system doesn't use pooling.\n    },\n\n    /**\r\n     * Checks if this event should be released back into the pool.\r\n     *\r\n     * @return {boolean} True if this should not be released, false otherwise.\r\n     */\n    isPersistent: functionThatReturnsTrue\n  });\n  return SyntheticBaseEvent;\n}\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\n\n\nconst EventInterface = {\n  eventPhase: 0,\n  bubbles: 0,\n  cancelable: 0,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: 0,\n  isTrusted: 0\n}; // 构造异步事件参数 EventInterface是event内部的参数值\n\nexport const SyntheticEvent = createSyntheticEvent(EventInterface);\n_c = SyntheticEvent;\nconst UIEventInterface = { ...EventInterface,\n  view: 0,\n  detail: 0\n};\nexport const SyntheticUIEvent = createSyntheticEvent(UIEventInterface);\n_c2 = SyntheticUIEvent;\nlet lastMovementX;\nlet lastMovementY;\nlet lastMouseEvent;\n\nfunction updateMouseMovementPolyfillState(event) {\n  if (event !== lastMouseEvent) {\n    if (lastMouseEvent && event.type === 'mousemove') {\n      lastMovementX = event.screenX - lastMouseEvent.screenX;\n      lastMovementY = event.screenY - lastMouseEvent.screenY;\n    } else {\n      lastMovementX = 0;\n      lastMovementY = 0;\n    }\n\n    lastMouseEvent = event;\n  }\n}\n/**\r\n * @interface MouseEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\n\n\nconst MouseEventInterface = { ...UIEventInterface,\n  screenX: 0,\n  screenY: 0,\n  clientX: 0,\n  clientY: 0,\n  pageX: 0,\n  pageY: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  altKey: 0,\n  metaKey: 0,\n  getModifierState: getEventModifierState,\n  button: 0,\n  buttons: 0,\n  relatedTarget: function (event) {\n    if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;\n    return event.relatedTarget;\n  },\n  movementX: function (event) {\n    if ('movementX' in event) {\n      return event.movementX;\n    }\n\n    updateMouseMovementPolyfillState(event);\n    return lastMovementX;\n  },\n  movementY: function (event) {\n    if ('movementY' in event) {\n      return event.movementY;\n    } // Don't need to call updateMouseMovementPolyfillState() here\n    // because it's guaranteed to have already run when movementX\n    // was copied.\n\n\n    return lastMovementY;\n  }\n};\nexport const SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);\n/**\r\n * @interface DragEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\n\n_c3 = SyntheticMouseEvent;\nconst DragEventInterface = { ...MouseEventInterface,\n  dataTransfer: 0\n};\nexport const SyntheticDragEvent = createSyntheticEvent(DragEventInterface);\n/**\r\n * @interface FocusEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\n\n_c4 = SyntheticDragEvent;\nconst FocusEventInterface = { ...UIEventInterface,\n  relatedTarget: 0\n};\nexport const SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\r\n */\n\n_c5 = SyntheticFocusEvent;\nconst AnimationEventInterface = { ...EventInterface,\n  animationName: 0,\n  elapsedTime: 0,\n  pseudoElement: 0\n};\nexport const SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/clipboard-apis/\r\n */\n\n_c6 = SyntheticAnimationEvent;\nconst ClipboardEventInterface = { ...EventInterface,\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\nexport const SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\r\n */\n\n_c7 = SyntheticClipboardEvent;\nconst CompositionEventInterface = { ...EventInterface,\n  data: 0\n};\nexport const SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\r\n *      /#events-inputevents\r\n */\n// Happens to share the same list for now.\n\n_c8 = SyntheticCompositionEvent;\nexport const SyntheticInputEvent = SyntheticCompositionEvent;\n/**\r\n * Normalization of deprecated HTML5 `key` values\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\r\n */\n\nconst normalizeKey = {\n  Esc: 'Escape',\n  Spacebar: ' ',\n  Left: 'ArrowLeft',\n  Up: 'ArrowUp',\n  Right: 'ArrowRight',\n  Down: 'ArrowDown',\n  Del: 'Delete',\n  Win: 'OS',\n  Menu: 'ContextMenu',\n  Apps: 'ContextMenu',\n  Scroll: 'ScrollLock',\n  MozPrintableKey: 'Unidentified'\n};\n/**\r\n * Translation from legacy `keyCode` to HTML5 `key`\r\n * Only special keys supported, all others depend on keyboard layout or browser\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\r\n */\n\nconst translateToKey = {\n  '8': 'Backspace',\n  '9': 'Tab',\n  '12': 'Clear',\n  '13': 'Enter',\n  '16': 'Shift',\n  '17': 'Control',\n  '18': 'Alt',\n  '19': 'Pause',\n  '20': 'CapsLock',\n  '27': 'Escape',\n  '32': ' ',\n  '33': 'PageUp',\n  '34': 'PageDown',\n  '35': 'End',\n  '36': 'Home',\n  '37': 'ArrowLeft',\n  '38': 'ArrowUp',\n  '39': 'ArrowRight',\n  '40': 'ArrowDown',\n  '45': 'Insert',\n  '46': 'Delete',\n  '112': 'F1',\n  '113': 'F2',\n  '114': 'F3',\n  '115': 'F4',\n  '116': 'F5',\n  '117': 'F6',\n  '118': 'F7',\n  '119': 'F8',\n  '120': 'F9',\n  '121': 'F10',\n  '122': 'F11',\n  '123': 'F12',\n  '144': 'NumLock',\n  '145': 'ScrollLock',\n  '224': 'Meta'\n};\n/**\r\n * @param {object} nativeEvent Native browser event.\r\n * @return {string} Normalized `key` property.\r\n */\n\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    const key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  } // Browser does not implement `key`, polyfill as much of it as we can.\n\n\n  if (nativeEvent.type === 'keypress') {\n    const charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n\n  return '';\n}\n/**\r\n * Translation from modifier key to the associated property in the event.\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\r\n */\n\n\nconst modifierKeyToProp = {\n  Alt: 'altKey',\n  Control: 'ctrlKey',\n  Meta: 'metaKey',\n  Shift: 'shiftKey'\n}; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\n// getModifierState. If getModifierState is not supported, we map it to a set of\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\n\nfunction modifierStateGetter(keyArg) {\n  const syntheticEvent = this;\n  const nativeEvent = syntheticEvent.nativeEvent;\n\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n\n  const keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n/**\r\n * @interface KeyboardEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\n\n\nconst KeyboardEventInterface = { ...UIEventInterface,\n  key: getEventKey,\n  code: 0,\n  location: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  altKey: 0,\n  metaKey: 0,\n  repeat: 0,\n  locale: 0,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n\n    return 0;\n  }\n};\nexport const SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);\n/**\r\n * @interface PointerEvent\r\n * @see http://www.w3.org/TR/pointerevents/\r\n */\n\n_c9 = SyntheticKeyboardEvent;\nconst PointerEventInterface = { ...MouseEventInterface,\n  pointerId: 0,\n  width: 0,\n  height: 0,\n  pressure: 0,\n  tangentialPressure: 0,\n  tiltX: 0,\n  tiltY: 0,\n  twist: 0,\n  pointerType: 0,\n  isPrimary: 0\n};\nexport const SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);\n/**\r\n * @interface TouchEvent\r\n * @see http://www.w3.org/TR/touch-events/\r\n */\n\n_c10 = SyntheticPointerEvent;\nconst TouchEventInterface = { ...UIEventInterface,\n  touches: 0,\n  targetTouches: 0,\n  changedTouches: 0,\n  altKey: 0,\n  metaKey: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  getModifierState: getEventModifierState\n};\nexport const SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\r\n */\n\n_c11 = SyntheticTouchEvent;\nconst TransitionEventInterface = { ...EventInterface,\n  propertyName: 0,\n  elapsedTime: 0,\n  pseudoElement: 0\n};\nexport const SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);\n/**\r\n * @interface WheelEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\n\n_c12 = SyntheticTransitionEvent;\nconst WheelEventInterface = { ...MouseEventInterface,\n\n  deltaX(event) {\n    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n\n  deltaY(event) {\n    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n\n  deltaZ: 0,\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: 0\n};\nexport const SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);\n_c13 = SyntheticWheelEvent;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"SyntheticEvent\");\n$RefreshReg$(_c2, \"SyntheticUIEvent\");\n$RefreshReg$(_c3, \"SyntheticMouseEvent\");\n$RefreshReg$(_c4, \"SyntheticDragEvent\");\n$RefreshReg$(_c5, \"SyntheticFocusEvent\");\n$RefreshReg$(_c6, \"SyntheticAnimationEvent\");\n$RefreshReg$(_c7, \"SyntheticClipboardEvent\");\n$RefreshReg$(_c8, \"SyntheticCompositionEvent\");\n$RefreshReg$(_c9, \"SyntheticKeyboardEvent\");\n$RefreshReg$(_c10, \"SyntheticPointerEvent\");\n$RefreshReg$(_c11, \"SyntheticTouchEvent\");\n$RefreshReg$(_c12, \"SyntheticTransitionEvent\");\n$RefreshReg$(_c13, \"SyntheticWheelEvent\");","map":{"version":3,"names":["assign","getEventCharCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactName","reactEventType","targetInst","nativeEvent","nativeEventTarget","_reactName","_targetInst","type","target","currentTarget","propName","hasOwnProperty","normalize","defaultPrevented","returnValue","isDefaultPrevented","isPropagationStopped","prototype","preventDefault","event","stopPropagation","cancelBubble","persist","isPersistent","EventInterface","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","SyntheticEvent","UIEventInterface","view","detail","SyntheticUIEvent","lastMovementX","lastMovementY","lastMouseEvent","updateMouseMovementPolyfillState","screenX","screenY","MouseEventInterface","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","getEventModifierState","button","buttons","relatedTarget","undefined","fromElement","srcElement","toElement","movementX","movementY","SyntheticMouseEvent","DragEventInterface","dataTransfer","SyntheticDragEvent","FocusEventInterface","SyntheticFocusEvent","AnimationEventInterface","animationName","elapsedTime","pseudoElement","SyntheticAnimationEvent","ClipboardEventInterface","clipboardData","window","SyntheticClipboardEvent","CompositionEventInterface","data","SyntheticCompositionEvent","SyntheticInputEvent","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","getEventKey","key","charCode","String","fromCharCode","keyCode","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","syntheticEvent","keyProp","KeyboardEventInterface","code","location","repeat","locale","which","SyntheticKeyboardEvent","PointerEventInterface","pointerId","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","SyntheticPointerEvent","TouchEventInterface","touches","targetTouches","changedTouches","SyntheticTouchEvent","TransitionEventInterface","propertyName","SyntheticTransitionEvent","WheelEventInterface","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","SyntheticWheelEvent"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/react-dom/src/events/SyntheticEvent.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n/* eslint valid-typeof: 0 */\r\n\r\nimport assign from 'shared/assign';\r\nimport getEventCharCode from './getEventCharCode';\r\n\r\ntype EventInterfaceType = {\r\n  [propName: string]: 0 | ((event: {[propName: string]: mixed}) => mixed),\r\n};\r\n\r\nfunction functionThatReturnsTrue() {\r\n  return true;\r\n}\r\n\r\nfunction functionThatReturnsFalse() {\r\n  return false;\r\n}\r\n\r\n// This is intentionally a factory so that we have different returned constructors.\r\n// If we had a single constructor, it would be megamorphic and engines would deopt.\r\nfunction createSyntheticEvent(Interface: EventInterfaceType) {\r\n  /**\r\n   * Synthetic events are dispatched by event plugins, typically in response to a\r\n   * top-level event delegation handler.\r\n   *\r\n   * These systems should generally use pooling to reduce the frequency of garbage\r\n   * collection. The system should check `isPersistent` to determine whether the\r\n   * event should be released into the pool after being dispatched. Users that\r\n   * need a persisted event should invoke `persist`.\r\n   *\r\n   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\r\n   * normalizing browser quirks. Subclasses do not necessarily have to implement a\r\n   * DOM interface; custom application-specific events can also subclass this.\r\n   */\r\n  // 构造异步事件队列内部参数\r\n  function SyntheticBaseEvent(\r\n    reactName: string | null,\r\n    reactEventType: string,\r\n    targetInst: Fiber,\r\n    nativeEvent: {[propName: string]: mixed},\r\n    nativeEventTarget: null | EventTarget,\r\n  ) {\r\n    // react事件名\r\n    this._reactName = reactName;\r\n    // 目标节点Fiber实例\r\n    this._targetInst = targetInst;\r\n    // 事件类型click等\r\n    this.type = reactEventType;\r\n    // 触发的原生事件\r\n    this.nativeEvent = nativeEvent;\r\n    // 原生事件触发目标节点\r\n    this.target = nativeEventTarget;\r\n    // 当前的节点，目前好像没有被处理。一直为null\r\n    this.currentTarget = null;\r\n\r\n    // 将外部的参数加进来\r\n    for (const propName in Interface) {\r\n      // 由于是判断自身的属性，所以必定不会进入这个分支\r\n      if (!Interface.hasOwnProperty(propName)) {\r\n        continue;\r\n      }\r\n      const normalize = Interface[propName];\r\n      if (normalize) {\r\n        this[propName] = normalize(nativeEvent);\r\n      } else {\r\n        this[propName] = nativeEvent[propName];\r\n      }\r\n    }\r\n\r\n    // event.defaultPrevented 返回一个布尔值，表明当前事件是否调用了 event.preventDefault()方法。\r\n    // 获取是否取消了默认事件\r\n    const defaultPrevented =\r\n      nativeEvent.defaultPrevented != null\r\n        ? nativeEvent.defaultPrevented\r\n        : nativeEvent.returnValue === false;\r\n\r\n    // defaultPrevented为true时表示调用了\r\n    if (defaultPrevented) {\r\n      // 取消默认 functionThatReturnsTrue 返回true\r\n      this.isDefaultPrevented = functionThatReturnsTrue;\r\n    } else {\r\n      // 取消默认 functionThatReturnsFalse 返回false\r\n      this.isDefaultPrevented = functionThatReturnsFalse;\r\n    }\r\n    // 默认没有\r\n    this.isPropagationStopped = functionThatReturnsFalse;\r\n    return this;\r\n  }\r\n\r\n  assign(SyntheticBaseEvent.prototype, {\r\n    preventDefault: function() {\r\n      this.defaultPrevented = true;\r\n      const event = this.nativeEvent;\r\n      if (!event) {\r\n        return;\r\n      }\r\n\r\n      if (event.preventDefault) {\r\n        event.preventDefault();\r\n        // $FlowFixMe - flow is not aware of `unknown` in IE\r\n      } else if (typeof event.returnValue !== 'unknown') {\r\n        event.returnValue = false;\r\n      }\r\n      this.isDefaultPrevented = functionThatReturnsTrue;\r\n    },\r\n\r\n    stopPropagation: function() {\r\n      const event = this.nativeEvent;\r\n      if (!event) {\r\n        return;\r\n      }\r\n\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation();\r\n        // $FlowFixMe - flow is not aware of `unknown` in IE\r\n      } else if (typeof event.cancelBubble !== 'unknown') {\r\n        // The ChangeEventPlugin registers a \"propertychange\" event for\r\n        // IE. This event does not support bubbling or cancelling, and\r\n        // any references to cancelBubble throw \"Member not found\".  A\r\n        // typeof check of \"unknown\" circumvents this issue (and is also\r\n        // IE specific).\r\n        event.cancelBubble = true;\r\n      }\r\n\r\n      this.isPropagationStopped = functionThatReturnsTrue;\r\n    },\r\n\r\n    /**\r\n     * We release all dispatched `SyntheticEvent`s after each event loop, adding\r\n     * them back into the pool. This allows a way to hold onto a reference that\r\n     * won't be added back into the pool.\r\n     */\r\n    persist: function() {\r\n      // Modern event system doesn't use pooling.\r\n    },\r\n\r\n    /**\r\n     * Checks if this event should be released back into the pool.\r\n     *\r\n     * @return {boolean} True if this should not be released, false otherwise.\r\n     */\r\n    isPersistent: functionThatReturnsTrue,\r\n  });\r\n  return SyntheticBaseEvent;\r\n}\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nconst EventInterface = {\r\n  eventPhase: 0,\r\n  bubbles: 0,\r\n  cancelable: 0,\r\n  timeStamp: function(event) {\r\n    return event.timeStamp || Date.now();\r\n  },\r\n  defaultPrevented: 0,\r\n  isTrusted: 0,\r\n};\r\n\r\n// 构造异步事件参数 EventInterface是event内部的参数值\r\nexport const SyntheticEvent = createSyntheticEvent(EventInterface);\r\nconst UIEventInterface: EventInterfaceType = {\r\n  ...EventInterface,\r\n  view: 0,\r\n  detail: 0,\r\n};\r\nexport const SyntheticUIEvent = createSyntheticEvent(UIEventInterface);\r\n\r\nlet lastMovementX;\r\nlet lastMovementY;\r\nlet lastMouseEvent;\r\n\r\nfunction updateMouseMovementPolyfillState(event) {\r\n  if (event !== lastMouseEvent) {\r\n    if (lastMouseEvent && event.type === 'mousemove') {\r\n      lastMovementX = event.screenX - lastMouseEvent.screenX;\r\n      lastMovementY = event.screenY - lastMouseEvent.screenY;\r\n    } else {\r\n      lastMovementX = 0;\r\n      lastMovementY = 0;\r\n    }\r\n    lastMouseEvent = event;\r\n  }\r\n}\r\n\r\n/**\r\n * @interface MouseEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nconst MouseEventInterface: EventInterfaceType = {\r\n  ...UIEventInterface,\r\n  screenX: 0,\r\n  screenY: 0,\r\n  clientX: 0,\r\n  clientY: 0,\r\n  pageX: 0,\r\n  pageY: 0,\r\n  ctrlKey: 0,\r\n  shiftKey: 0,\r\n  altKey: 0,\r\n  metaKey: 0,\r\n  getModifierState: getEventModifierState,\r\n  button: 0,\r\n  buttons: 0,\r\n  relatedTarget: function(event) {\r\n    if (event.relatedTarget === undefined)\r\n      return event.fromElement === event.srcElement\r\n        ? event.toElement\r\n        : event.fromElement;\r\n\r\n    return event.relatedTarget;\r\n  },\r\n  movementX: function(event) {\r\n    if ('movementX' in event) {\r\n      return event.movementX;\r\n    }\r\n    updateMouseMovementPolyfillState(event);\r\n    return lastMovementX;\r\n  },\r\n  movementY: function(event) {\r\n    if ('movementY' in event) {\r\n      return event.movementY;\r\n    }\r\n    // Don't need to call updateMouseMovementPolyfillState() here\r\n    // because it's guaranteed to have already run when movementX\r\n    // was copied.\r\n    return lastMovementY;\r\n  },\r\n};\r\nexport const SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);\r\n\r\n/**\r\n * @interface DragEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nconst DragEventInterface: EventInterfaceType = {\r\n  ...MouseEventInterface,\r\n  dataTransfer: 0,\r\n};\r\nexport const SyntheticDragEvent = createSyntheticEvent(DragEventInterface);\r\n\r\n/**\r\n * @interface FocusEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nconst FocusEventInterface: EventInterfaceType = {\r\n  ...UIEventInterface,\r\n  relatedTarget: 0,\r\n};\r\nexport const SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\r\n */\r\nconst AnimationEventInterface: EventInterfaceType = {\r\n  ...EventInterface,\r\n  animationName: 0,\r\n  elapsedTime: 0,\r\n  pseudoElement: 0,\r\n};\r\nexport const SyntheticAnimationEvent = createSyntheticEvent(\r\n  AnimationEventInterface,\r\n);\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/clipboard-apis/\r\n */\r\nconst ClipboardEventInterface: EventInterfaceType = {\r\n  ...EventInterface,\r\n  clipboardData: function(event) {\r\n    return 'clipboardData' in event\r\n      ? event.clipboardData\r\n      : window.clipboardData;\r\n  },\r\n};\r\nexport const SyntheticClipboardEvent = createSyntheticEvent(\r\n  ClipboardEventInterface,\r\n);\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\r\n */\r\nconst CompositionEventInterface: EventInterfaceType = {\r\n  ...EventInterface,\r\n  data: 0,\r\n};\r\nexport const SyntheticCompositionEvent = createSyntheticEvent(\r\n  CompositionEventInterface,\r\n);\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\r\n *      /#events-inputevents\r\n */\r\n// Happens to share the same list for now.\r\nexport const SyntheticInputEvent = SyntheticCompositionEvent;\r\n\r\n/**\r\n * Normalization of deprecated HTML5 `key` values\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\r\n */\r\nconst normalizeKey = {\r\n  Esc: 'Escape',\r\n  Spacebar: ' ',\r\n  Left: 'ArrowLeft',\r\n  Up: 'ArrowUp',\r\n  Right: 'ArrowRight',\r\n  Down: 'ArrowDown',\r\n  Del: 'Delete',\r\n  Win: 'OS',\r\n  Menu: 'ContextMenu',\r\n  Apps: 'ContextMenu',\r\n  Scroll: 'ScrollLock',\r\n  MozPrintableKey: 'Unidentified',\r\n};\r\n\r\n/**\r\n * Translation from legacy `keyCode` to HTML5 `key`\r\n * Only special keys supported, all others depend on keyboard layout or browser\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\r\n */\r\nconst translateToKey = {\r\n  '8': 'Backspace',\r\n  '9': 'Tab',\r\n  '12': 'Clear',\r\n  '13': 'Enter',\r\n  '16': 'Shift',\r\n  '17': 'Control',\r\n  '18': 'Alt',\r\n  '19': 'Pause',\r\n  '20': 'CapsLock',\r\n  '27': 'Escape',\r\n  '32': ' ',\r\n  '33': 'PageUp',\r\n  '34': 'PageDown',\r\n  '35': 'End',\r\n  '36': 'Home',\r\n  '37': 'ArrowLeft',\r\n  '38': 'ArrowUp',\r\n  '39': 'ArrowRight',\r\n  '40': 'ArrowDown',\r\n  '45': 'Insert',\r\n  '46': 'Delete',\r\n  '112': 'F1',\r\n  '113': 'F2',\r\n  '114': 'F3',\r\n  '115': 'F4',\r\n  '116': 'F5',\r\n  '117': 'F6',\r\n  '118': 'F7',\r\n  '119': 'F8',\r\n  '120': 'F9',\r\n  '121': 'F10',\r\n  '122': 'F11',\r\n  '123': 'F12',\r\n  '144': 'NumLock',\r\n  '145': 'ScrollLock',\r\n  '224': 'Meta',\r\n};\r\n\r\n/**\r\n * @param {object} nativeEvent Native browser event.\r\n * @return {string} Normalized `key` property.\r\n */\r\nfunction getEventKey(nativeEvent) {\r\n  if (nativeEvent.key) {\r\n    // Normalize inconsistent values reported by browsers due to\r\n    // implementations of a working draft specification.\r\n\r\n    // FireFox implements `key` but returns `MozPrintableKey` for all\r\n    // printable characters (normalized to `Unidentified`), ignore it.\r\n    const key = normalizeKey[nativeEvent.key] || nativeEvent.key;\r\n    if (key !== 'Unidentified') {\r\n      return key;\r\n    }\r\n  }\r\n\r\n  // Browser does not implement `key`, polyfill as much of it as we can.\r\n  if (nativeEvent.type === 'keypress') {\r\n    const charCode = getEventCharCode(nativeEvent);\r\n\r\n    // The enter-key is technically both printable and non-printable and can\r\n    // thus be captured by `keypress`, no other non-printable key should.\r\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\r\n  }\r\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\r\n    // While user keyboard layout determines the actual meaning of each\r\n    // `keyCode` value, almost all function keys have a universal value.\r\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Translation from modifier key to the associated property in the event.\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\r\n */\r\nconst modifierKeyToProp = {\r\n  Alt: 'altKey',\r\n  Control: 'ctrlKey',\r\n  Meta: 'metaKey',\r\n  Shift: 'shiftKey',\r\n};\r\n\r\n// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\r\n// getModifierState. If getModifierState is not supported, we map it to a set of\r\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\r\nfunction modifierStateGetter(keyArg) {\r\n  const syntheticEvent = this;\r\n  const nativeEvent = syntheticEvent.nativeEvent;\r\n  if (nativeEvent.getModifierState) {\r\n    return nativeEvent.getModifierState(keyArg);\r\n  }\r\n  const keyProp = modifierKeyToProp[keyArg];\r\n  return keyProp ? !!nativeEvent[keyProp] : false;\r\n}\r\n\r\nfunction getEventModifierState(nativeEvent) {\r\n  return modifierStateGetter;\r\n}\r\n\r\n/**\r\n * @interface KeyboardEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nconst KeyboardEventInterface = {\r\n  ...UIEventInterface,\r\n  key: getEventKey,\r\n  code: 0,\r\n  location: 0,\r\n  ctrlKey: 0,\r\n  shiftKey: 0,\r\n  altKey: 0,\r\n  metaKey: 0,\r\n  repeat: 0,\r\n  locale: 0,\r\n  getModifierState: getEventModifierState,\r\n  // Legacy Interface\r\n  charCode: function(event) {\r\n    // `charCode` is the result of a KeyPress event and represents the value of\r\n    // the actual printable character.\r\n\r\n    // KeyPress is deprecated, but its replacement is not yet final and not\r\n    // implemented in any major browser. Only KeyPress has charCode.\r\n    if (event.type === 'keypress') {\r\n      return getEventCharCode(event);\r\n    }\r\n    return 0;\r\n  },\r\n  keyCode: function(event) {\r\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\r\n    // physical keyboard key.\r\n\r\n    // The actual meaning of the value depends on the users' keyboard layout\r\n    // which cannot be detected. Assuming that it is a US keyboard layout\r\n    // provides a surprisingly accurate mapping for US and European users.\r\n    // Due to this, it is left to the user to implement at this time.\r\n    if (event.type === 'keydown' || event.type === 'keyup') {\r\n      return event.keyCode;\r\n    }\r\n    return 0;\r\n  },\r\n  which: function(event) {\r\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\r\n    // type of the event.\r\n    if (event.type === 'keypress') {\r\n      return getEventCharCode(event);\r\n    }\r\n    if (event.type === 'keydown' || event.type === 'keyup') {\r\n      return event.keyCode;\r\n    }\r\n    return 0;\r\n  },\r\n};\r\nexport const SyntheticKeyboardEvent = createSyntheticEvent(\r\n  KeyboardEventInterface,\r\n);\r\n\r\n/**\r\n * @interface PointerEvent\r\n * @see http://www.w3.org/TR/pointerevents/\r\n */\r\nconst PointerEventInterface = {\r\n  ...MouseEventInterface,\r\n  pointerId: 0,\r\n  width: 0,\r\n  height: 0,\r\n  pressure: 0,\r\n  tangentialPressure: 0,\r\n  tiltX: 0,\r\n  tiltY: 0,\r\n  twist: 0,\r\n  pointerType: 0,\r\n  isPrimary: 0,\r\n};\r\nexport const SyntheticPointerEvent = createSyntheticEvent(\r\n  PointerEventInterface,\r\n);\r\n\r\n/**\r\n * @interface TouchEvent\r\n * @see http://www.w3.org/TR/touch-events/\r\n */\r\nconst TouchEventInterface = {\r\n  ...UIEventInterface,\r\n  touches: 0,\r\n  targetTouches: 0,\r\n  changedTouches: 0,\r\n  altKey: 0,\r\n  metaKey: 0,\r\n  ctrlKey: 0,\r\n  shiftKey: 0,\r\n  getModifierState: getEventModifierState,\r\n};\r\nexport const SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\r\n */\r\nconst TransitionEventInterface = {\r\n  ...EventInterface,\r\n  propertyName: 0,\r\n  elapsedTime: 0,\r\n  pseudoElement: 0,\r\n};\r\nexport const SyntheticTransitionEvent = createSyntheticEvent(\r\n  TransitionEventInterface,\r\n);\r\n\r\n/**\r\n * @interface WheelEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nconst WheelEventInterface = {\r\n  ...MouseEventInterface,\r\n  deltaX(event) {\r\n    return 'deltaX' in event\r\n      ? event.deltaX\r\n      : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\r\n      'wheelDeltaX' in event\r\n      ? -event.wheelDeltaX\r\n      : 0;\r\n  },\r\n  deltaY(event) {\r\n    return 'deltaY' in event\r\n      ? event.deltaY\r\n      : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\r\n      'wheelDeltaY' in event\r\n      ? -event.wheelDeltaY\r\n      : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\r\n      'wheelDelta' in event\r\n      ? -event.wheelDelta\r\n      : 0;\r\n  },\r\n  deltaZ: 0,\r\n\r\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\r\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\r\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\r\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\r\n  deltaMode: 0,\r\n};\r\nexport const SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}