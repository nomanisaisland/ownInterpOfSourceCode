{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport { getStackByFiberInDevAndProd } from './ReactFiberComponentStack';\nexport function createCapturedValue(value, source) {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}","map":{"version":3,"names":["getStackByFiberInDevAndProd","createCapturedValue","value","source","stack"],"sources":["D:/project/font-end/debug-anything/react-test/src/react/packages/react-reconciler/src/ReactCapturedValue.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from './ReactInternalTypes';\r\n\r\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\r\n\r\nexport type CapturedValue<T> = {|\r\n  value: T,\r\n  source: Fiber | null,\r\n  stack: string | null,\r\n|};\r\n\r\nexport function createCapturedValue<T>(\r\n  value: T,\r\n  source: Fiber,\r\n): CapturedValue<T> {\r\n  // If the value is an error, call this function immediately after it is thrown\r\n  // so the stack is accurate.\r\n  return {\r\n    value,\r\n    source,\r\n    stack: getStackByFiberInDevAndProd(source),\r\n  };\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,SAAQA,2BAAR,QAA0C,4BAA1C;AAQA,OAAO,SAASC,mBAAT,CACLC,KADK,EAELC,MAFK,EAGa;EAClB;EACA;EACA,OAAO;IACLD,KADK;IAELC,MAFK;IAGLC,KAAK,EAAEJ,2BAA2B,CAACG,MAAD;EAH7B,CAAP;AAKD"},"metadata":{},"sourceType":"module"}