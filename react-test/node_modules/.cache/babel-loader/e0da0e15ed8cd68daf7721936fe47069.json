{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nconst ReactDebugCurrentFrame = {};\nlet currentExtraStackFrame = null;\nexport function setExtraStackFrame(stack) {\n  if (__DEV__) {\n    currentExtraStackFrame = stack;\n  }\n}\n\nif (__DEV__) {\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    if (__DEV__) {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    let stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    const impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nexport default ReactDebugCurrentFrame;","map":{"version":3,"names":["ReactDebugCurrentFrame","currentExtraStackFrame","setExtraStackFrame","stack","__DEV__","getCurrentStack","getStackAddendum","impl"],"sources":["E:/debug-anything/react-test/src/react/packages/react/src/ReactDebugCurrentFrame.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst ReactDebugCurrentFrame = {};\r\n\r\nlet currentExtraStackFrame = (null: null | string);\r\n\r\nexport function setExtraStackFrame(stack: null | string) {\r\n  if (__DEV__) {\r\n    currentExtraStackFrame = stack;\r\n  }\r\n}\r\n\r\nif (__DEV__) {\r\n  ReactDebugCurrentFrame.setExtraStackFrame = function(stack: null | string) {\r\n    if (__DEV__) {\r\n      currentExtraStackFrame = stack;\r\n    }\r\n  };\r\n  // Stack implementation injected by the current renderer.\r\n  ReactDebugCurrentFrame.getCurrentStack = (null: null | (() => string));\r\n\r\n  ReactDebugCurrentFrame.getStackAddendum = function(): string {\r\n    let stack = '';\r\n\r\n    // Add an extra top frame while an element is being validated\r\n    if (currentExtraStackFrame) {\r\n      stack += currentExtraStackFrame;\r\n    }\r\n\r\n    // Delegate to the injected renderer-specific implementation\r\n    const impl = ReactDebugCurrentFrame.getCurrentStack;\r\n    if (impl) {\r\n      stack += impl() || '';\r\n    }\r\n\r\n    return stack;\r\n  };\r\n}\r\n\r\nexport default ReactDebugCurrentFrame;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,sBAAsB,GAAG,EAA/B;AAEA,IAAIC,sBAAsB,GAAI,IAA9B;AAEA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAkD;EACvD,IAAIC,OAAJ,EAAa;IACXH,sBAAsB,GAAGE,KAAzB;EACD;AACF;;AAED,IAAIC,OAAJ,EAAa;EACXJ,sBAAsB,CAACE,kBAAvB,GAA4C,UAASC,KAAT,EAA+B;IACzE,IAAIC,OAAJ,EAAa;MACXH,sBAAsB,GAAGE,KAAzB;IACD;EACF,CAJD,CADW,CAMX;;;EACAH,sBAAsB,CAACK,eAAvB,GAA0C,IAA1C;;EAEAL,sBAAsB,CAACM,gBAAvB,GAA0C,YAAmB;IAC3D,IAAIH,KAAK,GAAG,EAAZ,CAD2D,CAG3D;;IACA,IAAIF,sBAAJ,EAA4B;MAC1BE,KAAK,IAAIF,sBAAT;IACD,CAN0D,CAQ3D;;;IACA,MAAMM,IAAI,GAAGP,sBAAsB,CAACK,eAApC;;IACA,IAAIE,IAAJ,EAAU;MACRJ,KAAK,IAAII,IAAI,MAAM,EAAnB;IACD;;IAED,OAAOJ,KAAP;EACD,CAfD;AAgBD;;AAED,eAAeH,sBAAf"},"metadata":{},"sourceType":"module"}